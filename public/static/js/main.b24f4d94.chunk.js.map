{"version":3,"sources":["bundles/ipfs-provider.js","bundles/task.js","lib/files.js","bundles/local-storage.js","bundles/files/consts.js","icons/GlyphSmallCancel.js","icons/StrokeIpld.js","components/button/Button.js","components/checkbox/Checkbox.js","lib/tours.js","lib/sort.js","constants/pinning.js","components/error/ErrorBoundary.js","components/box/Box.js","helpers/i8n.js","icons/StrokeFolder.js","settings/Title.js","i18n.js","icons/StrokeCube.js","bundles/files/utils.js","components/analytics-toggle/AnalyticsToggle.js","icons/GlyphSmallTick.js","components/details/Details.js","bundles/gateway.js","lib/count-dirs.js","bundles/files/actions.js","bundles/config.js","loader/ComponentLoader.js","bundles/files/selectors.js","bundles/files/index.js","bundles/enum.js","navigation/ipfs-logo-text-vert.svg","navigation/ipfs-logo-text-horiz.svg","icons/StrokeMarketing.js","icons/StrokeWeb.js","icons/StrokeSettings.js","navigation/NavBar.js","components/notify/Toast.js","components/notify/Notify.js","components/connected/Connected.js","components/tour/TourHelper.js","files/explore-form/FilesExploreForm.js","App.js","bundles/app-idle.js","bundles/node-bandwidth-chart.js","bundles/node-bandwidth.js","bundles/peers.js","bundles/peer-locations.js","bundles/pinning.js","status/LoadableStatusPage.js","files/LoadableFilesPage.js","explore/LoadableStartExploringPage.js","explore/LoadableExplorePage.js","peers/LoadablePeersPage.js","settings/LoadableSettingsPage.js","settings/AnalyticsPage.js","welcome/LoadableWelcomePage.js","blank/BlankPage.js","bundles/routes.js","bundles/redirects.js","bundles/config-save.js","bundles/tours.js","bundles/experiments.js","bundles/notify.js","bundles/connected.js","bundles/retry-init.js","bundles/identity.js","lib/bundle-cache.js","bundles/ipfs-desktop.js","bundles/repo-stats.js","bundles/analytics.js","bundles/cli-tutor-mode.js","bundles/index.js","lib/dnd-backend.js","webpack:///./src/index.js?b635"],"names":["ACTIONS","Enum","readAPIAddressSetting","setting","readSetting","asAPIOptions","checkValidAPIAddress","value","asHttpClientOptions","asMultiaddress","asURL","URL","toString","_","multiaddr","parseHTTPClientOptions","readHTTPClientOptions","input","JSON","parse","url","username","password","headers","authorization","btoa","host","apiPath","protocol","port","ipfs","extra","getIpfs","actions","doTryInitIpfs","a","store","doInitIpfs","perform","context","apiAddress","getState","ipfsOptions","connectionTest","last","stats","bw","test","loadHttpClientModule","HttpClient","providers","httpClient","result","Error","doStopIpfs","stop","dispatch","type","doUpdateIpfsApiAddress","address","IPFS_API_ADDRESS_INVALID","writeSetting","IPFS_API_ADDRESS_UPDATED","payload","IPFS_API_ADDRESS_PENDING_FIRST_CONNECTION","pending","IPFS_STOPPED","NOTIFY_DISMISSED","succeeded","IPFS_CONNECT_SUCCEED","IPFS_CONNECT_FAILED","doDismissIpfsInvalidAddress","doGetPathInfo","path","files","stat","doCheckIfPinned","cid","first","pin","ls","paths","bundle","name","reducer","state","message","IPFS_INIT","task","status","ready","ok","provider","service","failed","invalidAddress","IPFS_API_ADDRESS_INVALID_DISMISS","pendingFirstConnection","update","getExtraArgs","selectIpfsReady","selectIpfsProvider","selectIpfsApiAddress","selectIpfsInvalidAddress","selectIpfsInitFailed","selectIpfsPendingFirstConnection","init","spawn","id","Symbol","start","performance","now","process","next","done","duration","error","normalizeFiles","streams","file","push","filepath","webkitRelativePath","content","size","downloadSingle","gatewayUrl","apiUrl","filename","method","makeCIDFromFiles","dirpath","Date","mkdir","cp","rm","recursive","downloadMultiple","e","Promise","reject","getDownloadLink","length","getShareableLink","encodeURIComponent","getCarLink","humanSize","opts","filesize","spacer","String","fromCharCode","round","standard","base","bits","window","localStorage","getItem","console","setItem","stringify","IS_MAC","navigator","userAgent","indexOf","FETCH","MOVE","COPY","DELETE","MAKE_DIR","WRITE","DOWNLOAD_LINK","SHARE_LINK","ADD_BY_PATH","PIN_ADD","PIN_REMOVE","PIN_LIST","SIZE_GET","DISMISS_ERRORS","CLEAR_ALL","WRITE_UPDATED","UPDATE_SORT","SORTING","BY_NAME","BY_SIZE","IGNORED_FILES","DEFAULT_STATE","pageContent","mfsSize","pins","sorting","by","asc","finished","cliCmdKeys","DOWNLOAD_OBJECT_COMMAND","REMOVE_FILE_FROM_IPFS","UPDATE_IPFS_CONFIG","PIN_OBJECT","RENAME_IPFS_OBJECT","ADD_FILE","ADD_DIRECTORY","CREATE_NEW_DIRECTORY","FROM_IPFS","ADD_NEW_PEER","DOWNLOAD_CAR_COMMAND","cliCmdPrefixes","cliCommandList","filePath","op","fileName","prefix","replace","trim","GlyphSmallCancel","props","viewBox","d","StrokeIpld","getButtonClassName","fill","bg","color","danger","disabled","Button","className","minWidth","children","style","classNames","defaultProps","Checkbox","label","checked","onChange","event","target","appTour","getSteps","t","placement","disableBeacon","styles","tooltipContent","padding","tooltipFooter","display","options","width","backgroundColor","arrowColor","textColor","zIndex","welcomeTour","Trans","primaryColor","statusTour","i18nKey","locale","filesTour","href","rel","peersTour","settingsTour","sortByName","dir","numeric","sensitivity","b","localeCompare","undefined","sortBySize","sortByProperty","property","complianceReportsHomepage","pinningServiceTemplates","icon","apiEndpoint","visitServiceUrl","map","domain","hostname","complianceReportUrl","ErrorBoundary","hasError","info","this","setState","log","root","Countly","q","Fallback","fallback","React","Component","ErrorIcon","Box","background","getJoyrideLocales","translate","back","close","skip","StrokeFolder","Title","localesList","Object","values","locales","i18n","use","ICU","Backend","LanguageDetector","backend","backends","LocalStorageBackend","HttpBackend","backendOptions","defaultVersion","version","expirationTime","loadPath","ns","defaultNS","fallbackNS","fallbackLng","zh","default","debug","DEBUG","react","wait","useSuspense","bindI18n","bindStore","nsMode","StrokeCube","Task","send","action","sortFiles","sortDir","nameSort","sizeSort","sort","cumulativeSize","infoFromPath","uriDecode","realPath","isMfs","isPins","isRoot","check","substring","startsWith","endsWith","decodeURIComponent","Channel","queue","asyncIterator","pop","resolve","unshift","promise","ensureMFS","selectFilesPathInfo","ExampleRequest","QueryParams","params","searchParams","entries","key","AnalyticType","enabled","summary","exampleRequest","sourceLink","queryParams","sourceLinkLabel","useState","isOpen","setOpen","onClick","connect","analyticsActionsToRecord","analyticsConsent","doToggleConsent","doToggleAnalytics","analyticsEnabled","open","Fragment","summaryText","includes","GlyphSmallTick","Details","DEFAULT_GATEWAY","IMG_ARRAY","hash","availableGateway","publicGateway","checkValidHttpUrl","checkViaImgSrc","any","element","imgUrl","checkImgSrcPromise","timeout","timer","clearTimeout","setTimeout","img","Image","onerror","onload","src","doSetAvailableGateway","doUpdatePublicGateway","selectAvailableGateway","gateway","selectPublicGateway","findUniqueDirectories","res","Set","dirname","add","countDirs","f","filter","p","directories","forEach","fileFromStats","pinned","isParent","split","Boolean","cidOrPath","realMfsPath","memStat","memoize","hashOrPath","CID","getRawPins","getPinCIDs","getPins","importFiles","doPinsFetch","all","cids","doFilesFetch","isReady","isConnected","selectIpfsConnected","isFetching","selectFilesIsFetching","doFetch","fetched","resolvedPath","time","read","cat","dirStats","selectFilesSorting","doFilesWrite","source","$","basename","slice","totalSize","reduce","prev","progress","offset","uploaded","added","numberOfFiles","numberOfDirs","expectedResponseCount","assign","code","dst","join","doFilesDelete","removeLocally","removeRemotely","remoteServices","tryAsync","fn","remote","lastIndexOf","doUpdateHash","doFilesAddPath","srcPath","doFilesDownloadLink","selectApiUrl","selectGatewayUrl","doFilesDownloadCarLink","doFilesShareLink","doFilesMove","mv","page","selectFiles","pagePath","doFilesCopy","doFilesMakeDir","parents","doFilesPin","doFilesUnpin","doFilesDismissErrors","doFilesNavigateTo","link","doFilesUpdateSorting","doFilesClear","doFilesSizeGet","doGetFileSizeThroughCid","channel","addAll","wrapWithDirectory","then","dirCount","absPath","parent","parentPath","parentInfo","upper","LOCAL_HOSTNAMES","createAsyncResourceBundle","staleAfter","persist","checkIfOnline","getPromise","config","getAll","rawConf","conf","Buffer","isBuffer","getURLFromAddress","gw","localUrl","checkIfSubdomainGatewayUrlIsAccessible","checkIfGatewayUrlIsAccessible","Array","isArray","Addresses","toUri","assumeHttp","selectConfigObject","createSelector","configStr","selectAvailableGatewayUrl","selectBootstrapPeers","Bootstrap","selectIsConfigBlocked","errorType","reactConfigFetch","shouldUpdate","ipfsReady","actionCreator","fetch","ComponentLoader","margin","xmlns","strokeDasharray","stroke","strokeWidth","fillOpacity","x1","y1","x2","y2","gradientUnits","stopColor","selectors","selectCurrentDirectorySize","curr","selectPins","selectFilesSize","some","selectShowLoadingAnimation","find","selectFilesPending","s","selectFilesFinished","selectFilesHasError","selectFilesErrors","selectHasUpperDirectory","routeInfo","sorts","updateJob","createFilesBundle","pullPending","rest","end","tasks","from","variants","create","StrokeMarketing","StrokeWeb","StrokeSettings","NavLink","to","alternative","Svg","location","active","anchorClass","classnames","svgClass","role","title","whiteSpace","withTranslation","codeUrl","bugsUrl","gitRevision","revisionUrl","webUiVersion","webUiVersionUrl","overflowY","height","ipfsLogoTextVert","alt","ipfsLogoTextHoriz","Toast","onDismiss","left","transform","notify","notifyI18nKey","doNotifyDismiss","show","msgArgs","ipfsConnected","doSetIsNodeInfoOpen","pickTitleKey","pickColor","opacity","aria-hidden","doEnableTours","aria-label","FilesExploreForm","hideExplore","bind","onKeyDown","onBrowse","onInspect","evt","preventDefault","isValid","isIPFS","data-id","inputClass","borderRadius","placeholder","aria-describedby","App","addFiles","filesPromise","filesPathInfo","isFilesPage","pattern","addAtPath","handleJoyrideCb","data","doDisableTooltip","Page","route","doExploreUserProvidedPath","connectDropTarget","canDrop","isOver","showTooltip","getNavHelper","doUpdateUrl","minHeight","WebkitAppRegion","paddingTop","paddingBottom","run","steps","callback","scrollToFirstStep","disableOverlay","AppWithDropTarget","DropTarget","NativeTypes","FILE","drop","monitor","didDrop","dropTarget","defaults","idleTimeout","idleAction","stopWhenTabInactive","ricOptions","createAppIdle","spec","idleDispatcher","stopWhenInactive","debounce","raf","ric","subscribe","createNodeBandwidthChart","windowSize","in","out","chartData","selectNodeBandwidthChartData","nodeBandwidthChart","doUpdateNodeBandwidthChartData","timestamp","startIndex","concat","x","y","parseInt","rateIn","toFixed","rateOut","findIndex","reactUpdateNodeBandwidthChartData","lastSuccess","args","actionBaseType","ms","seconds","retryAfter","selectNodeBandwidthEnabled","nodeBandwidth","selectNodeBandwidthLastSuccess","reactNodeBandwidthFetchWhenIdle","swarmPeersTTL","swarm","peers","verbose","asyncResourceReducer","asyncResult","selectedPeers","selectPeersCount","doConnectSwarm","addr","permanent","maddr","peerId","getPeerId","rawAddr","decapsulateCode","get","preexisting","ID","Addrs","set","doMarkConfigAsOutdated","reactPeersFetchWhenIdle","reactPeersFetchWhenActive","appTime","peersInfo","isLoading","selectSelectedPeers","doSetSelectedPeers","peer","UPDATE_EVERY","geoipVersion","dependencies","IP_REPLACE_MAP","GEOIP_MAP","isNonHomeIPv4","toLocationString","loc","country","country_name","city","parseConnection","protoNames","parseLatency","latency","exec","getPublicIP","identity","addresses","Multiaddr","nodeAddress","ip","isV4Format","isV6Format","isPrivate","isPrivateAndNearby","publicIP","isNearby","cidrSubnet","contains","PeerLocationResolver","geoipCache","getConfiguredCache","maxAge","weeks","cache","failedAddrs","HLRU","PQueue","concurrency","autoStart","geoipLookupPromises","Map","pass","optimizedPeerSet","ipv4Tuple","stringTuples","ipv4Addr","has","country_code","delete","sortedPeersByLatency","createPeersLocations","peerLocResolver","selectPeers","findLocations","reactPeerLocationsFetch","selectPeerLocationsForSwarm","locations","locationObj","flagCode","coordinates","longitude","latitude","connection","direction","protocols","Protocol","selectPeersCoordinates","previous","hasFoundACloseCoordinate","previousCoordinates","currentX","currentY","peerIds","cacheId2Cid","at","parseService","remoteServiceTemplates","template","endpoint","parsedService","numberOfPins","online","pinCount","mfsPolicyEnableFlag","autoUpload","serviceName","uniqueCidBatches","arrayOfCids","array","i","chunk","pinningBundle","persistActions","pinningServices","remotePins","notRemotePins","localPinsSize","localNumberOfPins","arePinningServicesSupported","adds","removals","uniq","arr","r","oldServices","newServices","withPinStats","oldStats","newStats","doFetchRemotePins","skipCache","selectPinningServices","allCids","selectRemotePins","selectNotRemotePins","allSettled","skipCids","cidChunk","cidsToCheck","notPins","pinCid","notPinCid","pinning","selectLocalPinsSize","selectLocalNumberOfPins","doSelectRemotePinsForFile","pinningServicesNames","doFetchLocalPinsStats","localPins","doFetchPinningServices","commands","isPinRemotePresent","Subcommands","c","Name","selectRemoteServiceTemplates","offlineListOfServices","doFetchPinningServicesStats","servicesWithStats","selectArePinningServicesSupported","selectPinningServicesDefaults","nickname","doSetPinning","services","wasLocallyPinned","previousRemotePins","pinLocally","errorMsg","shouldPin","doAddPinningService","secretApiKey","replaceAll","doRemovePinningService","doSetAutoUploadForService","configName","previousPolicy","LoadableStatusPage","Loadable","LoadableFilesPage","LoadableStartExploringPage","LoadableExplorePage","LoadablePeersPage","LoadableSettingsPage","Helmet","AnalyticsToggle","LoadableWelcomePage","BlankPage","createRouteBundle","StartExploringPage","ExplorePage","FilesPage","PeersPage","AnalyticsPage","SettingsPage","WelcomePage","StatusPage","routeInfoSelector","redirectsBundle","reactToEmptyHash","reactToIpfsConnectionFail","doSaveConfig","selectConfigIsSaving","doPerformSaveConfig","attempt","obj","isSaving","CONFIG_SAVE","errorMessage","lastError","config_save","selectConfigSaveLastSuccess","selectConfigSaveLastError","toursBundle","tooltip","doDisableTours","selectTours","tours","selectToursEnabled","selectShowTooltip","EXPERIMENTS","mergeState","keys","toggleEnabled","unblock","blocked","block","selectExperimentsState","experiments","selectExperiments","doExpToggleAction","EXPERIMENTS_TOGGLE","experimentsBundle","EXPERIMENTS_UPDATE_STATE","defaultState","eventId","match","EXP_ACTIONS","EXP_TOGGLE_FAILED","selectNotify","selectNotifyI18nKey","FILES_ACTIONS","reactNotifyOkDismiss","selectConnectedLastError","connected","selectIsNodeInfoOpen","isNodeInfoOpen","retryInit","startedAt","failedAt","selectInitStartedAt","selectInitFailedAt","reactConnectionInitRetry","Infinity","selectIdentityLastSuccess","reactIdentityFetch","idLastSuccess","connLastError","bundleCache","baseSelectors","selectIsIpfsDesktop","ipfsDesktop","selectDesktopCountlyActions","desktopSelectors","selectDesktopVersion","selectDesktopCountlyDeviceId","countlyDeviceId","countlyActions","desktopActions","doDesktopAddConsent","consent","addConsent","doDesktopRemoveConsent","removeConsent","doDesktopUpdateLanguage","language","updateLanguage","repo","selectRepoSize","repoStats","repoSize","selectRepoNumObjects","numObjects","reactRepoStatsFetch","DESKTOP","ASYNC_ACTIONS_TO_RECORD","INIT","CONIFG","FILES","EXP","DESKTOP_SETTING_TOGGLE","consentGroups","safe","selectAnalytics","analytics","selectAnalyticsConsent","selectAnalyticsEnabled","selectAnalyticsAskToEnable","lastEnabledAt","lastDisabledAt","selectAnalyticsActionsToRecord","isDesktop","doEnableAnalytics","doDisableAnalytics","opt_out","opt_in","doRemoveConsent","doAddConsent","item","parseTask","parseTaskResult","parseToggleResult","changeCase","constantCase","createAnalyticsBundle","countlyUrl","countlyAppKey","appVersion","appGitRevision","ANALYTICS_ENABLED","ANALYTICS_DISABLED","ANALYTICS_ADD_CONSENT","ANALYTICS_REMOVE_CONSENT","require_consent","app_key","app_version","subscribeToSelectors","getMiddleware","count","dur","reactIsCliTutorModeEnabled","isCliTutorModeEnabled","isEnabled","selectIsCliTutorModeEnabled","cliTutorMode","selectIsCliTutorModalOpen","showCliTutorModal","selectCliOptions","cliOptions","doToggleCliTutorMode","doSetCliOptions","doOpenCliTutorModal","openModal","composeBundles","createCacheBundle","cacheFn","appIdle","ipfsProvider","identityBundle","routesBundle","filesBundle","exploreBundle","configBundle","configSaveBundle","gatewayBundle","nodeBandwidthBundle","nodeBandwidthChartBundle","peersBundle","peerLocationsBundle","notifyBundle","connectedBundle","retryInitBundle","cliTutorModeBundle","createBackend","manager","HTML5Backend","handler","handleTopDropCapture","call","currentNativeSource","dataTransfer","items","every","kind","getFilesFromDataTransferItems","initialData","getStore","ReactDOM","render","I18nextProvider","DndProvider","DndBackend","document","getElementById"],"mappings":"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","file":"static/js/main.b24f4d94.chunk.js","sourcesContent":["import multiaddr from 'multiaddr'\nimport HttpClient from 'ipfs-http-client'\n// @ts-ignore\nimport { getIpfs, providers } from 'ipfs-provider'\nimport first from 'it-first'\nimport last from 'it-last'\nimport * as Enum from './enum'\nimport { perform } from './task'\nimport { readSetting, writeSetting } from './local-storage'\n\n/* TODO: restore when  no longer bundle standalone ipld with ipld-explorer\n * context: https://github.com/ipfs/ipld-explorer-components/pull/289\n// @ts-ignore\nimport ipldGit from 'ipld-git'\n// @ts-ignore\nimport ipldEthereum from 'ipld-ethereum'\n*/\n\n/**\n * @typedef {import('ipfs').IPFSService} IPFSService\n * @typedef {import('cids')} CID\n * @typedef {import('ipfs').FileStat} FileStat\n * @typedef {'httpClient'|'jsIpfs'|'windowIpfs'|'webExt'} ProviderName\n * @typedef {Object} Model\n * @property {null|string|HTTPClientOptions} apiAddress\n * @property {null|ProviderName} provider\n * @property {boolean} failed\n * @property {boolean} ready\n * @property {boolean} invalidAddress\n * @property {boolean} pendingFirstConnection\n *\n *\n * @typedef {import('./task').Perform<'IPFS_INIT', Error, InitResult, void>} Init\n * @typedef {Object} Stopped\n * @property {'IPFS_STOPPED'} type\n *\n * @typedef {Object} AddressUpdated\n * @property {'IPFS_API_ADDRESS_UPDATED'} type\n * @property {string|HTTPClientOptions} payload\n *\n * @typedef {Object} AddressInvalid\n * @property {'IPFS_API_ADDRESS_INVALID'} type\n *\n * @typedef {Object} Dismiss\n * @property {'IPFS_API_ADDRESS_INVALID_DISMISS'} type\n *\n * @typedef {Object} ConnectSuccess\n * @property {'IPFS_CONNECT_SUCCEED'} type\n *\n * @typedef {Object} ConnectFail\n * @property {'IPFS_CONNECT_FAILED'} type\n *\n * @typedef {Object} DismissError\n * @property {'NOTIFY_DISMISSED'} type\n *\n * @typedef {Object} PendingFirstConnection\n * @property {'IPFS_API_ADDRESS_PENDING_FIRST_CONNECTION'} type\n * @property {boolean} pending\n *\n * @typedef {Object} InitResult\n * @property {ProviderName} provider\n * @property {IPFSService} ipfs\n * @property {string} [apiAddress]\n * @typedef {Init|Stopped|AddressUpdated|AddressInvalid|Dismiss|PendingFirstConnection|ConnectFail|ConnectSuccess|DismissError} Message\n */\n\nexport const ACTIONS = Enum.from([\n  'IPFS_INIT',\n  'IPFS_STOPPED',\n  'IPFS_API_ADDRESS_UPDATED',\n  'IPFS_API_ADDRESS_PENDING_FIRST_CONNECTION',\n  'IPFS_API_ADDRESS_INVALID',\n  'IPFS_API_ADDRESS_INVALID_DISMISS',\n  // Notifier actions\n  'IPFS_CONNECT_FAILED',\n  'IPFS_CONNECT_SUCCEED',\n  'NOTIFY_DISMISSED'\n])\n\n/**\n * @param {Model} state\n * @param {Message} message\n * @returns {Model}\n */\nconst update = (state, message) => {\n  switch (message.type) {\n    case ACTIONS.IPFS_INIT: {\n      const { task } = message\n      switch (task.status) {\n        case 'Init': {\n          return { ...state, ready: false }\n        }\n        case 'Exit': {\n          const { result } = task\n          if (result.ok) {\n            const { provider, apiAddress, ipfs: service } = result.value\n            ipfs = service\n            return {\n              ...state,\n              ready: true,\n              failed: false,\n              provider,\n              apiAddress: apiAddress || state.apiAddress\n            }\n          } else {\n            return {\n              ...state,\n              ready: false,\n              failed: true\n            }\n          }\n        }\n        default: {\n          return state\n        }\n      }\n    }\n    case ACTIONS.IPFS_STOPPED: {\n      return { ...state, ready: false, failed: false }\n    }\n    case ACTIONS.IPFS_API_ADDRESS_UPDATED: {\n      return { ...state, apiAddress: message.payload, invalidAddress: false }\n    }\n    case ACTIONS.IPFS_API_ADDRESS_INVALID: {\n      return { ...state, invalidAddress: true }\n    }\n    case ACTIONS.IPFS_API_ADDRESS_INVALID_DISMISS: {\n      return { ...state, invalidAddress: true }\n    }\n    case ACTIONS.IPFS_API_ADDRESS_PENDING_FIRST_CONNECTION: {\n      const { pending } = message\n      return { ...state, pendingFirstConnection: pending }\n    }\n    case ACTIONS.IPFS_CONNECT_SUCCEED: {\n      return { ...state, failed: false }\n    }\n    case ACTIONS.IPFS_CONNECT_FAILED: {\n      return { ...state, failed: true }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\n/**\n * @returns {Model}\n */\nconst init = () => {\n  return {\n    apiAddress: readAPIAddressSetting(),\n    provider: null,\n    failed: false,\n    ready: false,\n    invalidAddress: false,\n    pendingFirstConnection: false\n  }\n}\n\n/**\n * @returns {HTTPClientOptions|string|null}\n */\nconst readAPIAddressSetting = () => {\n  const setting = readSetting('ipfsApi')\n  return setting == null ? null : asAPIOptions(setting)\n}\n\n/**\n * @param {string|object} value\n * @returns {boolean}\n */\nexport const checkValidAPIAddress = (value) => {\n  return asAPIOptions(value) != null\n}\n\n/**\n * @param {string|object} value\n * @returns {HTTPClientOptions|string|null}\n */\nconst asAPIOptions = (value) => asHttpClientOptions(value) || asMultiaddress(value) || asURL(value)\n\n/**\n * Attempts to turn cast given value into URL.\n * Return either string instance or `null`.\n * @param {any} value\n * @returns {string|null}\n */\nconst asURL = (value) => {\n  try {\n    return new URL(value).toString()\n  } catch (_) {\n    return null\n  }\n}\n\n/**\n * Attempts to turn cast given value into Multiaddr.\n * Return either string instance or `null`.\n * @param {any} value\n * @returns {string|null}\n */\nconst asMultiaddress = (value) => {\n  // ignore empty string, as it will produce '/'\n  if (value != null && value !== '') {\n    try {\n      return multiaddr(value).toString()\n    } catch (_) {}\n  }\n  return null\n}\n\n/**\n * @typedef {Object} HTTPClientOptions\n * @property {string} [url]\n * @property {string} [host]\n * @property {string} [port] - (e.g. '443', or '80')\n * @property {string} [protocol] - (e.g 'https', 'http')\n * @property {string} [apiPath] - ('/api/v0' by default)\n * @property {Object<string, string>} [headers]\n */\n\n/**\n * @typedef {Object} IPFSProviderHttpClientOptions\n * @property {Object} [ipld]\n * @property {string|undefined} [url]\n */\n\n/**\n * Attempts to turn parse given input as an options object for ipfs-http-client.\n * @param {string|object} value\n * @returns {HTTPClientOptions|null}\n */\nconst asHttpClientOptions = (value) =>\n  typeof value === 'string' ? parseHTTPClientOptions(value) : readHTTPClientOptions(value)\n\n/**\n *\n * @param {string} input\n */\nconst parseHTTPClientOptions = (input) => {\n  // Try parsing and reading as json\n  try {\n    return readHTTPClientOptions(JSON.parse(input))\n  } catch (_) {}\n\n  // turn URL with inlined basic auth into client options object\n  try {\n    const url = new URL(input)\n    const { username, password } = url\n    if (username && password) {\n      url.username = url.password = ''\n      return {\n        url: url.toString(),\n        headers: {\n          authorization: `Basic ${btoa(username + ':' + password)}`\n        }\n      }\n    }\n  } catch (_) { }\n\n  return null\n}\n\n/**\n * @param {Object<string, any>} value\n * @returns {HTTPClientOptions|null}\n */\nconst readHTTPClientOptions = (value) => {\n  // https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-http-client#importing-the-module-and-usage\n  if (value && (!!value.url || value.host || value.apiPath || value.protocol || value.port || value.headers)) {\n    return value\n  } else {\n    return null\n  }\n}\n\n/** @type {IPFSService|null} */\nlet ipfs = null\n\n/**\n * @typedef {typeof extra} Extra\n */\nconst extra = {\n  getIpfs () {\n    return ipfs\n  }\n}\n\n/**\n * @typedef {import('redux-bundler').Selectors<typeof selectors>} Selectors\n */\n\nconst selectors = {\n  /**\n   * @param {State} state\n   */\n  selectIpfsReady: state => state.ipfs.ready,\n  /**\n   * @param {State} state\n   */\n  selectIpfsProvider: state => state.ipfs.provider,\n  /**\n   * @param {State} state\n   */\n  selectIpfsApiAddress: state => state.ipfs.apiAddress,\n  /**\n   * @param {State} state\n   */\n  selectIpfsInvalidAddress: state => state.ipfs.invalidAddress,\n  /**\n   * @param {State} state\n   */\n  selectIpfsInitFailed: state => state.ipfs.failed,\n  /**\n   * @param {State} state\n   */\n  selectIpfsPendingFirstConnection: state => state.ipfs.pendingFirstConnection\n}\n\n/**\n * @typedef {import('redux-bundler').Actions<typeof actions>} Actions\n * @typedef {Selectors & Actions} Ext\n * @typedef {import('redux-bundler').Context<State, Message, Ext, Extra>} Context\n */\n\nconst actions = {\n  /**\n   * @returns {function(Context):Promise<boolean>}\n   */\n  doTryInitIpfs: () => async ({ store }) => {\n    // There is a code in `bundles/retry-init.js` that reacts to `IPFS_INIT`\n    // action and attempts to retry.\n    try {\n      await store.doInitIpfs()\n      return true\n    } catch (_) {\n      // Catches connection errors like timeouts\n      return false\n    }\n  },\n  /**\n   * @returns {function(Context):Promise<InitResult>}\n   */\n  doInitIpfs: () => perform('IPFS_INIT',\n    /**\n    * @param {Context} context\n    * @returns {Promise<InitResult>}\n    */\n    async (context) => {\n      const { apiAddress } = context.getState().ipfs\n      /** @type {IPFSProviderHttpClientOptions} */\n      let ipfsOptions = {\n        /* TODO: restore when  no longer bundle standalone ipld with ipld-explorer\n        * context: https://github.com/ipfs/ipld-explorer-components/pull/289\n        ipld: {\n          formats: [\n            ...Object.values(ipldEthereum),\n            ipldGit\n          ]\n        }\n        */\n      }\n\n      if (typeof apiAddress === 'string') {\n        ipfsOptions = {\n          ...ipfsOptions,\n          url: apiAddress\n        }\n      } else {\n        ipfsOptions = {\n          ...apiAddress,\n          ...ipfsOptions\n        }\n      }\n\n      const result = await getIpfs({\n        // @ts-ignore - TS can't seem to infer connectionTest option\n        connectionTest: async (ipfs) => {\n          // ipfs connection is working if can we fetch the bw stats.\n          // See: https://github.com/ipfs-shipyard/ipfs-webui/issues/835#issuecomment-466966884\n          try {\n            await last(ipfs.stats.bw())\n          } catch (err) {\n            if (!/bandwidth reporter disabled in config/.test(err)) {\n              throw err\n            }\n          }\n\n          return true\n        },\n        loadHttpClientModule: () => HttpClient,\n        providers: [\n          providers.httpClient(ipfsOptions)\n        ]\n      })\n\n      if (!result) {\n        throw Error(`Could not connect to the IPFS API (${apiAddress})`)\n      } else {\n        return result\n      }\n    }),\n  /**\n   * @returns {function(Context):Promise<void>}\n   */\n  doStopIpfs: () => async (context) => {\n    if (ipfs) {\n      await ipfs.stop()\n      context.dispatch({ type: 'IPFS_STOPPED' })\n    }\n  },\n\n  /**\n   * @param {string} address\n   * @returns {function(Context):Promise<boolean>}\n   */\n  doUpdateIpfsApiAddress: (address) => async (context) => {\n    const apiAddress = asAPIOptions(address)\n    if (apiAddress == null) {\n      context.dispatch({ type: ACTIONS.IPFS_API_ADDRESS_INVALID })\n      return false\n    } else {\n      await writeSetting('ipfsApi', apiAddress)\n      context.dispatch({ type: ACTIONS.IPFS_API_ADDRESS_UPDATED, payload: apiAddress })\n\n      // Sends action to indicate we're going to try to update the IPFS API address.\n      // There is logic to retry doTryInitIpfs in bundles/retry-init.js, so\n      // we're triggering the PENDING_FIRST_CONNECTION action here to avoid blocking\n      // the UI while we automatically retry.\n      context.dispatch({\n        type: ACTIONS.IPFS_API_ADDRESS_PENDING_FIRST_CONNECTION,\n        pending: true\n      })\n      context.dispatch({\n        type: ACTIONS.IPFS_STOPPED\n      })\n      context.dispatch({\n        type: ACTIONS.NOTIFY_DISMISSED\n      })\n      const succeeded = await context.store.doTryInitIpfs()\n      if (succeeded) {\n        context.dispatch({\n          type: ACTIONS.IPFS_CONNECT_SUCCEED\n        })\n      } else {\n        context.dispatch({\n          type: ACTIONS.IPFS_CONNECT_FAILED\n        })\n      }\n      context.dispatch({\n        type: ACTIONS.IPFS_API_ADDRESS_PENDING_FIRST_CONNECTION,\n        pending: false\n      })\n      return succeeded\n    }\n  },\n\n  /**\n   * @returns {function(Context):void}\n   */\n  doDismissIpfsInvalidAddress: () => (context) => {\n    context.dispatch({ type: 'IPFS_API_ADDRESS_INVALID_DISMISS' })\n  },\n\n  /**\n   * @param {string} path\n   * @returns {function(Context):Promise<FileStat>}\n   */\n  doGetPathInfo: (path) => async () => {\n    if (ipfs) {\n      return await ipfs.files.stat(path)\n    } else {\n      throw Error('IPFS is not initialized')\n    }\n  },\n\n  /**\n   * @param {CID} cid\n   * @returns {function(Context):Promise<boolean>}\n   */\n  doCheckIfPinned: (cid) => async () => {\n    if (ipfs == null) {\n      return false\n    }\n\n    try {\n      const value = await first(ipfs.pin.ls({ paths: [cid], type: 'recursive' }))\n      return !!value\n    } catch (_) { return false }\n  }\n}\n\n/**\n * @typedef {Actions & Selectors} IPFSProviderStore\n * @typedef {Object} State\n * @property {Model} ipfs\n */\n\nconst bundle = {\n  name: 'ipfs',\n  /**\n   * @param {Model|void} state\n   * @param {Message} message\n   * @returns {Model}\n   */\n  reducer: (state, message) => update(state == null ? init() : state, message),\n  getExtraArgs () {\n    return extra\n  },\n  ...selectors,\n  ...actions\n}\n\nexport default bundle\n","// @ts-check\n\n/**\n  * @template State, Message, Ext, Extra\n  * @typedef {import('redux-bundler').Context<State, Message, Ext, Extra>} BundlerContext\n  */\n\n/**\n * A Result is the result of a computation that may fail.\n *\n * @template X = Error\n * @template T\n * @typedef {{ok:false, error:X} | {ok:true, value: T}} Result\n */\n\n/**\n * Represents task in it's initialization phase.\n *\n * @template Init\n * @typedef {Object} InitState\n * @property {'Init'} status\n * @property {Symbol} id - Unique identifier of this task.\n * @property {Init} init - Initialization paramater provided on spawn.\n */\n\n/**\n * Reperesents task in it's completion phase.\n *\n * @template Failure = Error - Type of `result.error` if failed.\n * @template Success - Type of `result.value` if succeeded.\n * @typedef {Object} ExitState\n * @property {'Exit'} status\n * @property {Symbol} id - Unique identifier of this task.\n * @property {number} duration - Time spend from initialization to completion.\n * @property {Result<Failure, Success>} result - Result of the task.\n */\n\n/**\n * Type reperesenting a state of the performed task. It is state machine\n * representing task state that will initial be in `InitState` and on completion\n * transition to `ExitState`.\n *\n * @template Failure = Error\n * @template Success\n * @template Init = void\n * @typedef {InitState<Init>|ExitState<Failure, Success>} PerformState\n */\n\n/**\n * Type representing actions dispatched when performing a task.\n *\n * @template {string} Type - String literal used as `action.type`.\n * @template Failure - Type of the `result.error` for a failed task.\n * @template Success - Type of the `result.value` for the successfull task.\n * @template Init - Initialization parameter passed to perform.\n * @typedef {Object} Perform\n * @property {Type} type\n * @property {PerformState<Failure, Success, Init>} task\n */\n\n/**\n * Takes the action `type`, a `task` (in form of async function) and an optional\n * `init` parameters to produce a `doX` style action creator. On exectuion\n * `{ type, task }` actions will be dispatched, where `task` represents a state\n * (machine) of the executed task, which proceeds as follows:\n *\n * - At the start of the execution, task will have an `Init` status, which is\n *  dispatched just once: `{ status: 'Init' id: Symbol, init: Init}`. An `id`\n *  is unique identifier of the task (kind of like PID) and `init` is an\n *  optional parameter that was passed to `perform` (Which can be useful in\n *  certain reducers and middleware that need to keep track of state).\n *\n * - Once task is finishes, action with status `Exit` is dispatced just once:\n *   `{ status: 'Exit', id: Symbol, duration: number, result: Result<Error, Success> }`\n *   with some new new fields:\n *     - `duration` - Is a time it took a task from `Init` to `Exit` in ms.\n *     - `result` - Is a result of the task. On succesful completion it is\n *       `{ok:true, value:Success}` (value is return value of the async\n *       function). On failure it is `{ok:false, error:Error}` (`error` is an\n *       expception thrown, or a rejection reason of the promise).\n *\n * @template {string} Type - Corresponds to `action.type` for all the actions\n * @template Success - Type of the `action.task.result.vaule` when task is\n * complete successfully. It is also a value of the promise returned by\n * running `store.doX` created by this decorator.\n * @template Init - Type of the initialization paramater.\n * @template State - Type of the `context.getState()` for this task.\n * @template {Object} StoreExt - Store extension.\n * @template {Object} ContextExt - Context extension\n * @template {BundlerContext<State, Perform<Type, Error, Success, Init>, StoreExt, ContextExt>} Context\n *\n * @param {Type} type - Type of the actions this will dispatch.\n * @param {(context:Context) => Promise<Success>} task\n * @param {Init[]} rest\n * @returns {(context:Context) => Promise<Success>}\n */\nexport const perform = (type, task, ...[init]) =>\n  // eslint-disable-next-line require-yield\n  spawn(type, async function * (context) {\n    return await task(context)\n  }, init)\n\n/**\n * @template Message\n * @typedef {Object} SendState\n * @property {Symbol} id\n * @property {'Send'} status\n * @property {Message} message\n */\n\n/**\n * Type reperesenting a state of the spawned task. It is state machine that will\n * transition from InitState -> SendState -> ExitState. It is guaranteed that\n * spawned task will be in `InitState` and `ExitState` exactly once. It is also\n * guaranteed that task can be in `SendState` 0 or 1 or more times between\n * `InitState` and `ExitStates`.\n *\n * @template Message\n * @template Fail\n * @template Success\n * @template Input = void\n * @typedef {InitState<Input>|SendState<Message>|ExitState<Fail, Success>} SpawnState\n */\n\n/**\n * Represents actions that will be dispatched by the `spawn`-ed task.\n * This is more advanced superset of `Perform` as spawned tasks can send\n * messages during execution.\n *\n * @template {string} Name\n * @template Message - Type of messages it produces\n * @template Fail - Type of the failure error\n * @template Success - Type of the success value\n * @template Init = void - Initial type\n * @typedef {Object} Spawn\n * @property {Name} type\n * @property {SpawnState<Message, Fail, Success, Init>} task\n */\n\n/**\n * This is more advanced form of `perform`, which can be used to execute tasks\n * that need to send messages (that turn into dispatched actions) during\n * execution.\n *\n * It takes the action `type`, a `task` (in form of async generator) and an\n * optional `init` parameters to produce a `doX` style action creator. On\n * exectuion `{ type, task }` actions will be dispatched, where `task`\n * represents a state (machine) of the executed task, which proceeds as follows:\n *\n * - At the start of the execution, task will have an `Init` status, which is\n *  dispatched just once: `{ status: 'Init' id: Symbol, init: Init}`. An `id`\n *  is unique identifier of the task (kind of like PID) and `init` is an\n *  optional parameter that was passed to `perform` (Which can be useful in\n *  certain reducers and middleware that need to keep track of state).\n *\n * - During execution task may produce messages by yielding them. On each\n *   message dispatche actions task will have a `Send` status:\n *  `{ status: 'Send', id: Symbol, message: Message }`. Task can produce >= 0\n *  such actions. (If your task produces 0 messages you want to use perform\n *   instead).\n *\n Once task is finishes, action with status `Exit` is dispatced just once:\n *   `{ status: 'Exit', id: Symbol, duration: number, result: Result<Error, Success> }`\n *   with some new new fields:\n *     - `duration` - Is a time it took a task from `Init` to `Exit` in ms.\n *     - `result` - Is a result of the task. On succesful completion it is\n *       `{ok:true, value:Success}` (value is return value of the async\n *       generator). On failure it is `{ok:false, error:Error}` (`error` is an\n *       expception thrown, or a rejection reason of the promise).\n *\n * @template {string} Type - Corresponds to `action.type` for all the actions\n * that this task will dispatch.\n * @template Message - Type of messages that task will produce (by yielding).\n * Which correspond to `action.task.message` when `action.status`\n * is `Send`.\n * @template Success - Type of the `action.task.result.vaule` when task is\n * complete successfully. It is also a value of the promise returned by\n * running `store.doX` created by this decorator.\n * @template Init - Type of the initialization paramater.\n * @template State - Type of the `context.getState()` for this task.\n * @template {Object} StoreExt - Store extension.\n * @template {Object} ContextExt - Context extension\n * @template {BundlerContext<State, Spawn<Type, Message, Error, Success, Init>, StoreExt, ContextExt>} Context\n *\n * @param {Type} type - Type of the actions this will dispatch.\n * @param {(context:Context) => AsyncGenerator<Message, Success, void>} task - Task\n * @param {Init[]} rest - Optinal initialization parameter.\n * @returns {(context:Context) => Promise<Success>}\n */export const spawn = (type, task, ...[init]) => async (context) => {\n  // Generate unique id for this task\n  const id = Symbol(type)\n  const start = performance.now()\n\n  try {\n    context.dispatch({ type, task: { id, status: 'Init', init } })\n\n    const process = task(context)\n    while (true) {\n      const next = await process.next()\n      if (next.done) {\n        const { value } = next\n        context.dispatch({\n          type,\n          task: {\n            id,\n            status: 'Exit',\n            duration: performance.now() - start,\n            result: {\n              ok: true, value\n            }\n          }\n        })\n        return value\n      } else {\n        const { value } = next\n        context.dispatch({\n          type,\n          task: {\n            id,\n            status: 'Send',\n            message: value\n          }\n        })\n      }\n    }\n  } catch (error) {\n    context.dispatch({\n      type,\n      task: {\n        id,\n        status: 'Exit',\n        duration: performance.now() - start,\n        result: { ok: false, error }\n      }\n    })\n    // Propagate error to a caller.\n    throw error\n  }\n}\n","import filesize from 'filesize'\n/**\n * @typedef {import('ipfs').IPFSService} IPFSService\n * @typedef {import('../bundles/files/actions').FileStat} FileStat\n * @typedef {import('cids')} CID\n */\n\n/**\n * @typedef {Object} FileExt\n * @property {string} [filepath]\n * @property {string} [webkitRelativePath]\n *\n * @typedef {FileExt &  File} ExtendedFile\n *\n * @typedef {Object} FileStream\n * @property {string} path\n * @property {Blob} content\n * @property {number} size\n *\n * @param {ExtendedFile[]} files\n * @returns {FileStream[]}\n */\nexport function normalizeFiles (files) {\n  const streams = []\n\n  for (const file of files) {\n    streams.push({\n      path: file.filepath || file.webkitRelativePath || file.name,\n      content: file,\n      size: file.size\n    })\n  }\n\n  return streams\n}\n\n/**\n * @typedef {Object} FileDownload\n * @property {string} url\n * @property {string} filename\n * @property {string} method\n *\n * @param {FileStat} file\n * @param {string} gatewayUrl\n * @param {string} apiUrl\n * @returns {Promise<FileDownload>}\n */\nasync function downloadSingle (file, gatewayUrl, apiUrl) {\n  let url, filename, method\n\n  if (file.type === 'directory') {\n    const name = file.name || `download_${file.cid}` // Name is not always available.\n    url = `${apiUrl}/api/v0/get?arg=${file.cid}&archive=true&compress=true`\n    filename = `${name}.tar.gz`\n    method = 'POST' // API is POST-only\n  } else {\n    url = `${gatewayUrl}/ipfs/${file.cid}?download=true&filename=${file.name}`\n    filename = file.name\n    method = 'GET'\n  }\n\n  return { url, filename, method }\n}\n\n/**\n * @param {FileStat[]} files\n * @param {IPFSService} ipfs\n * @returns {Promise<CID>}\n */\nexport async function makeCIDFromFiles (files, ipfs) {\n  // Note: we don't use 'object patch' here, it was deprecated.\n  // We are using MFS for creating CID of an ephemeral directory\n  // because it handles HAMT-sharding of big directories automatically\n  // See: https://github.com/ipfs/go-ipfs/issues/8106\n  const dirpath = `/zzzz_${Date.now()}`\n  await ipfs.files.mkdir(dirpath, {})\n\n  for (const { cid, name } of files) {\n    await ipfs.files.cp(`/ipfs/${cid}`, `${dirpath}/${name}`)\n  }\n\n  const stat = await ipfs.files.stat(dirpath)\n\n  // Do not wait for this\n  ipfs.files.rm(dirpath, { recursive: true })\n\n  return stat.cid\n}\n\n/**\n *\n * @param {FileStat[]} files\n * @param {string} apiUrl\n * @param {IPFSService} ipfs\n * @returns {Promise<FileDownload>}\n */\nasync function downloadMultiple (files, apiUrl, ipfs) {\n  if (!apiUrl) {\n    const e = new Error('api url undefined')\n    return Promise.reject(e)\n  }\n\n  const cid = await makeCIDFromFiles(files, ipfs)\n\n  return {\n    url: `${apiUrl}/api/v0/get?arg=${cid}&archive=true&compress=true`,\n    filename: `download_${cid}.tar.gz`,\n    method: 'POST' // API is POST-only\n  }\n}\n\n/**\n *\n * @param {FileStat[]} files\n * @param {string} gatewayUrl\n * @param {string} apiUrl\n * @param {IPFSService} ipfs\n * @returns {Promise<FileDownload>}\n */\nexport async function getDownloadLink (files, gatewayUrl, apiUrl, ipfs) {\n  if (files.length === 1) {\n    return downloadSingle(files[0], gatewayUrl, apiUrl)\n  }\n\n  return downloadMultiple(files, apiUrl, ipfs)\n}\n\n/**\n * @param {FileStat[]} files\n * @param {string} gatewayUrl\n * @param {IPFSService} ipfs\n * @returns {Promise<string>}\n */\nexport async function getShareableLink (files, gatewayUrl, ipfs) {\n  let cid\n  let filename\n\n  if (files.length === 1) {\n    cid = files[0].cid\n    if (files[0].type === 'file') {\n      filename = `?filename=${encodeURIComponent(files[0].name)}`\n    }\n  } else {\n    cid = await makeCIDFromFiles(files, ipfs)\n  }\n\n  return `${gatewayUrl}/ipfs/${cid}${filename || ''}`\n}\n\n/**\n *\n * @param {FileStat[]} files\n * @param {string} gatewayUrl\n * @param {IPFSService} ipfs\n * @returns {Promise<string>}\n */\nexport async function getCarLink (files, gatewayUrl, ipfs) {\n  let cid, filename\n\n  if (files.length === 1) {\n    cid = files[0].cid\n    filename = encodeURIComponent(files[0].name)\n  } else {\n    cid = await makeCIDFromFiles(files, ipfs)\n  }\n\n  return `${gatewayUrl}/ipfs/${cid}?format=car&filename=${filename || cid}.car`\n}\n\n/**\n * @param {number} size in bytes\n * @param {object} opts format customization\n * @returns {string} human-readable size\n */\nexport function humanSize (size, opts) {\n  if (typeof size === 'undefined') return 'N/A'\n  return filesize(size || 0, {\n    // base-2 byte units (GiB, MiB, KiB) to remove any ambiguity\n    spacer: String.fromCharCode(160), // non-breakable space (&nbsp)\n    round: size >= 1073741824 ? 1 : 0, // show decimal > 1GiB\n    standard: 'iec',\n    base: 2,\n    bits: false,\n    ...opts\n  })\n}\n","/**\n * Reads setting from the `localStorage` with a given `id` as JSON. If JSON\n * parse is failed setting is interpreted as a string value.\n * @param {string} id\n * @returns {string|object|null}\n */\nexport const readSetting = (id) => {\n  /** @type {string|null} */\n  let setting = null\n  if (window.localStorage) {\n    try {\n      setting = window.localStorage.getItem(id)\n    } catch (error) {\n      console.error(`Error reading '${id}' value from localStorage`, error)\n    }\n\n    try {\n      return JSON.parse(setting || '')\n    } catch (_) {\n      // res was probably a string, so pass it on.\n      return setting\n    }\n  }\n\n  return setting\n}\n\n/**\n * @param {string} id\n * @param {string|number|boolean|object} value\n */\nexport const writeSetting = (id, value) => {\n  try {\n    window.localStorage.setItem(id, JSON.stringify(value))\n  } catch (error) {\n    console.error(`Error writing '${id}' value to localStorage`, error)\n  }\n}\n","export const IS_MAC = navigator.userAgent.indexOf('Mac') !== -1\n\n/**\n * @typedef {import('./protocol').Message} Message\n * @typedef {import('./protocol').Model} Model\n */\nexport const ACTIONS = {\n  /** @type {'FILES_FETCH'} */\n  FETCH: ('FILES_FETCH'),\n  /** @type {'FILES_MOVE'} */\n  MOVE: ('FILES_MOVE'),\n  /** @type {'FILES_COPY'} */\n  COPY: ('FILES_COPY'),\n  /** @type {'FILES_DELETE'} */\n  DELETE: ('FILES_DELETE'),\n  /** @type {'FILES_MAKEDIR'} */\n  MAKE_DIR: ('FILES_MAKEDIR'),\n  /** @type {'FILES_WRITE'} */\n  WRITE: ('FILES_WRITE'),\n  /** @type {'FILES_DOWNLOADLINK'} */\n  DOWNLOAD_LINK: ('FILES_DOWNLOADLINK'),\n  /** @type {'FILES_SHARE_LINK'} */\n  SHARE_LINK: ('FILES_SHARE_LINK'),\n  /** @type {'FILES_ADDBYPATH'} */\n  ADD_BY_PATH: ('FILES_ADDBYPATH'),\n  /** @type {'FILES_PIN_ADD'} */\n  PIN_ADD: ('FILES_PIN_ADD'),\n  /** @type {'FILES_PIN_REMOVE'} */\n  PIN_REMOVE: ('FILES_PIN_REMOVE'),\n  /** @type {'FILES_PIN_LIST'} */\n  PIN_LIST: ('FILES_PIN_LIST'),\n  /** @type {'FILES_SIZE_GET'} */\n  SIZE_GET: ('FILES_SIZE_GET'),\n  /** @type {'FILES_DISMISS_ERRORS'} */\n  DISMISS_ERRORS: ('FILES_DISMISS_ERRORS'),\n  /** @type {'FILES_CLEAR_ALL'} */\n  CLEAR_ALL: ('FILES_CLEAR_ALL'),\n  /** @type {'FILES_WRITE_UPDATED'} */\n  WRITE_UPDATED: ('FILES_WRITE_UPDATED'),\n  /** @type {'FILES_UPDATE_SORT'} */\n  UPDATE_SORT: ('FILES_UPDATE_SORT')\n}\n\nexport const SORTING = {\n  /** @type {'name'} */\n  BY_NAME: ('name'),\n  /** @type {'size'} */\n  BY_SIZE: ('size')\n}\n\nexport const IGNORED_FILES = [\n  '.DS_Store',\n  'thumbs.db',\n  'desktop.ini'\n]\n\n/** @type {Model} */\nexport const DEFAULT_STATE = {\n  pageContent: null,\n  mfsSize: -1,\n  pins: [],\n  sorting: { // TODO: cache this\n    by: SORTING.BY_NAME,\n    asc: true\n  },\n  pending: [],\n  finished: [],\n  failed: []\n}\n\nexport const cliCmdKeys = {\n  DOWNLOAD_OBJECT_COMMAND: 'downloadObjectCommand',\n  REMOVE_FILE_FROM_IPFS: 'removeFileFromIpfs',\n  UPDATE_IPFS_CONFIG: 'updateIpfsConfig',\n  PIN_OBJECT: 'pinObject',\n  RENAME_IPFS_OBJECT: 'renameObject',\n  ADD_FILE: 'addNewFile',\n  ADD_DIRECTORY: 'addNewDirectory',\n  CREATE_NEW_DIRECTORY: 'createNewDirectory',\n  FROM_IPFS: 'fromIpfs',\n  ADD_NEW_PEER: 'addNewPeer',\n  DOWNLOAD_CAR_COMMAND: 'downloadCarCommand'\n}\n\nexport const cliCmdPrefixes = {\n  PIN_OBJECT: 'ipfs pin'\n}\n\nexport const cliCommandList = {\n  [cliCmdKeys.UPDATE_IPFS_CONFIG]: () => 'ipfs config replace <path-to-settings.json>',\n  /**\n   * @param {string} filePath\n   */\n  [cliCmdKeys.REMOVE_FILE_FROM_IPFS]: (filePath) => `ipfs files rm -r \"${filePath}\"`,\n  /**\n   * @param {string} cid\n   */\n  [cliCmdKeys.DOWNLOAD_OBJECT_COMMAND]: (cid) => `ipfs get ${cid}`,\n  /**\n   * @param {string} cid\n   * @param {string} op\n   */\n  [cliCmdKeys.PIN_OBJECT]: (cid, op) => `${cliCmdPrefixes.PIN_OBJECT} ${op} ${cid}`,\n  /**\n   * @param {string} filePath\n   * @param {string} fileName\n   */\n  [cliCmdKeys.RENAME_IPFS_OBJECT]: (filePath, fileName) => {\n    const prefix = filePath.replace(fileName, '').trim()\n    return `ipfs files mv \"${filePath}\" \"${prefix}<new-name>\"`\n  },\n  /**\n   * @param {string} path\n   */\n  [cliCmdKeys.ADD_FILE]: (path) => `ipfs files cp /ipfs/$(ipfs add -Q <local-file>) \"${path}/<dest-name>\"`,\n  /**\n   * @param {string} path\n   */\n  [cliCmdKeys.ADD_DIRECTORY]: (path) => `ipfs files cp /ipfs/$(ipfs add -r -Q <local-folder>) \"${path}/<dest-name>\"`,\n  /**\n   * @param {string} path\n   */\n  [cliCmdKeys.CREATE_NEW_DIRECTORY]: (path) => `ipfs files mkdir \"${path}/<folder-name>\"`,\n  /**\n   * @param {string} path\n   */\n  [cliCmdKeys.FROM_IPFS]: (path) => `ipfs files cp /ipfs/<cid> \"${path}/<dest-name>\"`,\n  [cliCmdKeys.ADD_NEW_PEER]: () => 'ipfs swarm connect <peer-multiaddr>',\n  /**\n   * @param {string} cid\n   */\n  [cliCmdKeys.DOWNLOAD_CAR_COMMAND]: (cid) => `ipfs dag export ${cid}`\n}\n","import React from 'react'\n\nconst GlyphSmallCancel = props => (\n  <svg viewBox='0 0 100 100' {...props}>\n    <path d='M63.79 63.2l-3.88 3.88-9.71-9.7-9.7 9.7-3.88-3.88 9.7-9.71-9.7-9.7 3.88-3.88 9.7 9.7 9.71-9.7 3.88 3.88-9.7 9.7 9.7 9.71z' />\n  </svg>\n)\n\nexport default GlyphSmallCancel\n","import React from 'react'\n\nconst StrokeIpld = props => (\n  <svg viewBox='0 0 100 100' {...props}>\n    <path d='M87.589 44.265c0-1.157-.45-2.245-1.27-3.062a4.304 4.304 0 0 0-3.062-1.269 4.304 4.304 0 0 0-3.062 1.269 4.337 4.337 0 0 0 0 6.125c.602.602 1.35 1 2.164 1.172v2.442l-14.686 9.276v-19.79l4.498-2.842v-3.717a4.27 4.27 0 0 0 1.827-1.067 4.337 4.337 0 0 0 0-6.125 4.337 4.337 0 0 0-6.126 0 4.304 4.304 0 0 0-1.27 3.063c0 1.157.45 2.245 1.27 3.062a4.282 4.282 0 0 0 1.963 1.107V36.3L51.11 48.128v-8.901l9.304-5.877v-7.051a4.282 4.282 0 0 0 1.986-1.114 4.336 4.336 0 0 0-.001-6.125 4.337 4.337 0 0 0-6.125 0h-.001a4.337 4.337 0 0 0 0 6.125c.52.519 1.145.859 1.804 1.059v5.818l-6.967 4.401V15.062a4.283 4.283 0 0 0 2.008-1.12 4.337 4.337 0 0 0-.001-6.126 4.337 4.337 0 0 0-6.125 0h-.001a4.337 4.337 0 0 0 0 6.126 4.273 4.273 0 0 0 1.783 1.053v15.881l-7.23-4.566v-3.436a4.292 4.292 0 0 0 2.009-1.12 4.337 4.337 0 0 0 0-6.125 4.337 4.337 0 0 0-6.126 0 4.304 4.304 0 0 0-1.27 3.063c0 1.157.45 2.245 1.27 3.062a4.276 4.276 0 0 0 1.78 1.053v4.79l9.566 6.042v21.108l-7.708-4.226v-7.809a4.275 4.275 0 0 0 2.034-1.128 4.337 4.337 0 0 0 0-6.125 4.337 4.337 0 0 0-6.126 0 4.304 4.304 0 0 0-1.27 3.063c0 1.157.45 2.245 1.27 3.062a4.284 4.284 0 0 0 1.756 1.046v6.61l-11.705-6.417v-6.217a4.28 4.28 0 0 0 1.984-1.117 4.3 4.3 0 0 0 1.27-3.063c0-1.157-.45-2.245-1.27-3.062a4.336 4.336 0 0 0-6.125 0 4.337 4.337 0 0 0 0 6.125c.51.51 1.132.858 1.804 1.062v7.621l3.646 2.004v13.632l-10.582-5.77V51.62a4.29 4.29 0 0 0 2.05-1.133 4.337 4.337 0 0 0 0-6.125 4.304 4.304 0 0 0-3.061-1.269 4.304 4.304 0 0 0-3.063 1.269 4.337 4.337 0 0 0 0 6.125 4.285 4.285 0 0 0 1.738 1.041v3.812l33.359 18.269v11.397a4.277 4.277 0 0 0-1.783 1.053 4.337 4.337 0 0 0 0 6.125 4.32 4.32 0 0 0 3.063 1.266 4.316 4.316 0 0 0 3.063-1.267 4.337 4.337 0 0 0 0-6.125 4.29 4.29 0 0 0-2.008-1.119V73.444l33.585-21.216v-3.892a4.29 4.29 0 0 0 1.625-1.008 4.3 4.3 0 0 0 1.269-3.063zM30.46 60.969V47.345l18.314 10.066v13.542zm34.876-19.065v19.79L51.11 70.68V50.89zm3.067-12.164c0-.676.264-1.312.742-1.79a2.525 2.525 0 0 1 1.79-.74c.647 0 1.296.247 1.789.74a2.536 2.536 0 0 1 0 3.581 2.535 2.535 0 0 1-3.58 0 2.516 2.516 0 0 1-.741-1.791zm-10.857-9.407a2.534 2.534 0 0 1 3.58 0 2.534 2.534 0 0 1 0 3.58 2.534 2.534 0 0 1-3.58 0 2.534 2.534 0 0 1 0-3.58zM48.264 9.09a2.536 2.536 0 0 1 3.58 0c.988.987.988 2.593.002 3.58a2.536 2.536 0 0 1-3.581 0 2.535 2.535 0 0 1-.001-3.58zm-10.305 9.601c0-.676.264-1.312.742-1.79a2.525 2.525 0 0 1 1.79-.74c.647 0 1.296.247 1.789.74a2.536 2.536 0 0 1 0 3.581 2.535 2.535 0 0 1-3.58 0 2.52 2.52 0 0 1-.741-1.791zm-.453 19.832c0-.676.264-1.312.742-1.79a2.525 2.525 0 0 1 1.79-.74c.647 0 1.296.247 1.789.74a2.536 2.536 0 0 1 0 3.581 2.535 2.535 0 0 1-3.58 0 2.525 2.525 0 0 1-.741-1.791zm-13.348-7.887a2.524 2.524 0 0 1 1.789-.74 2.526 2.526 0 0 1 2.532 2.531c0 .677-.264 1.312-.742 1.79-.422.422-.984.647-1.562.696h-.456c-.577-.049-1.14-.274-1.561-.696a2.534 2.534 0 0 1 0-3.581zM14.95 45.635a2.514 2.514 0 0 1 1.79-.742 2.534 2.534 0 0 1 1.789 4.322 2.533 2.533 0 0 1-3.58 0 2.533 2.533 0 0 1 0-3.58zm36.894 45.277a2.534 2.534 0 0 1-3.58 0 2.534 2.534 0 0 1 0-3.58 2.536 2.536 0 0 1 3.58 0 2.534 2.534 0 0 1 0 3.58zm33.202-44.857c-.955.955-2.624.957-3.58 0a2.534 2.534 0 0 1 1.79-4.322c.677 0 1.312.264 1.79.742.479.478.742 1.113.742 1.79s-.263 1.311-.742 1.79z' />\n  </svg>\n)\n\nexport default StrokeIpld\n","import React from 'react'\nimport './Button.css'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nconst getButtonClassName = ({ fill, bg, color, danger, disabled }, type) => {\n  if (danger) return 'bg-red fill-white white'\n  if (disabled) return 'bg-gray-muted fill-snow light-gray'\n  if (type === 'link') return 'link bg-transparent'\n  return `${fill} ${bg} ${color}`\n}\n\nconst Button = ({ className, minWidth, children, style, type, danger, ...props }) =>\n  <button type={type} className={classNames('Button transition-all sans-serif dib v-mid fw5 nowrap lh-copy bn br1 pa2 focus-outline', className, getButtonClassName(props, type))} disabled={props.disabled} style={{ minWidth, ...style }} {...props}>\n    {children}\n  </button>\n\nButton.defaultProps = {\n  bg: 'bg-teal',\n  color: 'white',\n  fill: 'white',\n  className: '',\n  minWidth: 140\n}\n\nButton.propTypes = {\n  danger: PropTypes.bool,\n  disabled: PropTypes.bool\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Tick from '../../icons/GlyphSmallTick'\nimport './Checkbox.css'\n\nconst Checkbox = ({ className, label, disabled, checked, onChange, ...props }) => {\n  className = `Checkbox dib sans-serif ${className}`\n  if (!disabled) {\n    className += ' pointer'\n  }\n\n  const change = (event) => {\n    onChange(event.target.checked)\n  }\n\n  return (\n    <label className={className} {...props}>\n      <input className='absolute' type='checkbox' checked={checked} disabled={disabled} onChange={change} />\n      <span className='dib v-mid br1 w1 h1 pointer'>\n        <Tick className='w1 h1 o-0 fill-aqua' viewBox='25 25 50 50' />\n      </span>\n      <span className='v-mid pl2'>\n        {label}\n      </span>\n    </label>\n  )\n}\n\nCheckbox.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.node,\n  disabled: PropTypes.bool,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n}\n\nCheckbox.defaultProps = {\n  className: '',\n  label: '',\n  disabled: false,\n  checked: null,\n  onChange: () => {}\n}\n\nexport default Checkbox\n","import React from 'react'\n\nexport const appTour = {\n  getSteps: ({ t }) => [{\n    content: <div className='montserrat white'>\n      <p className='ma0 pa0 tl f6'>{t('tour.tooltip')}</p>\n    </div>,\n    placement: 'left',\n    target: '.joyride-app-tour',\n    disableBeacon: true\n  }],\n  styles: {\n    tooltipContent: { padding: '0 20px 0 0' },\n    tooltipFooter: { display: 'none' },\n    options: {\n      width: '250px',\n      backgroundColor: 'rgba(105, 196, 205, 0.85)',\n      arrowColor: 'rgba(105, 196, 205, 0.85)',\n      textColor: '#fff',\n      zIndex: 999\n    }\n  }\n}\n\nexport const welcomeTour = {\n  getSteps: ({ t, Trans }) => [\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step1.title')}</h2>\n        <p className='tl f6'>{t('tour.step1.paragraph1')}</p>\n        <p className='tl f6'>{t('tour.step1.paragraph2')}</p>\n        <p className='tl f6'>{t('tour.step1.paragraph3')}</p>\n      </div>,\n      placement: 'center',\n      target: 'body'\n    }\n  ],\n  styles: {\n    options: {\n      width: '500px',\n      primaryColor: '#378085',\n      textColor: '#34373f',\n      zIndex: 999\n    }\n  }\n}\n\nexport const statusTour = {\n  getSteps: ({ t, Trans }) => [\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step1.title')}</h2>\n        <p className='tl f6'>{t('tour.step1.paragraph1')}</p>\n        <p className='tl f6'>{t('tour.step1.paragraph2')}</p>\n      </div>,\n      placement: 'center',\n      target: 'body'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step2.title')}</h2>\n        <p className='tl f6'>{t('tour.step2.paragraph1')}</p>\n        <p className='tl f6'>{t('tour.step2.paragraph2')}</p>\n      </div>,\n      placement: 'left',\n      target: '.joyride-app-status'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step3.title')}</h2>\n        <p className='tl f6'>{t('tour.step3.paragraph1')}</p>\n        <Trans i18nKey='tour.step3.paragraph2' t={t}>\n          <p className='tl f6'>Click on <code>Advanced</code> to see more info such as the gateway URL and addresses.</p>\n        </Trans>\n      </div>,\n      placement: 'bottom',\n      target: '.joyride-status-node'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step4.title')}</h2>\n        <p className='tl f6'>{t('tour.step4.paragraph1')}</p>\n        <p className='tl f6'>{t('tour.step4.paragraph2')}</p>\n      </div>,\n      placement: 'top',\n      target: '.joyride-status-charts'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.stepExplore.title')}</h2>\n        <p className='tl f6'>{t('tour.stepExplore.paragraph')}</p>\n      </div>,\n      locale: { last: t('tour.finish') },\n      placement: 'right',\n      target: '.joyride-app-explore'\n    }\n  ],\n  styles: {\n    options: {\n      width: '500px',\n      primaryColor: '#378085',\n      textColor: '#34373f',\n      zIndex: 999\n    }\n  }\n}\n\nexport const filesTour = {\n  getSteps: ({ t, Trans }) => [\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step1.title')}</h2>\n        <Trans i18nKey='tour.step1.paragraph1' t={t}>\n          <p className='tl f6'>\n            This is where the files on your <a className='teal link' href='https://docs.ipfs.io/concepts/file-systems/' rel='noopener noreferrer' target='_blank'>\n            Mutable File System (MFS)</a> live. You can add files or folders and manage them from this page.\n          </p>\n        </Trans>\n        <p className='tl f6'>{t('tour.step1.paragraph2')}</p>\n      </div>,\n      placement: 'center',\n      target: 'body'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step2.title')}</h2>\n        <p className='tl f6'>{t('tour.step2.paragraph1')}</p>\n        <ul className='pl4'>\n          <li className='tl f6'>{t('tour.step2.bullet1')}</li>\n          <li className='tl f6'>{t('tour.step2.bullet2')}</li>\n          <li className='tl f6'>{t('tour.step2.bullet3')}</li>\n        </ul>\n      </div>,\n      placement: 'bottom',\n      target: '.joyride-files-breadcrumbs'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step3.title')}</h2>\n        <p className='tl f6'>{t('tour.step3.paragraph1')}</p>\n        <p className='tl f6'>{t('tour.step3.paragraph2')}</p>\n        <Trans i18nKey='tour.step3.paragraph3' t={t}>\n          <p className='tl f6'>\n            If you want to add something that is already on IPFS, you can import it to your MFS by passing its <a className='teal link' href='https://docs.ipfs.io/concepts/content-addressing/' rel='noopener noreferrer' target='_blank'>Content\n            Identifier (CID)</a>.\n          </p>\n        </Trans>\n      </div>,\n      placement: 'bottom',\n      target: '.joyride-files-add'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step5.title')}</h2>\n        <p className='tl f6'>{t('tour.step5.paragraph1')}</p>\n        <p className='tl f6'>{t('tour.step5.paragraph2')}</p>\n        <p className='tl f6'>{t('tour.step5.paragraph3')}</p>\n      </div>,\n      locale: { last: t('tour.finish') },\n      placement: 'center',\n      target: 'body'\n    }\n  ],\n  styles: {\n    options: {\n      width: '500px',\n      primaryColor: '#378085',\n      textColor: '#34373f',\n      zIndex: 999\n    }\n  }\n}\n\nexport const peersTour = {\n  getSteps: ({ t }) => [\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step1.title')}</h2>\n        <p className='tl f6'>{t('tour.step1.paragraph1')}</p>\n        <p className='tl f6'>{t('tour.step1.paragraph2')}</p>\n      </div>,\n      placement: 'center',\n      target: 'body'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step2.title')}</h2>\n        <p className='tl f6'>{t('tour.step2.paragraph1')}</p>\n      </div>,\n      placement: 'bottom',\n      target: '.joyride-peers-map'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step3.title')}</h2>\n        <p className='tl f6'>{t('tour.step3.paragraph1')}</p>\n      </div>,\n      locale: { last: t('tour.finish') },\n      placement: 'top',\n      target: '.joyride-peers-table'\n    }\n  ],\n  styles: {\n    options: {\n      width: '500px',\n      primaryColor: '#378085',\n      textColor: '#34373f',\n      zIndex: 999\n    }\n  }\n}\n\nexport const settingsTour = {\n  getSteps: ({ t, Trans }) => [\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step1.title')}</h2>\n        <p className='tl f6'>{t('tour.step1.paragraph1')}</p>\n        <p className='tl f6'>{t('tour.step1.paragraph2')}</p>\n      </div>,\n      placement: 'center',\n      target: 'body'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step2.title')}</h2>\n        <p className='tl f6'>{t('tour.step2.paragraph1')}</p>\n      </div>,\n      placement: 'auto',\n      target: '.joyride-settings-customapi'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step3.title')}</h2>\n        <Trans i18nKey='tour.step3.paragraph1' t={t}>\n          <p className='tl f6'>If you have accounts with third-party remote pinning services, add them here so you can pin/unpin items to those services directly from the Files screen. You can learn more about third-party pinning services in the <a className='teal link' href='https://docs.ipfs.io/how-to/work-with-pinning-services' rel='noopener noreferrer' target='_blank'>IPFS Docs</a>.\n          </p>\n        </Trans>\n      </div>,\n      placement: 'auto',\n      target: '.joyride-settings-pinning'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step4.title')}</h2>\n        <Trans i18nKey='tour.step4.paragraph1' t={t}>\n          <p className='tl f6'>You can change the language of the Web UI.\n          If your preferred language isn't available, head over our project page in <a className='teal link' href='https://www.transifex.com/ipfs/ipfs-webui/translate/' rel='noopener noreferrer' target='_blank'>Transifex</a> to help us translate!\n          </p>\n        </Trans>\n      </div>,\n      placement: 'auto',\n      target: '.joyride-settings-language'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step5.title')}</h2>\n        <p className='tl f6'>{t('tour.step5.paragraph1')}</p>\n        <p className='tl f6'>{t('tour.step5.paragraph2')}</p>\n      </div>,\n      placement: 'auto',\n      target: '.joyride-settings-analytics'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step6.title')}</h2>\n        <p className='tl f6'>{t('tour.step6.paragraph1')}</p>\n      </div>,\n      placement: 'auto',\n      target: '.joyride-settings-tutormode'\n    },\n    {\n      content: <div className='montserrat charcoal'>\n        <h2 className='f3 fw4'>{t('tour.step7.title')}</h2>\n        <p className='tl f6'>{t('tour.step7.paragraph1')}</p>\n        <p className='tl f6'>{t('tour.step7.paragraph2')}</p>\n      </div>,\n      locale: { last: t('tour.finish') },\n      placement: 'auto',\n      target: '.joyride-settings-config'\n    }\n  ],\n  styles: {\n    options: {\n      width: '500px',\n      primaryColor: '#378085',\n      textColor: '#34373f',\n      zIndex: 999\n    }\n  }\n}\n","/**\n * Natural sort comparator for strings.\n *\n * @param {Number} dir - sorting direction, 1 for ascending or -1 for descending\n * @param {Intl.CollatorOptions} opts - localeCompare options (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare)\n * @returns {(a:string, b:string) => number}\n */\nexport function sortByName (dir = 1, opts = { numeric: true, sensitivity: 'base' }) {\n  return (a, b) => a.localeCompare(b, undefined, opts) * dir\n}\n\n/**\n * Numerical sort comparator.\n *\n * @param {Number} dir - sorting direction, 1 for ascending or -1 for descending\n * @returns {(a:number, b:number) => number}\n */\nexport function sortBySize (dir = 1) {\n  return (a, b) => (a - b) * dir\n}\n\n/**\n * Object sorting by property\n * @template {Object} T\n * @param {keyof T} property - object property to sort by\n * @param {1|-1} dir - sorting direction, 1 for ascending or -1 for descending\n * @returns {(a:T, b:T) => number}\n */\nexport function sortByProperty (property, dir = 1) {\n  // @ts-ignore - `a` and `b` may not be numbers\n  return ({ [property]: a }, { [property]: b }) => (a == null) - (b == null) || dir * +(a > b) || dir * -(a < b)\n}\n","// @ts-check\n// This is a list of predefined templates for popular services from the IPFS\n// community.  We are open to reviewing PRs that add more entries here,\n// but only well-established and mission-aligned services will be accepted.\n\nconst complianceReportsHomepage = 'https://ipfs-shipyard.github.io/pinning-service-compliance'\n\n/**\n * @typedef {object} PinningServiceTemplate\n * @property {string} name\n * @property {string} icon\n * @property {string} apiEndpoint\n * @property {string} visitServiceUrl\n * @property {string} [complianceReportUrl]\n */\n\n/**\n * @type {PinningServiceTemplate[]}\n */\nconst pinningServiceTemplates = [\n  {\n    name: 'Pinata',\n    icon: 'https://dweb.link/ipfs/QmVYXV4urQNDzZpddW4zZ9PGvcAbF38BnKWSgch3aNeViW?filename=pinata.svg',\n    apiEndpoint: 'https://api.pinata.cloud/psa',\n    visitServiceUrl: 'https://pinata.cloud/documentation#PinningServicesAPI'\n  }\n].map((service) => {\n  const domain = new URL(service.apiEndpoint).hostname\n  service.complianceReportUrl = `${complianceReportsHomepage}/${domain}.html`\n  return service\n})\n\nexport {\n  complianceReportsHomepage,\n  pinningServiceTemplates\n}\n","import React from 'react'\nimport ErrorIcon from '../../icons/GlyphSmallCancel'\nimport root from 'window-or-global'\n\nclass ErrorBoundary extends React.Component {\n  state = {\n    hasError: false\n  }\n\n  static defaultProps = {\n    fallback: ErrorIcon\n  }\n\n  componentDidCatch (error, info) {\n    this.setState({ hasError: true })\n    console.log(error)\n    if (root && root.Countly) {\n      root.Countly.q.push(['log_error'], error)\n    }\n  }\n\n  render () {\n    const { hasError } = this.state\n    const { children, fallback: Fallback } = this.props\n    return hasError ? <Fallback /> : children\n  }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\nimport ErrorBoundary from '../error/ErrorBoundary'\n\nexport const Box = ({\n  className = 'pa4',\n  style,\n  children,\n  ...props\n}) => {\n  return (\n    <section className={className} style={{ background: '#fbfbfb', ...style }}>\n      <ErrorBoundary>\n        {children}\n      </ErrorBoundary>\n    </section>\n  )\n}\n\nexport default Box\n","\nexport const getJoyrideLocales = (translate) => ({\n  back: translate('tour.back'),\n  close: translate('tour.close'),\n  last: translate('tour.last'),\n  next: translate('tour.next'),\n  skip: translate('tour.skip')\n})\n","import React from 'react'\n\nconst StrokeFolder = props => (\n  <svg viewBox='0 0 100 100' {...props}>\n    <path d='M72.53 32.38H55.08a3.76 3.76 0 0 1-3.44-2.25l-2.28-4.83a6 6 0 0 0-5.57-3.8H31.47c-6.37 0-11.56 5.5-11.56 12.18v32.64c0 6.68 5.19 12.18 11.56 12.18h41.06c6.37 0 11.56-5.46 11.56-12.18V44.56c0-6.72-5.19-12.18-11.56-12.18zM31.47 24.1h12.32A3.45 3.45 0 0 1 47 26.35l2.34 4.95a6.33 6.33 0 0 0 5.74 3.7h17.45a9.22 9.22 0 0 1 8.9 8.5H22.51v-9.8c0-5.3 4.02-9.6 8.96-9.6zm41.06 51.8H31.47c-4.94 0-9-4.3-9-9.58V45h59v21.32c.02 5.28-4 9.58-8.94 9.58z' />\n  </svg>\n)\n\nexport default StrokeFolder\n","import React from 'react'\n\nconst Title = ({ props, children }) => (\n  <h2 className='ttu tracked f6 fw4 teal mt0 mb3' {...props}>{ children }</h2>\n)\nexport default Title\n","import i18n from 'i18next'\nimport ICU from 'i18next-icu'\nimport Backend from 'i18next-chained-backend'\nimport LocalStorageBackend from 'i18next-localstorage-backend'\nimport HttpBackend from 'i18next-http-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { version } from '../package.json'\n\nimport locales from './lib/languages.json'\nexport const localesList = Object.values(locales)\n\ni18n\n  .use(ICU)\n  .use(Backend)\n  .use(LanguageDetector)\n  .init({\n    backend: {\n      backends: [\n        LocalStorageBackend,\n        HttpBackend\n      ],\n      backendOptions: [\n        { // LocalStorageBackend\n          defaultVersion: version,\n          expirationTime: (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ? 1 : 7 * 24 * 60 * 60 * 1000\n        },\n        { // HttpBackend\n          // ensure a relative path is used to look up the locales, so it works when loaded from /ipfs/<cid>\n          loadPath: 'locales/{{lng}}/{{ns}}.json'\n        }\n      ]\n    },\n    ns: ['app', 'welcome', 'status', 'files', 'explore', 'peers', 'settings', 'notify'],\n    defaultNS: 'app',\n    fallbackNS: 'app',\n    fallbackLng: {\n      'zh-Hans': ['zh-CN', 'en'],\n      'zh-Hant': ['zh-TW', 'en'],\n      zh: ['zh-CN', 'en'],\n      default: ['en']\n    },\n    debug: process.env.DEBUG,\n    // react i18next special options (optional)\n    react: {\n      wait: true,\n      useSuspense: false,\n      bindI18n: 'languageChanged loaded',\n      bindStore: 'added removed',\n      nsMode: 'default'\n    }\n  })\n\nexport default i18n\n","import React from 'react'\n\nconst StrokeCube = props => (\n  <svg viewBox='0 0 100 100' {...props}>\n    <path d='M84.173 64.865v-29.1a4.48 4.48 0 1 0-4.4-7.63l-25.35-14.61a4.7 4.7 0 0 0 0-1.5 4.485 4.485 0 0 0-8.86 1.4v.17l-25 14.85a4.48 4.48 0 1 0-4.74 7.32v29.08a4.48 4.48 0 0 0 1.5 8.71 4.14 4.14 0 0 0 .7-.06 4.24 4.24 0 0 0 1.51-.5l26 14.72v.27a4.49 4.49 0 0 0 4.49 3.76 4.2 4.2 0 0 0 .7 0 4.5 4.5 0 0 0 3.78-4.19l25-15.32a4.48 4.48 0 0 0 3.2 1.37 4.23 4.23 0 0 0 .7-.06 4.47 4.47 0 0 0 .8-8.63zm-5.15 1.56a4.42 4.42 0 0 0-.82 3l-24.63 15.13a4.5 4.5 0 0 0-2.55-1.66v-28.55a4.48 4.48 0 0 0 3.44-5l25-14.77a4.46 4.46 0 0 0 1.74 1.15v29.12a4.46 4.46 0 0 0-2.18 1.58zm-32.67 18.27l-24.81-14a4.34 4.34 0 0 0 .26-2.3 4.44 4.44 0 0 0-2.93-3.5v-29.13a4.61 4.61 0 0 0 1.44-.85l25.33 14.16a4.4 4.4 0 0 0 0 1.62 4.48 4.48 0 0 0 3.38 3.66v28.55a4.52 4.52 0 0 0-2.67 1.79zm3.67-67.48a4.23 4.23 0 0 0 .7-.06 4.33 4.33 0 0 0 2.2-1l25.35 14.58a4.76 4.76 0 0 0 0 1.51 4 4 0 0 0 .17.66l-24.71 14.59a4.46 4.46 0 0 0-7.25-.24l-25-14a4.31 4.31 0 0 0 .33-2.06l25.34-15a4.48 4.48 0 0 0 2.87 1.02zm.39 35.24a2.49 2.49 0 1 1 2.07-2.85 2.5 2.5 0 0 1-2.07 2.85zm31.87-23.37a2.49 2.49 0 1 1-2.07 2.84 2.49 2.49 0 0 1 2.07-2.84zm-32.65-18.81a2.49 2.49 0 1 1-2.07 2.84 2.49 2.49 0 0 1 2.07-2.84zm-34.71 21.65a2.49 2.49 0 1 1 2.84 2.07 2.48 2.48 0 0 1-2.84-2.07zm2.84 39.6a2.49 2.49 0 0 1-.74-4.91 2.43 2.43 0 0 1 1.85.44 2.48 2.48 0 0 1-1.07 4.47zm32.65 18.19a2.49 2.49 0 1 1 2.07-2.84 2.5 2.5 0 0 1-2.07 2.84zm32.61-18.19a2.49 2.49 0 1 1-.78-4.91 2.47 2.47 0 0 1 2.84 2.06 2.49 2.49 0 0 1-2.06 2.85z' />\n  </svg>\n)\n\nexport default StrokeCube\n","import { sortByName, sortBySize } from '../../lib/sort'\nimport { IS_MAC, SORTING } from './consts'\nimport * as Task from '../task'\n\n/**\n * @typedef {import('ipfs').IPFSService} IPFSService\n * @typedef {import('./actions').Ext} Ext\n * @typedef {import('./actions').Extra} Extra\n */\n\n/**\n  * @template State, Message, Ext, Extra\n  * @typedef {import('redux-bundler').Context<State, Message, Ext, Extra>} BundlerContext\n  */\n\n/**\n * Utility function that takes a task name and task (in form of async generator) and\n * produces `doX` style action creator that will execute a task and dispatch\n * actions in form of `{type: name, job: Job<State, Error, Return>}` as it makes\n * progress.\n *\n * A `.job` property of dispatched action will correspond to one of the states:\n *\n * 1. `{ status: 'Idle', id: Symbol }` - State just before task is executed.\n * 2. `{ status: 'Pending', id: Symbol, state: State }` - State while task is in\n *    progress. Each yielded value will cause this action and will correspond\n *    to `state` field.\n * 3. `{ status: 'Done', id: Symbol, value: Return }` - State when task is\n *    successfully complete.\n * 4. `{ status: 'Failed', id: Symbol, error: Error }` - State when task is\n *    failed do to error.\n *\n * template {string} Name - Name of the task which, correponds to `.type` of\n * dispatched actions.\n * template State - Type of yielded value by a the generator, which will\n * correspond to `.job.state` of dispatched actions while task is pending.\n * template Return - Return type of the task, which will correspond to\n * `.job.result.value` of dispatched action on succefully completed task.\n * template {BundlerContext<State, Job<Name, State, Error, Return>, StoreExt, GetIPFS>} Ctx\n *\n * param {Name} name - Name of the task\n * param {(service:IPFSService, context:Ctx) => AsyncGenerator<State, Return, void>} task\n * returns {(context:Ctx) => Promise<Return>}\n */\n\n/**\n * @template Name, Message, Failure, Success, Init\n * @typedef {import('../task').Spawn<Name, Message, Failure, Success, Init>} Spawn\n */\n\n/**\n * Specialized version of `Task.spawn` which will only spawn a task if\n * `context.getIpfs()` returns an `IPFSService` passing it into the task as a\n * first argument. Otherwise it fails without dispatching any actions.\n *\n * @template {string} Type - Corresponds to `action.type` for all the actions\n * that this task will dispatch.\n * @template Message - Type of messages that task will produce (by yielding).\n * Which correspond to `action.task.message` when `action.status`\n * is `Send`.\n * @template Success - Type of the `action.task.result.vaule` when task is\n * complete successfully. It is also a value of the promise returned by\n * running `store.doX` created by this decorator.\n * @template Init - Type of the initialization paramater.\n * @template State - Type of the `context.getState()` for this task.\n * @template {BundlerContext<State, Spawn<Type, Message, Error, Success, Init>, Ext, Extra>} Context\n *\n * @param {Type} type - Type of the actions this will dispatch.\n * @param {(service:IPFSService, context:Context) => AsyncGenerator<Message, Success, void>} task - Task\n * @param {Init[]} rest - Optinal initialization parameter.\n * @returns {(context:Context) => Promise<Success>}\n */\nexport const spawn = (type, task, ...[init]) => async (context) => {\n  const ipfs = context.getIpfs()\n  if (ipfs == null) {\n    throw Error('IPFS node was not found')\n  } else {\n    const spawn = Task.spawn(\n      type,\n      /**\n       * @param {Context} context\n       * @returns {AsyncGenerator<Message, Success, void>}}\n       */\n      async function * (context) {\n        const process = task(ipfs, context)\n        while (true) {\n          const next = await process.next()\n          if (next.done) {\n            return next.value\n          } else {\n            yield next.value\n          }\n        }\n      },\n      init\n    )\n\n    return await spawn(context)\n  }\n}\n\n/**\n * @template Name, Failure, Success, Init\n * @typedef {import('../task').Perform<Name, Failure, Success, Init>} Perform\n */\n\n/**\n * Specialized version of `Task.perform` which will only perform a task if\n * `context.getIpfs()` returns an `IPFSService` passing it into the task as a\n * first argument. Otherwise it fails without dispatching any actions.\n *\n * @template {string} Type - Type of the task which, correponds to `.type` of\n * dispatched actions.\n * @template Success - Return type of the task, which will correspond to\n * `.job.result.value` of dispatched action on succefully completed task.\n * @template Init - Initial data\n * @template State - Type of the `context.getState()` for this task.\n * @template {BundlerContext<State, Perform<Type, Error, Success, Init>, Ext, Extra>} Context\n *\n * @param {Type} type - Type of the actions this will dispatch.\n * @param {(service:IPFSService, context:Context) => Promise<Success>} task\n * @param {Init[]} rest\n * @returns {(context:Context) => Promise<Success>}\n */\nexport const perform = (type, task, ...[init]) => async (context) => {\n  const ipfs = context.getIpfs()\n  if (ipfs == null) {\n    throw Error('IPFS node was not found')\n  } else {\n    const perform = Task.perform(\n      type,\n      /**\n       * @param {Context} context\n       */\n      context => task(ipfs, context),\n      init\n    )\n    return await perform(context)\n  }\n}\n\n/**\n * Creates an action creator that just dispatches given action.\n * @template T\n * @param {T} action\n * @returns {(context:BundlerContext<any, T, any, any>) => Promise<void>}\n */\nexport const send = (action) => async ({ store }) => {\n  store.dispatch(action)\n}\n\n/**\n * @typedef {Object} Sorting\n * @property {boolean} [asc]\n * @property {import('./consts').SORTING} [by]\n */\n\n/**\n * @template {{name:string, type:string, cumulativeSize?:number, size:number}} T\n * @param {T[]} files\n * @param {Sorting} sorting\n\n * @returns {T[]}\n */\nexport const sortFiles = (files, sorting) => {\n  const sortDir = sorting.asc ? 1 : -1\n  const nameSort = sortByName(sortDir)\n  const sizeSort = sortBySize(sortDir)\n\n  return files.sort((a, b) => {\n    if (a.type === b.type || IS_MAC) {\n      if (sorting.by === SORTING.BY_NAME) {\n        return nameSort(a.name, b.name)\n      } else {\n        return sizeSort(a.cumulativeSize || a.size, b.cumulativeSize || b.size)\n      }\n    }\n\n    if (a.type === 'directory') {\n      return -1\n    } else {\n      return 1\n    }\n  })\n}\n\n/**\n * @typedef {Object} Info\n * @property {string} path\n * @property {string} realPath\n * @property {boolean} isMfs\n * @property {boolean} isPins\n * @property {boolean} isRoot\n *\n * @param {string} path\n * @param {boolean} uriDecode\n * @returns {Info|void}\n */\nexport const infoFromPath = (path, uriDecode = true) => {\n  const info = {\n    path: path,\n    realPath: '',\n    isMfs: false,\n    isPins: false,\n    isRoot: false\n  }\n\n  /**\n   * @param {string} prefix\n   */\n  const check = (prefix) => {\n    info.realPath = info.path.substring(prefix.length).trim() || '/'\n    info.isRoot = info.realPath === '/'\n  }\n\n  if (info.path.startsWith('/ipns') || info.path.startsWith('/ipfs')) {\n    info.realPath = info.path\n    info.isRoot = info.path === '/ipns' || info.path === '/ipfs'\n  } else if (info.path.startsWith('/files')) {\n    check('/files')\n    info.isMfs = true\n  } else if (info.path.startsWith('/pins')) {\n    check('/pins')\n    info.isPins = true\n\n    if (info.realPath !== '/') {\n      info.realPath = `/ipfs${info.realPath}`\n    }\n  } else {\n    return\n  }\n\n  if (info.path.endsWith('/') && info.realPath !== '/') {\n    info.path = info.path.substring(0, info.path.length - 1)\n    info.realPath = info.realPath.substring(0, info.realPath.length - 1)\n  }\n\n  if (uriDecode) {\n    info.realPath = decodeURIComponent(info.realPath)\n    info.path = decodeURIComponent(info.path)\n  }\n\n  return info\n}\n\n/**\n * @template T\n * @implements {AsyncIterable<T>}\n */\nexport class Channel {\n  constructor () {\n    this.done = false\n    /** @type {T[]} */\n    this.queue = []\n    /** @type {{resolve(value:IteratorResult<T, void>):void, reject(error:any):void}[]} */\n    this.pending = []\n  }\n\n  [Symbol.asyncIterator] () {\n    return this\n  }\n\n  /**\n   * @returns {Promise<IteratorResult<T, void>>}\n   */\n  async next () {\n    const { done, queue, pending } = this\n    if (done) {\n      return { done, value: undefined }\n    } else if (queue.length > 0) {\n      const value = queue[queue.length - 1]\n      queue.pop()\n      return { done, value }\n    } else {\n      return await new Promise((resolve, reject) => {\n        pending.unshift({ resolve, reject })\n      })\n    }\n  }\n\n  /**\n   * @param {T} value\n   */\n  send (value) {\n    const { done, pending, queue } = this\n    if (done) {\n      throw Error('Channel is closed')\n    } else if (pending.length) {\n      const promise = pending[pending.length - 1]\n      pending.pop()\n      promise.resolve({ done, value })\n    } else {\n      queue.unshift(value)\n    }\n  }\n\n  /**\n   * @param {Error|void} error\n   */\n  close (error) {\n    const { done, pending } = this\n    if (done) {\n      throw Error('Channel is already closed')\n    } else {\n      this.done = true\n      for (const promise of pending) {\n        if (error) {\n          promise.reject(error)\n        } else {\n          promise.resolve({ done: true, value: undefined })\n        }\n      }\n      pending.length = 0\n    }\n  }\n}\n\n/**\n * @param {import('./selectors').Selectors} store\n */\nexport const ensureMFS = (store) => {\n  const info = store.selectFilesPathInfo()\n  if (!info || !info.isMfs) {\n    throw new Error('Unable to perform task if not in MFS')\n  }\n}\n","import React, { useState } from 'react'\nimport { Trans } from 'react-i18next'\nimport { connect } from 'redux-bundler-react'\nimport Checkbox from '../checkbox/Checkbox'\nimport Details from '../details/Details'\n\nconst ExampleRequest = ({ url, method = 'GET' }) => {\n  return (\n    <pre className='overflow-x-scroll pa3 mr3 f6 ba b--black-10 br2 bg-snow-muted'>\n      <code className='green'>{method}</code> {url}\n    </pre>\n  )\n}\n\nconst QueryParams = ({ url }) => {\n  if (!url) return null\n  const params = (new URL(url)).searchParams\n  const entries = [...params]\n  return (\n    <dl className='pa3 mr3 f7 overflow-x-scroll monospace nowrap ba b--black-10 br2 bg-snow-muted'>\n      {entries.map(([key, value]) => (\n        <div key={`QueryParams-${key}`}>\n          <dt className='dib green'>{key}:</dt>\n          <dd className='dib ml1'>{value}</dd>\n        </div>\n      ))}\n    </dl>\n  )\n}\n\nconst AnalyticType = ({ children, onChange, enabled, label, summary, exampleRequest, queryParams, sourceLink, sourceLinkLabel = 'view source' }) => {\n  // show hide state. update react.\n  const [isOpen, setOpen] = useState(false)\n  return (\n    <section className='bg-white bb b--black-10'>\n      <div className='flex items-center'>\n        <Checkbox className='pv3 pl3 pr1 bg-white flex-none' onChange={onChange} checked={enabled} label={\n          <span className='fw5 f6'>{label}</span>\n        } />\n        <div className='truncate fw4 f6 flex-auto charcoal-muted'>&ndash; {summary}</div>\n        <button className='focus-outline bg-transparent pa3 bn link blue flex-none' onClick={() => setOpen(!isOpen)} style={{ minWidth: 100 }}>\n          {isOpen ? 'Close' : 'Show me' }\n        </button>\n      </div>\n      {isOpen && (\n        <div className='ph3 nt2 pb3'>\n          {children}\n          {sourceLink && (\n            <p>\n              <a href={sourceLink} className='link blue' target='_blank' rel='noopener noreferrer'>View source</a>\n            </p>\n          )}\n          {exampleRequest && (\n            <div>\n              <h3 className='f5 fw6'>Example request</h3>\n              <ExampleRequest url={exampleRequest} />\n              <h4 className='f6 fw5'>Query parameters</h4>\n              <QueryParams url={exampleRequest} />\n            </div>\n          )}\n        </div>\n      )}\n    </section>\n  )\n}\n\nconst AnalyticsToggle = ({ analyticsActionsToRecord, analyticsConsent, doToggleConsent, doToggleAnalytics, analyticsEnabled, t, open }) => {\n  return (\n    <React.Fragment>\n      <Checkbox className='dib' onChange={doToggleAnalytics} checked={analyticsEnabled} label={\n        <span className='f5'>\n          {t('AnalyticsToggle.label')}\n        </span>\n      } />\n      <div className='f6 charcoal lh-copy'>\n        <p className='mb0'>{t('AnalyticsToggle.paragraph1')}</p>\n        <Details summaryText={t('AnalyticsToggle.summary')} className='pt2' open={open}>\n          <p>\n            <Trans i18nKey='AnalyticsToggle.paragraph2' t={t}>\n              Protocol Labs hosts a <a className='link blue' href='https://count.ly/'>Countly</a> instance to record anonymous usage data for this app.\n            </Trans>\n          </p>\n          <p>{t('AnalyticsToggle.optionalInfo')}</p>\n          <AnalyticType\n            onChange={() => doToggleConsent('sessions')}\n            enabled={analyticsConsent.includes('sessions')}\n            label={t('AnalyticsToggle.sessions.label')}\n            summary={t('AnalyticsToggle.sessions.summary')}\n            sourceLink='https://github.com/Countly/countly-sdk-web/blob/93442edbe8c108618c88cc9e1ad179892c42940b/lib/countly.js#L1885-L1953'\n            exampleRequest='https://countly.ipfs.io/i?begin_session=1&metrics=%7B%22_app_version%22%3A%222.4.0%22%2C%22_ua%22%3A%22Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010_14_2)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F72.0.3626.121%20Safari%2F537.36%22%2C%22_resolution%22%3A%221920x1080%22%2C%22_density%22%3A2%2C%22_locale%22%3A%22en-GB%22%7D&app_key=700fd825c3b257e021bd9dbc6cbf044d33477531&device_id=804117b1-c21d-4e55-a65f-f9dbbe9a1f91&sdk_name=javascript_native_web&sdk_version=19.02.1&timestamp=1552296210554&hour=9&dow=1&consent=%7B%22sessions%22%3Atrue%2C%22events%22%3Atrue%2C%22views%22%3Atrue%2C%22location%22%3Atrue%2C%22crashes%22%3Atrue%7D'>\n            <Trans i18nKey='AnalyticsToggle.sessions.details' t={t}>\n              <p>The following browser metrics are sent</p>\n              <ul>\n                <li>A random, generated device ID</li>\n                <li>Timestamp when the session starts</li>\n                <li>Periodic timestamps to track duration</li>\n                <li>App version e.g. \"2.4.4\"</li>\n                <li>Locale e.g. \"en-GB\"</li>\n                <li>User Agent e.g. \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) ...\"</li>\n                <li>Screen resolution e.g. \"800x600\"</li>\n                <li>Screen pixel density e.g. \"1\"</li>\n              </ul>\n            </Trans>\n          </AnalyticType>\n\n          <AnalyticType\n            onChange={() => doToggleConsent('events')}\n            enabled={analyticsConsent.includes('events')}\n            label={t('AnalyticsToggle.events.label')}\n            summary={t('AnalyticsToggle.events.summary')}\n            sourceLink='https://github.com/ipfs-shipyard/ipfs-webui/blob/30a077efe5198bf6403681b094ab585a88395c40/src/bundles/analytics.js#L93-L111'\n            exampleRequest='https://countly.ipfs.io/i?events=%5B%7B%22key%22%3A%22FILES_MAKEDIR%22%2C%22count%22%3A1%2C%22dur%22%3A0.015194999985396862%2C%22timestamp%22%3A1552296333639%2C%22hour%22%3A9%2C%22dow%22%3A1%7D%5D&app_key=700fd825c3b257e021bd9dbc6cbf044d33477531&device_id=804117b1-c21d-4e55-a65f-f9dbbe9a1f91&sdk_name=javascript_native_web&sdk_version=19.02.1&timestamp=1552296333640&hour=9&dow=1'>\n            <p>\n              <Trans i18nKey='AnalyticsToggle.events.details' t={t}>\n                App specific actions. We record only that the action happened, how long it took from start to finish, and a count if the event involved multiple items.\n              </Trans>\n            </p>\n            <p>The recorded actions are:</p>\n            <ul>\n              {analyticsActionsToRecord.map(name => (\n                <li key={name} className='mb1'>\n                  <code className='f7 bg-snow-muted pa1 br2'>{name}</code>\n                </li>\n              ))}\n            </ul>\n          </AnalyticType>\n\n          <AnalyticType\n            onChange={() => doToggleConsent('views')}\n            enabled={analyticsConsent.includes('views')}\n            label={t('AnalyticsToggle.views.label')}\n            summary={t('AnalyticsToggle.views.summary')}\n            sourceLink='https://github.com/ipfs-shipyard/ipfs-webui/blob/2fb9df4e7b294f26b35b1dd76084fe85672b6f2b/src/bundles/analytics.js#L81-L86'\n            exampleRequest='https://countly.ipfs.io/i?events=%5B%7B%22key%22%3A%22%5BCLY%5D_view%22%2C%22count%22%3A1%2C%22dur%22%3A2%2C%22segmentation%22%3A%7B%22name%22%3A%22%2F%22%7D%2C%22timestamp%22%3A1552296364914%2C%22hour%22%3A9%2C%22dow%22%3A1%7D%2C%7B%22key%22%3A%22%5BCLY%5D_view%22%2C%22count%22%3A1%2C%22segmentation%22%3A%7B%22name%22%3A%22%2Ffiles*%22%2C%22visit%22%3A1%2C%22domain%22%3A%22localhost%22%2C%22view%22%3A%22%2F%22%7D%2C%22timestamp%22%3A1552296364915%2C%22hour%22%3A9%2C%22dow%22%3A1%7D%5D&app_key=700fd825c3b257e021bd9dbc6cbf044d33477531&device_id=804117b1-c21d-4e55-a65f-f9dbbe9a1f91&sdk_name=javascript_native_web&sdk_version=19.02.1&timestamp=1552296364916&hour=9&dow=1'>\n            <p>{t('AnalyticsToggle.views.details')}</p>\n          </AnalyticType>\n\n          <AnalyticType\n            onChange={() => doToggleConsent('location')}\n            enabled={analyticsConsent.includes('location')}\n            label={t('AnalyticsToggle.location.label')}\n            summary={t('AnalyticsToggle.location.summary')}\n            sourceLink='https://github.com/Countly/countly-sdk-web/blob/93442edbe8c108618c88cc9e1ad179892c42940b/lib/countly.js#L1736-L1751'>\n            <p>{t('AnalyticsToggle.location.details')}</p>\n          </AnalyticType>\n\n          <AnalyticType\n            onChange={() => doToggleConsent('crashes')}\n            enabled={analyticsConsent.includes('crashes')}\n            label={t('AnalyticsToggle.crashes.label')}\n            summary={t('AnalyticsToggle.crashes.summary')}\n            sourceLink='https://github.com/ipfs-shipyard/ipfs-webui/blob/2fb9df4e7b294f26b35b1dd76084fe85672b6f2b/src/bundles/analytics.js#L115-L121'\n            exampleRequest='https://countly.ipfs.io/i?crash=%7B%22_resolution%22%3A%221920x1080%22%2C%22_error%22%3A%22Error%3A%20example%20error%5Cn%20%20%20%20at%20Object._callee%24%20(http%3A%2F%2Flocalhost%3A3000%2Fstatic%2Fjs%2Fbundle.js%3A192105%3A63)%5Cn%20%20%20%20at%20tryCatch%20(http%3A%2F%2Flocalhost%3A3000%2Fstatic%2Fjs%2Fbundle.js%3A173974%3A40)%5Cn%20%20%20%20at%20Generator.invoke%20%5Bas%20_invoke%5D%20(http%3A%2F%2Flocalhost%3A3000%2Fstatic%2Fjs%2Fbundle.js%3A174208%3A22)%5Cn%20%20%20%20at%20Generator.prototype.(anonymous%20function)%20%5Bas%20next%5D%20(http%3A%2F%2Flocalhost%3A3000%2Fstatic%2Fjs%2Fbundle.js%3A174026%3A21)%5Cn%20%20%20%20at%20step%20(http%3A%2F%2Flocalhost%3A3000%2Fstatic%2Fjs%2Fbundle.js%3A192086%3A191)%5Cn%20%20%20%20at%20http%3A%2F%2Flocalhost%3A3000%2Fstatic%2Fjs%2Fbundle.js%3A192086%3A361%22%2C%22_app_version%22%3A%222.4.0%22%2C%22_run%22%3A5%2C%22_not_os_specific%22%3Atrue%2C%22_online%22%3Atrue%2C%22_background%22%3Atrue%2C%22_logs%22%3A%22STATS_FETCH_FAILED%22%2C%22_nonfatal%22%3Atrue%2C%22_view%22%3A%22%2F%23%2Fsettings%22%2C%22_custom%22%3Anull%2C%22_opengl%22%3A%22WebGL%201.0%20(OpenGL%20ES%202.0%20Chromium)%22%7D&app_key=700fd825c3b257e021bd9dbc6cbf044d33477531&device_id=d96d67ff-4797-45da-83b4-9e8f599cd12a&sdk_name=javascript_native_web&sdk_version=19.02.1&timestamp=1552294449012&hour=8&dow=1'>\n            <p>\n              <Trans i18nKey='AnalyticsToggle.crashes.details' t={t}>\n                Records JavaScript error messages and stack traces that occur while using the app, where possible. It is very helpful to know when the app is not working for you, but <b>error messages may include identifiable information</b> like CIDs or file paths, so only enable this if you are comfortable sharing that information with us.\n              </Trans>\n            </p>\n          </AnalyticType>\n\n        </Details>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default connect(\n  'selectAnalyticsEnabled',\n  'selectAnalyticsConsent',\n  'selectAnalyticsActionsToRecord',\n  'doToggleAnalytics',\n  'doToggleConsent',\n  AnalyticsToggle\n)\n","import React from 'react'\n\nconst GlyphSmallTick = props => (\n  <svg viewBox='0 0 100 100' {...props}>\n    <path d='M44.39 66.09L32.74 54.44l3.92-3.92 7.73 7.73 19.36-19.36 3.92 3.92z' />\n  </svg>\n)\n\nexport default GlyphSmallTick\n","import React from 'react'\nimport 'details-polyfill'\n\nconst Details = ({\n  summaryText = 'Advanced',\n  children,\n  onClick,\n  ...props\n}) => {\n  return (\n    <details {...props}>\n      <summary className='pointer blue outline-0' onClick={onClick}>{summaryText}</summary>\n      {children}\n    </details>\n  )\n}\n\nexport default Details\n","import { readSetting, writeSetting } from './local-storage'\n\nexport const DEFAULT_GATEWAY = 'https://ipfs.io' // TODO: switch to dweb.link when https://github.com/ipfs/go-ipfs/issues/7318\nconst IMG_ARRAY = [\n  { id: 'IMG_HASH_1PX', name: '1x1.png', hash: 'bafybeibwzifw52ttrkqlikfzext5akxu7lz4xiwjgwzmqcpdzmp3n5vnbe' },\n  { id: 'IMG_HASH_1PXID', name: '1x1.png', hash: 'bafkqax4jkbheodikdifaaaaabveuqrcsaaaaaaiaaaaacaidaaaaajo3k3faaaaaanieyvcfaaaabj32hxnaaaaaaf2fetstabaonwdgaaaaacsjiravicgxmnqaaaaaaiaadyrbxqzqaaaaabeuktsevzbgbaq' },\n  { id: 'IMG_HASH_FAVICON', name: 'favicon.ico', hash: 'bafkreihc7efnl2prri6j6krcopelxms3xsh7undpsjqbfsasm7ikiyha4i' }\n]\n\nconst readPublicGatewaySetting = () => {\n  const setting = readSetting('ipfsPublicGateway')\n  return setting || DEFAULT_GATEWAY\n}\n\nconst init = () => ({\n  availableGateway: null,\n  publicGateway: readPublicGatewaySetting()\n})\n\nexport const checkValidHttpUrl = (value) => {\n  let url\n\n  try {\n    url = new URL(value)\n  } catch (_) {\n    return false\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:'\n}\n\n/**\n * Check if any hashes from IMG_ARRAY can be loaded from the provided gatewayUrl\n * @see https://github.com/ipfs/ipfs-webui/issues/1937#issuecomment-1152894211 for more info\n */\nexport const checkViaImgSrc = (gatewayUrl) => {\n  const url = new URL(gatewayUrl)\n\n  /**\n   * we check if gateway is up by loading 1x1 px image:\n   * this is more robust check than loading js, as it won't be blocked\n   * by privacy protections present in modern browsers or in extensions such as Privacy Badger\n   */\n  return Promise.any(IMG_ARRAY.map(element => {\n    const imgUrl = new URL(`${url.protocol}//${url.hostname}/ipfs/${element.hash}?now=${Date.now()}&filename=${element.name}#x-ipfs-companion-no-redirect`)\n    return checkImgSrcPromise(imgUrl)\n  }))\n}\n\nconst checkImgSrcPromise = (imgUrl) => {\n  const imgCheckTimeout = 15000\n\n  return new Promise((resolve, reject) => {\n    const timeout = () => {\n      if (!timer) return false\n      clearTimeout(timer)\n      timer = null\n      return true\n    }\n\n    let timer = setTimeout(() => { if (timeout()) reject(new Error()) }, imgCheckTimeout)\n    const img = new Image()\n\n    img.onerror = () => {\n      timeout()\n      reject(new Error())\n    }\n\n    img.onload = () => {\n      // subdomain works\n      timeout()\n      resolve()\n    }\n\n    img.src = imgUrl\n  })\n}\n\nconst bundle = {\n  name: 'gateway',\n\n  reducer: (state = init(), action) => {\n    if (action.type === 'SET_AVAILABLE_GATEWAY') {\n      return { ...state, availableGateway: action.payload }\n    }\n\n    if (action.type === 'SET_PUBLIC_GATEWAY') {\n      return { ...state, publicGateway: action.payload }\n    }\n\n    return state\n  },\n\n  doSetAvailableGateway: url => ({ dispatch }) => dispatch({ type: 'SET_AVAILABLE_GATEWAY', payload: url }),\n\n  doUpdatePublicGateway: (address) => async ({ dispatch }) => {\n    await writeSetting('ipfsPublicGateway', address)\n    dispatch({ type: 'SET_PUBLIC_GATEWAY', payload: address })\n  },\n\n  selectAvailableGateway: (state) => state?.gateway?.availableGateway,\n\n  selectPublicGateway: (state) => state?.gateway?.publicGateway\n}\n\nexport default bundle\n","import { dirname } from 'path'\n\n/**\n* countDirs: find all the dirs that will be created from a list of paths.\n*\n* files is an array of file objects as passed to ipfs.added\n* The root dir is counted, and All entries are assumed to be file paths,\n* `/foo` is assumed to be a file `foo` with no extention in the root dir,\n* which would be counted as 1 unigue dir by this function.\n*\n* ```js\n* files = [\n*   { path: '/foo/bar/foo.txt', ... }\n*   { path: '/foo/bar/odd', ... }\n* ]\n* countDirs(files) === 3\n* // ['/', '/foo', '/foo/bar']\n* ```\n*\n* We need to calculat how many directories are in the tree.\n*\n* See: https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add\n* @param {{path:string}[]} files\n* @returns {number}\n*/\nfunction countDirs (files) {\n  if (!files || !files.length) return 0\n  const paths = files.map(f => f.path)\n    .filter(p => !!p)\n\n  // [ /foo/bar, /foo/other, /foo/zoom, /aaa/other ]\n  const directories = new Set()\n  paths.forEach(path => findUniqueDirectories(path, directories))\n  return directories.size\n}\n\n/**\n *\n * @param {string} path\n * @param {Set<string>} [res]\n * @returns {Set<string>}\n */\nfunction findUniqueDirectories (path, res = new Set()) {\n  if (!path) return res\n  const name = dirname(path)\n  if (name === '.') return res\n  res.add(name)\n  if (name === '/') return res\n  return findUniqueDirectories(name, res)\n}\n\nexport default countDirs\n","/* eslint-disable require-yield */\n\nimport { join, dirname, basename } from 'path'\nimport { getDownloadLink, getShareableLink, getCarLink } from '../../lib/files'\nimport countDirs from '../../lib/count-dirs'\nimport memoize from 'p-memoize'\nimport all from 'it-all'\nimport map from 'it-map'\nimport last from 'it-last'\nimport CID from 'cids'\n\nimport { spawn, perform, send, ensureMFS, Channel, sortFiles, infoFromPath } from './utils'\nimport { IGNORED_FILES, ACTIONS } from './consts'\n\n/**\n * @typedef {import('ipfs').IPFSService} IPFSService\n * @typedef {import('../../lib/files').FileStream} FileStream\n * @typedef {import('./utils').Info} Info\n * @typedef {import('ipfs').Pin} Pin\n */\n\n/**\n * @typedef {Object} FileStat\n * @property {number} size\n * @property {'directory'|'file'|'unknown'} type\n * @property {CID} cid\n * @property {string} name\n * @property {string} path\n * @property {boolean} pinned\n * @property {boolean|void} isParent\n *\n * @param {Object} stat\n * @param {'dir'|'directory'|'file'|'unknown'} stat.type\n * @param {CID} stat.cid\n * @param {string} stat.path\n * @param {number} [stat.cumulativeSize]\n * @param {number} stat.size\n * @param {string|void} [stat.name]\n * @param {boolean|void} [stat.pinned]\n * @param {boolean|void} [stat.isParent]\n * @param {string} [prefix]\n * @returns {FileStat}\n */\nconst fileFromStats = ({ cumulativeSize, type, size, cid, name, path, pinned, isParent }, prefix = '/ipfs') => ({\n  size: cumulativeSize || size || 0,\n  type: type === 'dir' ? 'directory' : type,\n  cid,\n  name: name || path.split('/').pop() || cid.toString(),\n  path: path || `${prefix}/${cid.toString()}`,\n  pinned: Boolean(pinned),\n  isParent: isParent\n})\n\n/**\n * @param {IPFSService} ipfs\n * @param {string|CID} cidOrPath\n * @returns {Promise<number>}\n */\nconst cumulativeSize = async (ipfs, cidOrPath) => {\n  const { cumulativeSize } = await stat(ipfs, cidOrPath)\n  return cumulativeSize || 0\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\n// TODO: use sth else\nexport const realMfsPath = (path) => {\n  if (path.startsWith('/files')) {\n    return path.substring('/files'.length) || '/'\n  }\n\n  return path\n}\n\nconst memStat = memoize((path, ipfs) => ipfs.files.stat(path))\n\n/**\n * @typedef {Object} Stat\n * @property {string} path\n * @property {'file'|'directory'|'unknown'} type\n * @property {CID} cid\n * @property {number} cumulativeSize\n * @property {number} size\n *\n * @param {IPFSService} ipfs\n * @param {string|CID} cidOrPath\n * @returns {Promise<Stat>}\n */\nconst stat = async (ipfs, cidOrPath) => {\n  const hashOrPath = cidOrPath.toString()\n  const path = hashOrPath.startsWith('/')\n    ? hashOrPath\n    : `/ipfs/${hashOrPath}`\n\n  try {\n    let stats\n    if (path.startsWith('/ipfs/')) {\n      stats = await memStat(path, ipfs)\n    } else {\n      stats = await ipfs.files.stat(path)\n    }\n    return { path, ...stats }\n  } catch (e) {\n    // Discard error and mark DAG as 'unknown' to unblock listing other pins.\n    // Clicking on 'unknown' entry will open it in Inspector.\n    // No information is lost: if there is an error related\n    // to specified hashOrPath user will read it in Inspector.\n    const [, , cid] = path.split('/')\n    return {\n      path: hashOrPath,\n      cid: new CID(cid),\n      type: 'unknown',\n      cumulativeSize: 0,\n      size: 0\n    }\n  }\n}\n\n/**\n *\n * @param {IPFSService} ipfs\n * @returns {AsyncIterable<Pin>}\n */\nconst getRawPins = async function * (ipfs) {\n  yield * ipfs.pin.ls({ type: 'recursive' })\n  yield * ipfs.pin.ls({ type: 'direct' })\n}\n\n/**\n * @param {IPFSService} ipfs\n * @returns {AsyncIterable<CID>}\n */\nconst getPinCIDs = (ipfs) => map(getRawPins(ipfs), (pin) => pin.cid)\n\n/**\n * @param {IPFSService} ipfs\n * @returns {AsyncIterable<FileStat>}\n */\nconst getPins = async function * (ipfs) {\n  for await (const cid of getPinCIDs(ipfs)) {\n    const info = await stat(ipfs, cid)\n    yield fileFromStats({ ...info, pinned: true }, '/pins')\n  }\n}\n\n/**\n * @typedef {import('./protocol').Message} Message\n * @typedef {import('./protocol').Model} Model\n\n * @typedef {import('./selectors').Selectors} Selectors\n * @typedef {import('../ipfs-provider').IPFSProviderStore} IPFSProviderStore\n * @typedef {import('../connected').Selectors} ConnectedSelectors\n *\n * @typedef {Object} ConfigSelectors\n * @property {function():string} selectApiUrl\n * @property {function():string} selectGatewayUrl\n * @property {function():string} selectPublicGateway\n *\n * @typedef {Object} UnkonwActions\n * @property {function(string):Promise<unknown>} doUpdateHash\n * @typedef {Selectors & Actions & IPFSProviderStore & ConnectedSelectors & ConfigSelectors & UnkonwActions} Ext\n * @typedef {import('../ipfs-provider').Extra} Extra\n * @typedef {import('redux-bundler').Store<Model, Message, Ext>} Store\n * @typedef {import('redux-bundler').Context<Model, Message, Ext, Extra>} Context\n * @typedef {import('./protocol').PageContent} PageContent\n *\n * @typedef {import('redux-bundler').Actions<ReturnType<typeof actions>>} Actions\n *\n */\n\nconst actions = () => ({\n  /**\n   * Fetches list of pins and updates `state.pins` on successful completion.\n   * @returns {function(Context):Promise<{pins: CID[]}>}\n   */\n  doPinsFetch: () => perform(ACTIONS.PIN_LIST, async (ipfs) => {\n    const cids = await all(getPinCIDs(ipfs))\n\n    return { pins: cids }\n  }),\n\n  /**\n   * Syncs currently selected path file list.\n   * @returns {function(Context):Promise<void>}\n   */\n  doFilesFetch: () => async ({ store }) => {\n    const isReady = store.selectIpfsReady()\n    const isConnected = store.selectIpfsConnected()\n    const isFetching = store.selectFilesIsFetching()\n    const info = store.selectFilesPathInfo()\n    if (isReady && isConnected && !isFetching && info) {\n      await store.doFetch(info)\n    }\n  },\n\n  /**\n   * Fetches conten for the currently selected path. And updates\n   * `state.pageContent` on succesful completion.\n   * @param {Info} info\n   * @returns {function(Context): *}\n   */\n  doFetch: ({ path, realPath, isMfs, isPins, isRoot }) => perform(ACTIONS.FETCH, async (ipfs, { store }) => {\n    if (isRoot && !isMfs && !isPins) {\n      throw new Error('not supposed to be here')\n    }\n\n    if (isRoot && isPins) {\n      const pins = await all(getPins(ipfs)) // FIX: pins path\n\n      return {\n        path: '/pins',\n        fetched: Date.now(),\n        type: 'directory',\n        content: pins\n      }\n    }\n\n    const resolvedPath = realPath.startsWith('/ipns')\n      ? await last(ipfs.name.resolve(realPath))\n      : realPath\n\n    const stats = await stat(ipfs, resolvedPath)\n    const time = Date.now()\n\n    switch (stats.type) {\n      case 'unknown': {\n        return {\n          fetched: time,\n          ...stats\n        }\n      }\n      case 'file': {\n        return {\n          ...fileFromStats({ ...stats, path }),\n          fetched: time,\n          type: 'file',\n          read: () => ipfs.cat(stats.cid),\n          name: path.split('/').pop(),\n          size: stats.size,\n          cid: stats.cid\n        }\n      }\n      case 'directory': {\n        return await dirStats(ipfs, stats.cid, {\n          path,\n          isRoot,\n          sorting: store.selectFilesSorting()\n        })\n      }\n      default: {\n        throw Error(`Unsupported file type \"${stats.type}\"`)\n      }\n    }\n  }),\n\n  /**\n   * Imports given `source` files to the provided `root` path. On completion\n   * (success or fail) will trigger `doFilesFetch` to update the state.\n   * @param {FileStream[]} source\n   * @param {string} root\n   */\n  doFilesWrite: (source, root) => spawn(ACTIONS.WRITE, async function * (ipfs, { store }) {\n    const files = source\n      // Skip ignored files\n      .filter($ => !IGNORED_FILES.includes(basename($.path)))\n      // Dropped files come as absolute, those added by the file input come\n      // as relative paths, so normalise all to be relative.\n      .map($ => $.path[0] === '/' ? { ...$, path: $.path.slice(1) } : $)\n\n    const totalSize = files.reduce((prev, { size }) => prev + size, 0)\n\n    const entries = files.map(({ path, size }) => ({ path, size }))\n\n    yield { entries, progress: 0 }\n\n    const { result, progress } = importFiles(ipfs, files)\n\n    /** @type {null|{uploaded:number, offset:number, name:string}} */\n    let status = null\n\n    for await (const { name, offset } of progress) {\n      status = status == null\n        ? { uploaded: 0, offset, name }\n        : name === status.name\n          ? { uploaded: status.uploaded, offset, name }\n          : { uploaded: status.uploaded + status.offset, offset, name }\n      const progress = (status.uploaded + status.offset) / totalSize * 100\n\n      yield { entries, progress }\n    }\n\n    try {\n      const added = await result\n\n      const numberOfFiles = files.length\n      const numberOfDirs = countDirs(files)\n      const expectedResponseCount = numberOfFiles + numberOfDirs\n\n      if (added.length !== expectedResponseCount) {\n        // See https://github.com/ipfs/js-ipfs-api/issues/797\n        throw Object.assign(new Error('API returned a partial response.'), {\n          code: 'ERR_API_RESPONSE'\n        })\n      }\n\n      for (const { path, cid } of added) {\n        // Only go for direct children\n        if (path.indexOf('/') === -1 && path !== '') {\n          const src = `/ipfs/${cid}`\n          const dst = join(realMfsPath(root || '/files'), path)\n\n          try {\n            await ipfs.files.cp(src, dst)\n          } catch (err) {\n            // TODO: Not sure why we do this. Perhaps a generic error is used\n            // to avoid leaking private information via Countly?\n            throw Object.assign(new Error('ipfs.files.cp call failed'), {\n              code: 'ERR_FILES_CP_FAILED'\n            })\n          }\n        }\n      }\n\n      yield { entries, progress: 100 }\n      return entries\n    } finally {\n      await store.doFilesFetch()\n    }\n  }),\n\n  /**\n   * Deletes `files` with provided paths. On completion (success sor fail) will\n   * trigger `doFilesFetch` to update the state.\n   * @param {Object} args\n   * @param {FileStat[]} args.files\n   * @param {boolean} args.removeLocally\n   * @param {boolean} args.removeRemotely\n   * @param {string[]} args.remoteServices\n   */\n  doFilesDelete: ({ files, removeLocally, removeRemotely, remoteServices }) => perform(ACTIONS.DELETE, async (ipfs, { store }) => {\n    ensureMFS(store)\n\n    if (files.length === 0) return undefined\n\n    /**\n     * Execute function asynchronously in a best-effort fashion.\n     * We don't want any edge case (like a directory with multiple copies of\n     * same file) to crash webui, nor want to bother user with false-negatives\n     * @param {Function} fn\n     */\n    const tryAsync = async fn => { try { await fn() } catch (_) {} }\n\n    try {\n      // try removing from MFS first\n      await Promise.all(\n        files.map(async file => ipfs.files.rm(realMfsPath(file.path), {\n          recursive: true\n        }))\n      )\n\n      // Pin cleanup only if MFS removal was successful\n      if (removeRemotely) {\n        // remote unpin can be slow, so we do this async in best-effort fashion\n        files.forEach(file => remoteServices.map(async service => tryAsync(() =>\n          ipfs.pin.remote.rm({ cid: [file.cid], service })\n        )))\n      }\n\n      if (removeLocally) {\n        // removal of local pin can fail if same CID is present twice,\n        // this is done in best-effort as well\n        await Promise.all(files.map(async file => file.pinned && tryAsync(() =>\n          ipfs.pin.rm(file.cid)\n        )))\n      }\n\n      const src = files[0].path\n      const path = src.slice(0, src.lastIndexOf('/'))\n      await store.doUpdateHash(path)\n\n      return undefined\n    } finally {\n      await store.doFilesFetch()\n    }\n  }),\n\n  /**\n   * Adds file under the `src` path to the given `root` path. On completion will\n   * trigger `doFilesFetch` to update the state.\n   * @param {string} root\n   * @param {string} src\n   * @param {string} name\n   */\n  doFilesAddPath: (root, src, name = '') => perform(ACTIONS.ADD_BY_PATH, async (ipfs, { store }) => {\n    ensureMFS(store)\n\n    const path = realMfsPath(src)\n    const cid = /** @type {string} */(path.split('/').pop())\n\n    if (!name) {\n      name = cid\n    }\n\n    const dst = realMfsPath(join(root, name))\n    const srcPath = src.startsWith('/') ? src : `/ipfs/${cid}`\n\n    try {\n      return await ipfs.files.cp(srcPath, dst)\n    } finally {\n      await store.doFilesFetch()\n    }\n  }),\n\n  /**\n   * Creates a download link for the provided files.\n   * @param {FileStat[]} files\n   */\n  doFilesDownloadLink: (files) => perform(ACTIONS.DOWNLOAD_LINK, async (ipfs, { store }) => {\n    const apiUrl = store.selectApiUrl()\n    const gatewayUrl = store.selectGatewayUrl()\n    return await getDownloadLink(files, gatewayUrl, apiUrl, ipfs)\n  }),\n\n  /**\n   * Creates a download link for the DAG CAR.\n   * @param {FileStat[]} files\n   */\n  doFilesDownloadCarLink: (files) => perform(ACTIONS.DOWNLOAD_LINK, async (ipfs, { store }) => {\n    const gatewayUrl = store.selectGatewayUrl()\n    return await getCarLink(files, gatewayUrl, ipfs)\n  }),\n\n  /**\n   * Generates sharable link for the provided files.\n   * @param {FileStat[]} files\n   */\n  doFilesShareLink: (files) => perform(ACTIONS.SHARE_LINK, async (ipfs, { store }) => {\n    // ensureMFS deliberately omitted here, see https://github.com/ipfs/ipfs-webui/issues/1744 for context.\n    const publicGateway = store.selectPublicGateway()\n    return await getShareableLink(files, publicGateway, ipfs)\n  }),\n\n  /**\n   * Moves file from `src` MFS path to a `dst` MFS path. On completion (success\n   * or fail) triggers `doFilesFetch` to update the state.\n   * @param {string} src\n   * @param {string} dst\n   */\n  doFilesMove: (src, dst) => perform(ACTIONS.MOVE, async (ipfs, { store }) => {\n    ensureMFS(store)\n\n    try {\n      await ipfs.files.mv(realMfsPath(src), realMfsPath(dst))\n\n      const page = store.selectFiles()\n      const pagePath = page && page.path\n      if (src === pagePath) {\n        await store.doUpdateHash(dst)\n      }\n    } finally {\n      await store.doFilesFetch()\n    }\n  }),\n\n  /**\n   * Copies file from `src` MFS path to a `dst` MFS path. On completion (success\n   * or fail) triggers `doFilesFetch` to update the state.\n  * @param {string} src\n  * @param {string} dst\n  */\n  doFilesCopy: (src, dst) => perform(ACTIONS.COPY, async (ipfs, { store }) => {\n    ensureMFS(store)\n\n    try {\n      await ipfs.files.cp(realMfsPath(src), realMfsPath(dst))\n    } finally {\n      await store.doFilesFetch()\n    }\n  }),\n\n  /**\n   * Creates a directory at given MFS `path`. On completion (success or fail)\n   * triggers `doFilesFetch` to update the state.\n   * @param {string} path\n   */\n  doFilesMakeDir: (path) => perform(ACTIONS.MAKE_DIR, async (ipfs, { store }) => {\n    ensureMFS(store)\n\n    try {\n      await ipfs.files.mkdir(realMfsPath(path), {\n        parents: true\n      })\n    } finally {\n      await store.doFilesFetch()\n    }\n  }),\n\n  /**\n   * Pins given `cid`. On completion (success or fail) triggers `doPinsFetch` to\n   * update the state.\n   * @param {CID} cid\n   */\n  doFilesPin: (cid) => perform(ACTIONS.PIN_ADD, async (ipfs, { store }) => {\n    try {\n      return await ipfs.pin.add(cid)\n    } finally {\n      await store.doPinsFetch()\n    }\n  }),\n\n  /**\n   * Unpins given `cid`. On completion (success or fail) triggers `doPinsFetch`\n   * to update the state.\n   * @param {CID} cid\n   */\n  doFilesUnpin: (cid) => perform(ACTIONS.PIN_REMOVE, async (ipfs, { store }) => {\n    try {\n      return await ipfs.pin.rm(cid)\n    } finally {\n      await store.doPinsFetch()\n    }\n  }),\n\n  /**\n   * Clears all failed tasks.\n   */\n  doFilesDismissErrors: () => send({ type: ACTIONS.DISMISS_ERRORS }),\n\n  /**\n   * @param {Object} fileArgs\n   * @param {string} fileArgs.path\n   * @param {string|CID} fileArgs.cid\n  */\n  doFilesNavigateTo: ({ path, cid }) =>\n    /**\n     * @param {Context} context\n     */\n    async ({ store }) => {\n      try {\n        const link = path.split('/').map(p => encodeURIComponent(p)).join('/')\n        const files = store.selectFiles()\n        const url = store.selectFilesPathInfo()\n\n        if (files && files.path === link && url) {\n          await store.doFilesFetch()\n        } else {\n          await store.doUpdateHash(link)\n        }\n      } catch (e) {\n        console.error(e)\n        store.doUpdateHash(`/ipfs/${cid}`)\n      }\n    },\n\n  /**\n   * @param {import('./consts').SORTING} by\n   * @param {boolean} asc\n   */\n  doFilesUpdateSorting: (by, asc) => send({\n    type: ACTIONS.UPDATE_SORT,\n    payload: { by, asc }\n  }),\n\n  /**\n   * Clears all the tasks (pending, complete and failed).\n   */\n  doFilesClear: () => send({ type: ACTIONS.CLEAR_ALL }),\n\n  /**\n   * Gets size of the MFS. On successful completion `state.mfsSize` will get\n   * updated.\n   */\n  doFilesSizeGet: () => perform(ACTIONS.SIZE_GET, async (ipfs) => {\n    return { size: await cumulativeSize(ipfs, '/') }\n  }),\n\n  /**\n   * @param {string|CID} cid\n  */\n  doGetFileSizeThroughCid: (cid) =>\n    /**\n     * @param {Object} store\n     * @param {Function} store.getIpfs\n    */\n    async (store) => {\n      const ipfs = store.getIpfs()\n      return cumulativeSize(ipfs, cid)\n    }\n})\n\nexport default actions\n/**\n *\n * @param {IPFSService} ipfs\n * @param {FileStream[]} files\n */\nconst importFiles = (ipfs, files) => {\n  /** @type {Channel<{ offset:number, name: string}>} */\n  const channel = new Channel()\n  const result = all(ipfs.addAll(files, {\n    pin: false,\n    wrapWithDirectory: false,\n    progress: (offset, name) => channel.send({ offset, name })\n  }))\n\n  result.then(() => channel.close(), error => channel.close(error))\n\n  return { result, progress: channel }\n}\n\n/**\n * @param {IPFSService} ipfs\n * @param {CID} cid\n * @param {Object} options\n * @param {string} options.path\n * @param {boolean} [options.isRoot]\n * @param {import('./utils').Sorting} options.sorting\n */\nconst dirStats = async (ipfs, cid, { path, isRoot, sorting }) => {\n  const entries = await all(ipfs.ls(cid)) || []\n  // Workarounds regression in IPFS HTTP Client that causes\n  // ls on empty dir to return list with that dir only.\n  // @see https://github.com/ipfs/js-ipfs/issues/3566\n  const res = (entries.length === 1 && entries[0].cid.toString() === cid.toString())\n    ? []\n    : entries\n  const files = []\n\n  // precaution: there was a historical performance issue when too many dirs were present\n  let dirCount = 0\n\n  for (const f of res) {\n    const absPath = join(path, f.name)\n    let file = null\n\n    if (dirCount < 1000 && (f.type === 'directory' || f.type === 'dir')) {\n      dirCount += 1\n      file = fileFromStats({ ...await stat(ipfs, f.cid), path: absPath })\n    } else {\n      file = fileFromStats({ ...f, path: absPath })\n    }\n\n    files.push(file)\n  }\n\n  let parent = null\n\n  if (!isRoot) {\n    const parentPath = dirname(path)\n    const parentInfo = infoFromPath(parentPath, false)\n\n    if (parentInfo && (parentInfo.isMfs || !parentInfo.isRoot)) {\n      const realPath = parentInfo.realPath\n\n      if (realPath && realPath.startsWith('/ipns')) {\n        parentInfo.realPath = await last(ipfs.name.resolve(parentInfo.realPath))\n      }\n\n      parent = fileFromStats({\n        ...await stat(ipfs, parentInfo.realPath),\n        path: parentInfo.path,\n        name: '..',\n        isParent: true\n      })\n    }\n  }\n\n  return {\n    path: path,\n    fetched: Date.now(),\n    type: 'directory',\n    cid,\n    upper: parent,\n    content: sortFiles(files, sorting)\n  }\n}\n","import memoize from 'p-memoize'\nimport toUri from 'multiaddr-to-uri'\nimport { createAsyncResourceBundle, createSelector } from 'redux-bundler'\n\nconst LOCAL_HOSTNAMES = ['127.0.0.1', '[::1]', '0.0.0.0', '[::]']\n\nconst bundle = createAsyncResourceBundle({\n  name: 'config',\n  staleAfter: 60000,\n  persist: false,\n  checkIfOnline: false,\n\n  getPromise: async ({ getIpfs, store }) => {\n    const rawConf = await getIpfs().config.getAll()\n    let conf\n\n    if (Buffer.isBuffer(rawConf)) {\n      conf = rawConf.toString()\n    } else {\n      conf = JSON.stringify(rawConf, null, '\\t')\n    }\n\n    const config = JSON.parse(conf)\n\n    const publicGateway = store.selectPublicGateway()\n    const url = getURLFromAddress('Gateway', config) || publicGateway\n\n    // Normalize local hostnames to localhost\n    // to leverage subdomain gateway, if present\n    // https://github.com/ipfs-shipyard/ipfs-webui/issues/1490\n    const gw = new URL(url)\n    if (LOCAL_HOSTNAMES.includes(gw.hostname)) {\n      gw.hostname = 'localhost'\n      const localUrl = gw.toString().replace(/\\/+$/, '') // no trailing slashes\n      if (await checkIfSubdomainGatewayUrlIsAccessible(localUrl)) {\n        store.doSetAvailableGateway(localUrl)\n        return conf\n      }\n    }\n\n    if (!await checkIfGatewayUrlIsAccessible(url)) {\n      store.doSetAvailableGateway(publicGateway)\n    }\n\n    // stringy json for quick compares\n    return conf\n  }\n})\n\n// derive the object from the stringy json\nbundle.selectConfigObject = createSelector(\n  'selectConfig',\n  (configStr) => JSON.parse(configStr)\n)\n\nbundle.selectApiUrl = createSelector(\n  'selectConfigObject',\n  'selectPublicGateway',\n  (config, publicGateway) => getURLFromAddress('API', config) || publicGateway\n)\n\nbundle.selectGatewayUrl = createSelector(\n  'selectConfigObject',\n  'selectPublicGateway',\n  (config, publicGateway) => getURLFromAddress('Gateway', config) || publicGateway\n)\n\nbundle.selectAvailableGatewayUrl = createSelector(\n  'selectAvailableGateway',\n  'selectGatewayUrl',\n  (availableGateway, gatewayUrl) => availableGateway || gatewayUrl\n)\n\nbundle.selectBootstrapPeers = createSelector(\n  'selectConfigObject',\n  (config) => config && config.Bootstrap\n)\n\n// TODO: this is a work-around for IPFS companion blocking the config API\n// see: https://github.com/ipfs-shipyard/ipfs-companion/issues/454\nbundle.selectIsConfigBlocked = createSelector(\n  'selectConfigRaw',\n  ({ errorType }) => errorType === 'Access to config.get API is globally blocked for window.ipfs'\n)\n\n// Fetch the config if we don't have it or it's more than `staleAfter` ms old\nbundle.reactConfigFetch = createSelector(\n  'selectConfigShouldUpdate',\n  'selectIpfsReady',\n  (shouldUpdate, ipfsReady) => {\n    if (shouldUpdate && ipfsReady) {\n      return { actionCreator: 'doFetchConfig' }\n    }\n  }\n)\n\nfunction getURLFromAddress (name, config) {\n  if (!config) return null\n\n  try {\n    const address = Array.isArray(config.Addresses[name])\n      ? config.Addresses[name][0]\n      : config.Addresses[name]\n    const url = toUri(address, { assumeHttp: true })\n    if (new URL(url).port === 0) throw Error('port set to 0, not deterministic')\n    return url\n  } catch (error) {\n    console.log(`Failed to get url from config at Addresses.${name}`, error)\n    return null\n  }\n}\n\nconst checkIfGatewayUrlIsAccessible = memoize(async (url) => {\n  try {\n    const { status } = await fetch(\n    `${url}/ipfs/bafkqae2xmvwgg33nmuqhi3zajfiemuzahiwss`\n    )\n    return status === 200\n  } catch (e) {\n    console.error(`Unable to use the gateway at ${url}. The public gateway will be used as a fallback`, e)\n    return false\n  }\n})\n\n// Separate test is necessary to see if subdomain mode is possible,\n// because some browser+OS combinations won't resolve them:\n// https://github.com/ipfs/go-ipfs/issues/7527\nconst checkIfSubdomainGatewayUrlIsAccessible = memoize(async (url) => {\n  try {\n    url = new URL(url)\n    url.hostname = `bafkqae2xmvwgg33nmuqhi3zajfiemuzahiwss.ipfs.${url.hostname}`\n    const { status } = await fetch(url.toString())\n    return status === 200\n  } catch (e) {\n    console.error(`Unable to use the subdomain gateway at ${url}. Regular gateway will be used as a fallback`, e)\n    return false\n  }\n})\n\nexport default bundle\n","import React from 'react'\nimport './ComponentLoader.css'\n\nconst ComponentLoader = (props) => (\n  <div {...props} style={{ width: 300, margin: '10vh auto', ...props.style }}>\n    <svg className='ComponentLoader' style={{ width: '100%' }} viewBox=\"0 0 512 512\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path className='shape' strokeDasharray=\"4187\" stroke=\"#40898C\" strokeWidth=\"3\" d=\"M256.7 511.99L35 383.99V128L256.7 0L478.4 127.99V383.99L256.7 511.99ZM73.075 123.636L233.815 30.83H233.832C247.387 40.831 265.877 40.831 279.431 30.83L440.171 123.636C439.85 126.49 439.85 129.37 440.172 132.224L279.422 225.031C265.868 215.031 247.379 215.031 233.825 225.031L73.075 132.226C73.3963 129.372 73.3963 126.49 73.075 123.636ZM294.685 251.7L455.605 157.86L455.614 157.864C457.926 159.569 460.421 161.009 463.054 162.158V347.768C447.615 354.506 438.371 370.519 440.255 387.258L279.505 480.063C277.194 478.358 274.699 476.918 272.066 475.769L271.886 291.189C287.324 284.451 296.569 268.439 294.685 251.7ZM50.357 163.187C52.9892 162.038 55.4841 160.597 57.795 158.892L57.796 158.887L218.536 251.697C216.652 268.437 225.897 284.449 241.336 291.187V476.797C238.703 477.946 236.208 479.387 233.896 481.092L73.156 388.286C75.04 371.547 65.795 355.535 50.357 348.797V163.187Z\"/>\n      <path d=\"M34.298 384L255.998 512L477.698 384V128L255.998 0.0100098L34.298 128.01V384Z\" fill=\"url(#paint1_linear)\"/>\n      <path d=\"M233.113 30.84L72.373 123.646C72.6943 126.5 72.6943 129.382 72.373 132.236L233.123 225.041C246.677 215.041 265.166 215.041 278.72 225.041L439.47 132.234C439.148 129.38 439.148 126.5 439.469 123.646L278.729 30.84C265.175 40.841 246.685 40.841 233.13 30.84H233.113ZM454.903 157.87L293.983 251.71C295.867 268.449 286.622 284.461 271.184 291.199L271.364 475.779C273.997 476.928 276.492 478.368 278.803 480.073L439.553 387.268C437.669 370.529 446.913 354.516 462.352 347.778V162.168C459.719 161.019 457.224 159.579 454.912 157.874L454.903 157.87ZM57.093 158.902C54.7821 160.607 52.2872 162.048 49.655 163.197V348.807C65.093 355.545 74.338 371.557 72.454 388.296L233.194 481.102C235.506 479.397 238.001 477.956 240.634 476.807V291.197C225.195 284.459 215.95 268.447 217.834 251.707L57.094 158.897L57.093 158.902Z\" fill=\"url(#paint2_linear)\"/>\n      <path d=\"M256 512L477.7 384V128L256 256V512Z\" fill=\"black\" fillOpacity=\"0.251\"/>\n      <path d=\"M256 512V256C169.421 206.013 120.879 177.987 34.3 128V384L256 512Z\" fill=\"black\" fillOpacity=\"0.039\"/>\n      <path d=\"M34.298 128L255.998 256L477.698 128L255.998 0L34.298 128Z\" fill=\"black\" fillOpacity=\"0.13\"/>\n      <defs>\n        <linearGradient id=\"paint1_linear\" x1=\"34.298\" y1=\"256\" x2=\"477.703\" y2=\"256\" gradientUnits=\"userSpaceOnUse\">\n          <stop stopColor=\"#4A9EA1\"/>\n        </linearGradient>\n        <linearGradient id=\"paint2_linear\" x1=\"49.658\" y1=\"255.97\" x2=\"462.343\" y2=\"255.97\" gradientUnits=\"userSpaceOnUse\">\n          <stop stopColor=\"#63D3D7\"/>\n        </linearGradient>\n      </defs>\n    </svg>\n  </div>\n)\n\nexport default ComponentLoader\n","import { createSelector } from 'redux-bundler'\nimport { ACTIONS } from './consts'\nimport { infoFromPath } from './utils'\n\n/**\n * @typedef {import('./protocol').Model} Files\n * @typedef {import('./protocol').PageContent} PageContent\n * @typedef {Object} Model\n * @property {Files} files\n *\n * @typedef {import('redux-bundler').Selectors<ReturnType<typeof selectors>>} Selectors\n */\n\n/**\n * @template M, I\n * @typedef {import('./protocol').PendingJob<M, I>} PendingJob\n */\n\nconst selectors = () => ({\n  /**\n   * @param {Model} state\n   * @returns {null|PageContent}\n   */\n  selectFiles: (state) => state.files.pageContent,\n\n  /**\n   * @param {Model} state\n   */\n  selectCurrentDirectorySize: (state) => {\n    return state.files.pageContent?.type === 'directory' && state.files.pageContent?.content?.reduce((prev, curr) => prev + curr.size, 0)\n  },\n\n  /**\n   * @param {Model} state\n   * @returns {string[]}\n   */\n  selectPins: (state) => state.files.pins,\n\n  /**\n   * @param {Model} state\n   * @returns {number}\n   */\n  selectFilesSize: (state) => state.files.mfsSize,\n\n  /**\n   * @param {Model} state\n   */\n  selectFilesIsFetching: (state) => state.files.pending.some(a => a.type === ACTIONS.FETCH),\n\n  /**\n   * @param {Model} state\n   * @returns {boolean}\n   */\n  selectShowLoadingAnimation: (state) => {\n    const pending = state.files.pending.find(a => a.type === ACTIONS.FETCH)\n    return pending ? (Date.now() - pending.start) > 1000 : false\n  },\n\n  /**\n   * @param {Model} state\n   */\n  selectFilesSorting: (state) => state.files.sorting,\n\n  /**\n   * @param {Model} state\n   * @returns {PendingJob<void, {progress: number, entries: {size:number, path: string}[]}>[]}\n   */\n  selectFilesPending: (state) =>\n    state.files.pending.filter(s => s.type === ACTIONS.WRITE && s.message != null),\n\n  /**\n   * @param {Model} state\n   */\n  selectFilesFinished: (state) =>\n    state.files.finished.filter(s => s.type === ACTIONS.WRITE),\n\n  /**\n   * @param {Model} state\n   */\n  selectFilesHasError: (state) => state.files.failed.length > 0,\n\n  /**\n   * @param {Model} state\n   */\n  selectFilesErrors: (state) => state.files.failed,\n\n  /**\n   * @param {Model} state\n   */\n  selectHasUpperDirectory: (state) => state.files.pageContent?.type === 'directory' && state.files.pageContent?.upper,\n\n  selectFilesPathInfo: createSelector(\n    'selectRouteInfo',\n    /**\n     * @param {object} routeInfo\n     * @param {string} routeInfo.url\n     */\n    (routeInfo) => {\n      return infoFromPath(routeInfo.url)\n    }\n  )\n})\n\nexport default selectors\n","import { sortFiles } from './utils'\nimport { DEFAULT_STATE, ACTIONS, SORTING } from './consts'\nimport selectors from './selectors'\nimport actions from './actions'\n\nexport { ACTIONS }\n\nexport const sorts = SORTING\n\n/**\n * @typedef {import('./protocol').Model} Model\n * @typedef {import('./protocol').Message} Message\n * @typedef {import('../task').SpawnState<any, Error, any, any>} JobState\n */\nconst createFilesBundle = () => {\n  return {\n    name: 'files',\n\n    /**\n     * @param {Model} state\n     * @param {Message} action\n     * @returns {Model}\n     */\n    reducer: (state = DEFAULT_STATE, action) => {\n      switch (action.type) {\n        case ACTIONS.DELETE:\n        case ACTIONS.ADD_BY_PATH:\n        case ACTIONS.DOWNLOAD_LINK:\n        case ACTIONS.SHARE_LINK:\n        case ACTIONS.MOVE:\n        case ACTIONS.COPY:\n        case ACTIONS.MAKE_DIR:\n        case ACTIONS.PIN_ADD:\n        case ACTIONS.PIN_REMOVE:\n          return updateJob(state, action.task, action.type)\n        case ACTIONS.WRITE: {\n          return updateJob(state, action.task, action.type)\n        }\n        case ACTIONS.PIN_LIST: {\n          const { task, type } = action\n\n          const pins = task.status === 'Exit' && task.result.ok\n            ? task.result.value.pins.map(String)\n            : state.pins\n\n          return {\n            ...updateJob(state, task, type),\n            pins\n          }\n        }\n        case ACTIONS.FETCH: {\n          const { task, type } = action\n          const result = task.status === 'Exit' && task.result.ok\n            ? task.result.value\n            : null\n          const { pageContent, pins } = result\n            ? {\n              pageContent: result,\n              pins: result.type === 'directory' && result.path === '/pins'\n                ? result.content.map($ => $.cid.toString())\n                : state.pins\n            }\n            : state\n\n          return {\n            ...updateJob(state, task, type),\n            pageContent,\n            pins\n          }\n        }\n        case ACTIONS.DISMISS_ERRORS: {\n          return {\n            ...state,\n            failed: []\n          }\n        }\n        case ACTIONS.CLEAR_ALL: {\n          return {\n            ...state,\n            failed: [],\n            finished: [],\n            pending: []\n          }\n        }\n        case ACTIONS.UPDATE_SORT: {\n          const { pageContent } = state\n          if (pageContent && pageContent.type === 'directory') {\n            const content = sortFiles(pageContent.content, action.payload)\n            return {\n              ...state,\n              pageContent: {\n                ...pageContent,\n                content\n              },\n              sorting: action.payload\n            }\n          } else {\n            return state\n          }\n        }\n        case ACTIONS.SIZE_GET: {\n          const { task, type } = action\n          const mfsSize = task.status === 'Exit' && task.result.ok\n            ? task.result.value.size\n            : state.mfsSize\n\n          return {\n            ...updateJob(state, task, type),\n            mfsSize\n          }\n        }\n        default: {\n          return state\n        }\n      }\n    },\n    ...actions(),\n    ...selectors()\n  }\n}\nexport default createFilesBundle\n/**\n * Updates state of the given job.\n * @param {Model} state\n * @param {JobState} task\n * @param {*} type\n * @returns {Model}\n */\nconst updateJob = (state, task, type) => {\n  switch (task.status) {\n    case 'Init': {\n      return {\n        ...state,\n        pending: [\n          ...state.pending,\n          {\n            ...task,\n            type,\n            status: 'Pending',\n            start: Date.now()\n          }\n        ]\n      }\n    }\n    case 'Send': {\n      const { pending, rest } = pullPending(state.pending, task)\n      return {\n        ...state,\n        pending: [\n          ...rest,\n          {\n            ...pending,\n            ...task,\n            status: 'Pending'\n          }\n        ]\n      }\n    }\n    case 'Exit': {\n      const { pending, rest } = pullPending(state.pending, task)\n\n      if (task.result.ok) {\n        return {\n          ...state,\n          pending: rest,\n          finished: [\n            ...state.finished,\n            {\n              ...pending,\n              ...task,\n              end: Date.now(),\n              value: task.result.value,\n              status: 'Done'\n            }\n          ]\n        }\n      } else {\n        return {\n          ...state,\n          pending: rest,\n          failed: [\n            ...state.failed,\n            {\n              ...pending,\n              ...task,\n              end: Date.now(),\n              error: task.result.error,\n              status: 'Failed'\n            }\n          ]\n        }\n      }\n    }\n    default: {\n      console.error('Task has an invalid state', task)\n      return state\n    }\n  }\n}\n\n/**\n * @template T, I\n * @typedef {import('./protocol').PendingJob<T, I>} PendingJob\n */\n\n/**\n * Takes array of pending job states and job that was updated and returns\n * array of pending jobs but the one passed & start time of that job\n * @template T, I\n * @param {PendingJob<T, I>[]} tasks\n * @param {JobState} task\n * @returns {{pending:PendingJob<T, I>, rest:PendingJob<T, I>[]}}\n */\nconst pullPending = (tasks, task) => {\n  const { id } = task\n  const pending = tasks.find($ => $.id === id)\n\n  if (pending == null) {\n    throw Error('Unable to find a pending task')\n  }\n\n  return {\n    pending,\n    rest: tasks.filter($ => $.id !== id)\n  }\n}\n","// @ts-check\n\n/**\n * @template {string} T\n * @param {T[]} variants\n * @returns {{[K in T]: K}}\n */\nexport const from = (variants) => variants.reduce((result, key) => {\n  result[key] = key\n  return result\n}, Object.create(null))\n","export default __webpack_public_path__ + \"static/media/ipfs-logo-text-vert.6fc9edd5.svg\";","export default __webpack_public_path__ + \"static/media/ipfs-logo-text-horiz.2c5486c4.svg\";","import React from 'react'\n\nconst StrokeMarketing = props => (\n  <svg viewBox='0 0 100 100' {...props}>\n    <path d='M76.595 19.785h-52.93a3.93 3.93 0 0 0-3.92 3.92v39.12a5.74 5.74 0 0 0 5.73 5.73h23.79v6.25h-9.67a4 4 0 0 0-4 4 3.59 3.59 0 0 0 .08.81l.12.6h28.49l.13-.6a4.28 4.28 0 0 0 .08-.81 4 4 0 0 0-4-4h-9.73v-6.25h25.83a3.67 3.67 0 0 0 3.66-3.67v-41.44a3.67 3.67 0 0 0-3.66-3.66zm-13.61 58.94h-25.95a2.52 2.52 0 0 1 2.56-2.42h20.88a2.51 2.51 0 0 1 2.51 2.42zm-39.32-55.94h52.93a.66.66 0 0 1 .66.66v5.56h-54.51v-5.3a.92.92 0 0 1 .92-.92zm52.93 42.77h-51.12a2.73 2.73 0 0 1-2.73-2.73v-32.29h54.53v34.35a.67.67 0 0 1-.68.67z' />\n    <path d='M68.315 35.735a3.61 3.61 0 0 0-3.61 3.61 3.58 3.58 0 0 0 .74 2.17l-9.77 10.38a3.5 3.5 0 0 0-4.13.46l-7.4-5a3.61 3.61 0 1 0-6.9-1.48 3.58 3.58 0 0 0 .41 1.63l-.06-.05-4.54 5.55a3.57 3.57 0 0 0-1.35-.27 3.62 3.62 0 1 0 2.6 1.11l4.29-5.21a3.53 3.53 0 0 0 2.3.86 3.62 3.62 0 0 0 2.39-.92l7.41 5a3.52 3.52 0 0 0-.37 1.43 3.635 3.635 0 1 0 7.27 0 3.57 3.57 0 0 0-.74-2.16l9.74-10.35a3.49 3.49 0 0 0 1.73.46 3.61 3.61 0 0 0 0-7.22zm-36.61 22.72a2.11 2.11 0 1 1 2.11-2.11 2.12 2.12 0 0 1-2.11 2.11zm9.15-10.45a2.11 2.11 0 1 1 2.11-2.11 2.12 2.12 0 0 1-2.11 2.11zm13.08 9.15a2.11 2.11 0 1 1 2.11-2.15 2.11 2.11 0 0 1-2.11 2.14zm14.38-15.7a2.11 2.11 0 1 1 2.11-2.11 2.11 2.11 0 0 1-2.11 2.11z' />\n  </svg>\n)\n\nexport default StrokeMarketing\n","import React from 'react'\n\nconst StrokeWeb = props => (\n  <svg viewBox='0 0 100 100' {...props}>\n    <path d='M36 33.4h14.21a1 1 0 0 0 0-2H36a1 1 0 0 0 0 2zm0 8.84h14.21a1 1 0 0 0 0-2H36a1 1 0 0 0 0 2zm30.08 7.57a1.07 1.07 0 0 0-.07-.19.64.64 0 0 1 0-.07l-.08-.08-.14-.15-.15-.1-.18-.08h-.2a.35.35 0 0 0-.11 0H36a1 1 0 0 0-1 1v17.68a.71.71 0 0 0 0 .2.64.64 0 0 0 .06.18.36.36 0 0 1 0 .07.65.65 0 0 0 .13.16 1.26 1.26 0 0 0 .28.19h.08a1 1 0 0 0 .34.07h29.24a1 1 0 0 0 1-1V50a1.62 1.62 0 0 0-.05-.19zm-4.52 1.26L37 66V51.07zm-22 15.68l24.52-14.9v14.9z' />\n    <path d='M75.13 37.17v-.05L56.55 17.8H30a5.51 5.51 0 0 0-5.5 5.5v53.4a5.51 5.51 0 0 0 5.5 5.5h40a5.51 5.51 0 0 0 5.5-5.5V37.51zM56.91 22.51l14 14.61h-7.08c-4 0-6.92-2.53-6.92-6zM70 79.2H30a2.5 2.5 0 0 1-2.5-2.5V23.3a2.5 2.5 0 0 1 2.5-2.5h24.91v10.31c0 4.64 3.75 8 8.92 8h8.63V76.7A2.5 2.5 0 0 1 70 79.2z' />\n  </svg>\n)\n\nexport default StrokeWeb\n","import React from 'react'\n\nconst StrokeSettings = props => (\n  <svg viewBox='0 0 100 100' {...props}>\n    <path d='M50.077 42.884h-.09a7.14 7.14 0 0 0-5 2.06 7.07 7.07 0 0 0-2.11 5 7.16 7.16 0 0 0 7.11 7.21 7.14 7.14 0 0 0 .09-14.27zm-.09 11.67a4.57 4.57 0 0 1-4.54-4.54 4.46 4.46 0 0 1 1.34-3.19 4.54 4.54 0 0 1 3.2-1.34 4.53 4.53 0 0 1 4.48 4.67 4.54 4.54 0 0 1-4.48 4.4z' />\n    <path d='M83.697 56.764c-3.29-1.27-4.93-3.4-5-6.51-.07-3.29 1.56-5.53 5-6.86a1.3 1.3 0 0 0 .82-1.38c-.25-2.51-3-9-4.45-10.72a1.3 1.3 0 0 0-1.53-.28c-3.25 1.52-6 1.15-8.27-1.14-2.27-2.29-2.71-5-1.17-8.39a1.29 1.29 0 0 0-.5-1.65 34.72 34.72 0 0 0-10.42-4.29 1.29 1.29 0 0 0-1.52.84c-1.11 3.22-3.1 4.9-6.1 5.12-3.57.27-6-1.41-7.36-5.11a1.31 1.31 0 0 0-1.53-.82 35.49 35.49 0 0 0-10.38 4.37 1.3 1.3 0 0 0-.48 1.66c1.56 3.28 1.21 6-1.07 8.32-2.28 2.32-5.05 2.74-8.38 1.21a1.31 1.31 0 0 0-1.66.5 35.31 35.31 0 0 0-4.23 10.38 1.31 1.31 0 0 0 .82 1.51c3.34 1.23 5 3.35 5.07 6.51.07 3.16-1.55 5.53-5 6.86a1.3 1.3 0 0 0-.79 1.52 34.69 34.69 0 0 0 4.42 10.34 1.29 1.29 0 0 0 1.63.5c3.23-1.44 5.9-1.06 8.16 1.14s2.75 5 1.32 8.23a1.3 1.3 0 0 0 .52 1.63 35.46 35.46 0 0 0 10.37 4.23 1.15 1.15 0 0 0 .26 0 1.44 1.44 0 0 0 1.23-.79 2.43 2.43 0 0 0 .14-.28 6.89 6.89 0 0 1 13-.17 1.7 1.7 0 0 0 2.16 1.06 35.78 35.78 0 0 0 9.44-3.9l.36-.24.11-.08a1.29 1.29 0 0 0 .47-1.61c-1.32-3-1.06-5.51.8-7.68 2.29-2.66 5.12-3.22 8.67-1.71a1.29 1.29 0 0 0 1.61-.51 34.87 34.87 0 0 0 4.3-10.33 1.29 1.29 0 0 0-.84-1.48zm-5.16 9.55a9.16 9.16 0 0 0-10.55 2.82 9.05 9.05 0 0 0-1.62 9.36 33 33 0 0 1-7.63 3.16 9.36 9.36 0 0 0-8.75-5.5h-.14a9.5 9.5 0 0 0-8.38 5.54 32.24 32.24 0 0 1-7.63-3.12 9.06 9.06 0 0 0-2.32-10 9.11 9.11 0 0 0-10-2.08 32.48 32.48 0 0 1-3.2-7.57 9.1 9.1 0 0 0 5.67-8.91 9.08 9.08 0 0 0-5.69-8.44 32.5 32.5 0 0 1 3.09-7.62 9.08 9.08 0 0 0 10.23-2.2 9 9 0 0 0 2-10.17 32.73 32.73 0 0 1 7.6-3.18 9.12 9.12 0 0 0 9.53 5.71 9 9 0 0 0 7.93-5.75 32.76 32.76 0 0 1 7.61 3.14 9.09 9.09 0 0 0 2.15 10.24 9.08 9.08 0 0 0 10.19 2.07 37.24 37.24 0 0 1 3.13 7.6 9.49 9.49 0 0 0-.06 17.33 32.18 32.18 0 0 1-3.16 7.57z' />\n    <path d='M49.987 32.934a17.09 17.09 0 1 0 17.08 17.08 17.1 17.1 0 0 0-17.08-17.08zm0 32.67a15.59 15.59 0 1 1 15.58-15.59 15.61 15.61 0 0 1-15.58 15.59z' />\n  </svg>\n)\n\nexport default StrokeSettings\n","import React from 'react'\nimport { connect } from 'redux-bundler-react'\nimport { withTranslation } from 'react-i18next'\nimport classnames from 'classnames'\nimport ipfsLogoTextVert from './ipfs-logo-text-vert.svg'\nimport ipfsLogoTextHoriz from './ipfs-logo-text-horiz.svg'\nimport StrokeMarketing from '../icons/StrokeMarketing'\nimport StrokeWeb from '../icons/StrokeWeb'\nimport StrokeCube from '../icons/StrokeCube'\nimport StrokeSettings from '../icons/StrokeSettings'\nimport StrokeIpld from '../icons/StrokeIpld'\n\n// Styles\nimport './NavBar.css'\n\nconst NavLink = ({\n  to,\n  icon,\n  alternative,\n  disabled,\n  children\n}) => {\n  const Svg = icon\n  const { hash } = window.location\n  const href = `#${to}`\n  const active = alternative\n    ? hash === href || hash.startsWith(`${href}${alternative}`)\n    : hash && hash.startsWith(href)\n  const anchorClass = classnames({\n    'bg-white-10 navbar-item-active': active,\n    'o-50 no-pointer-events': disabled\n  }, ['navbar-item dib db-l pt2 pb3 pv1-l white no-underline f5 hover-bg-white-10 tc bb bw2 bw0-l b--navy'])\n  const svgClass = classnames({\n    'o-100': active,\n    'o-50': !active\n  }, ['fill-current-color'])\n\n  return (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a href={disabled ? null : href} className={anchorClass} role='menuitem' title={children}>\n      <div className='db ph2 pv1'>\n        <div className='db'>\n          <Svg width='46' role='presentation' className={svgClass} />\n        </div>\n        <div className={`${active ? 'o-100' : 'o-50'} db f6 tc montserrat ttu fw1 `} style={{ whiteSpace: 'pre-wrap' }}>\n          {children}\n        </div>\n      </div>\n    </a>\n  )\n}\n\nexport const NavBar = ({ t }) => {\n  const codeUrl = 'https://github.com/ipfs/ipfs-webui'\n  const bugsUrl = `${codeUrl}/issues`\n  const gitRevision = process.env.REACT_APP_GIT_REV\n  const revisionUrl = `${codeUrl}/commit/${gitRevision}`\n  const webUiVersion = process.env.REACT_APP_VERSION\n  const webUiVersionUrl = `${codeUrl}/releases/tag/v${webUiVersion}`\n  return (\n    <div className='h-100 fixed-l flex flex-column justify-between' style={{ overflowY: 'auto', width: 'inherit' }}>\n      <div className='flex flex-column'>\n        <a href=\"#/welcome\" role='menuitem' title={t('welcome:description')}>\n          <div className='pt3 pb1 pb2-l'>\n            <img className='navbar-logo-vert center db-l dn pt3 pb1' style={{ height: 94 }} src={ipfsLogoTextVert} alt='' />\n            <img className='navbar-logo-horiz center db dn-l' style={{ height: 70 }} src={ipfsLogoTextHoriz} alt='' />\n          </div>\n        </a>\n        <div className='db overflow-x-scroll overflow-x-hidden-l nowrap tc' role='menubar'>\n          <NavLink to='/' alternative=\"status\" icon={StrokeMarketing}>{t('status:title')}</NavLink>\n          <NavLink to='/files' icon={StrokeWeb}>{t('files:title')}</NavLink>\n          <NavLink to='/explore' icon={StrokeIpld}>{t('explore:tabName')}</NavLink>\n          <NavLink to='/peers' icon={StrokeCube}>{t('peers:title')}</NavLink>\n          <NavLink to='/settings' icon={StrokeSettings}>{t('settings:title')}</NavLink>\n        </div>\n      </div>\n      <div className='dn db-l navbar-footer mb2 tc center f7 o-80 glow'>\n        { webUiVersion && <div className='mb1'>\n          <a className='link white' href={webUiVersionUrl} target='_blank' rel='noopener noreferrer'>{t('app:terms.ui')} v{webUiVersion}</a>\n        </div> }\n        { gitRevision && <div className='mb1'>\n          <a className='link white' href={revisionUrl} target='_blank' rel='noopener noreferrer'>{t('app:nav.revision')} {gitRevision}</a>\n        </div> }\n        <div className='mb1'>\n          <a className='link white' href={codeUrl} target='_blank' rel='noopener noreferrer'>{t('app:nav.codeLink')}</a>\n        </div>\n        <div>\n          <a className='link white' href={bugsUrl} target='_blank' rel='noopener noreferrer'>{t('app:nav.bugsLink')}</a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect(\n  withTranslation()(NavBar)\n)\n","import React from 'react'\nimport CancelIcon from '../../icons/GlyphSmallCancel'\n\nconst Toast = ({ error, children, onDismiss }) => {\n  const bg = error ? 'bg-yellow' : 'bg-green'\n  return (\n    <div className='fixed bottom-0 tc pb2 z-max' style={{ left: '50% ', transform: 'translateX(-50%)' }}>\n      <div className={`flex items-center f5 lh-copy avenir pl2 pl4-ns pv2 white br2 ${bg}`}>\n        {children}\n        <CancelIcon\n          className='fill-current-color ph3 glow o-80 pointer'\n          style={{ height: '28px', transform: 'scale(1.5)' }}\n          onClick={onDismiss} />\n      </div>\n    </div>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { connect } from 'redux-bundler-react'\nimport { withTranslation } from 'react-i18next'\nimport Toast from './Toast'\n\nconst Notify = ({ t, notify, notifyI18nKey, doNotifyDismiss }) => {\n  const { show, error, msgArgs } = notify\n  if (!show) return null\n\n  return (\n    <Toast error={error} onDismiss={doNotifyDismiss}>\n      {t(notifyI18nKey, msgArgs)}\n    </Toast>\n  )\n}\n\nexport default connect(\n  'selectNotify',\n  'selectNotifyI18nKey',\n  'doNotifyDismiss',\n  withTranslation('notify')(Notify)\n)\n","import React from 'react'\nimport { connect } from 'redux-bundler-react'\nimport { withTranslation } from 'react-i18next'\n\nconst pickColor = (ipfsReady, ipfsConnected) => {\n  if (ipfsReady && ipfsConnected) return 'teal'\n  if (ipfsReady) return 'red'\n  return 'gray'\n}\n\nconst pickTitleKey = (ipfsReady, ipfsConnected) => {\n  if (ipfsReady && ipfsConnected) return 'app:status.connectedToIpfs'\n  if (ipfsReady) return 'ipfsApiRequestFailed'\n  return 'app:status.connectingToIpfs'\n}\n\nexport const Connected = ({ t, className, size = 28, ipfsReady, ipfsConnected, doSetIsNodeInfoOpen }) => {\n  const title = t(pickTitleKey(ipfsReady, ipfsConnected))\n  const fill = pickColor(ipfsReady, ipfsConnected)\n  const opacity = ipfsConnected ? 'o-60' : 'o-100'\n\n  return (\n    <a title={title} className={`dib ${className}`} href='#/status' onClick={() => doSetIsNodeInfoOpen(true)}>\n      <svg className={`${fill} ${opacity} fill-current-color transition-all glow`} viewBox='0 0 24 24' width={size} height={size} aria-hidden=\"true\">\n        <path d='M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM6.5 9L10 5.5 13.5 9H11v4H9V9H6.5zm11 6L14 18.5 10.5 15H13v-4h2v4h2.5z ' />\n      </svg>\n    </a>\n  )\n}\n\nexport default connect(\n  'selectIpfsReady',\n  'selectIpfsConnected',\n  'doSetIsNodeInfoOpen',\n  withTranslation('notify')(Connected)\n)\n","import React from 'react'\nimport { connect } from 'redux-bundler-react'\nimport { withTranslation } from 'react-i18next'\n\nexport const TourHelper = ({ doEnableTours, className = '', size = 23, t }) => {\n  const handleClick = () => {\n    doEnableTours()\n  }\n\n  return (\n    <button className={`dib mr1 ml4-m pointer ${className}`} onClick={handleClick} aria-label={ t('startTourHelper')}>\n      <svg className='fill-teal o-60 glow' viewBox='0 0 44 44' width={size} height={size} aria-hidden=\"true\">\n        <path d='m22,0c-12.2,0-22,9.8-22,22s9.8,22 22,22 22-9.8 22-22-9.8-22-22-22zm2,34c0,0.6-0.4,1-1,1h-2c-0.6,0-1-0.4-1-1v-2c0-0.6 0.4-1 1-1h2c0.6,0 1,0.4 1,1v2zm2.7-8.9c-1.4,1.2-2.4,2-2.7,3.1-0.1,0.5-0.5,0.8-1,0.8h-2c-0.6,0-1.1-0.5-1-1.1 0.4-2.9 2.5-4.5 4.2-5.9 1.8-1.4 2.8-2.3 2.8-4 0-2.8-2.2-5-5-5s-5,2.2-5,5c0,0.2 0,0.4 0,0.6 0.1,0.5-0.2,1-0.7,1.1l-1.9,.6c-0.6,0.2-1.2-0.2-1.3-0.8-0.1-0.5-0.1-1-0.1-1.5 0-5 4-9 9-9s9,4 9,9c0,3.7-2.4,5.6-4.3,7.1z' />\n      </svg>\n    </button>\n  )\n}\n\nexport default connect(\n  'doEnableTours',\n  withTranslation('app')(TourHelper)\n)\n","import React from 'react'\nimport isIPFS from 'is-ipfs'\nimport PropTypes from 'prop-types'\nimport { withTranslation } from 'react-i18next'\nimport StrokeFolder from '../../icons/StrokeFolder'\nimport StrokeIpld from '../../icons/StrokeIpld'\nimport Button from '../../components/button/Button'\nimport './FilesExploreForm.css'\n\nclass FilesExploreForm extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      path: '',\n      hideExplore: false\n    }\n    this.onChange = this.onChange.bind(this)\n    this.onKeyDown = this.onKeyDown.bind(this)\n    this.onBrowse = this.onBrowse.bind(this)\n    this.onInspect = this.onInspect.bind(this)\n  }\n\n  onKeyDown (evt) {\n    if (evt.key === 'Enter') {\n      this.onBrowse(evt)\n    }\n  }\n\n  onBrowse (evt) {\n    evt.preventDefault()\n\n    if (this.isValid) {\n      let path = this.path\n\n      if (isIPFS.cid(path)) {\n        path = `/ipfs/${path}`\n      }\n\n      this.props.onBrowse({ path })\n      this.setState({ path: '' })\n    }\n  }\n\n  onInspect (evt) {\n    evt.preventDefault()\n\n    if (this.isValid) {\n      this.props.onInspect(this.path)\n      this.setState({ path: '' })\n    }\n  }\n\n  onChange (evt) {\n    const path = evt.target.value\n    this.setState({ path })\n  }\n\n  get path () {\n    return this.state.path.trim()\n  }\n\n  get isValid () {\n    return this.path !== '' && (isIPFS.cid(this.path) || isIPFS.path(this.path))\n  }\n\n  get inputClass () {\n    if (this.path === '') {\n      return 'focus-outline'\n    }\n\n    if (this.isValid) {\n      return 'b--green-muted focus-outline-green'\n    } else {\n      return 'b--red-muted focus-outline-red'\n    }\n  }\n\n  render () {\n    const { t } = this.props\n    return (\n      <div data-id='FilesExploreForm' className='sans-serif black-80 flex'>\n        <div className='flex-auto'>\n          <div className='relative'>\n            <input id='ipfs-path' className={`input-reset bn pa2 mb2 db w-100 f6 br-0 placeholder-light ${this.inputClass}`} style={{ borderRadius: '3px 0 0 3px' }} type='text' placeholder='QmHash/bafyHash' aria-describedby='ipfs-path-desc' onChange={this.onChange} onKeyDown={this.onKeyDown} value={this.state.path} />\n            <small id='ipfs-path-desc' className='o-0 absolute f6 black-60 db mb2'>Paste in a CID or IPFS path</small>\n          </div>\n        </div>\n        <div className='flex flex-row-reverse mb2'>\n          <Button\n            minWidth={0}\n            disabled={!this.isValid}\n            title={t('app:actions.inspect')}\n            style={{ borderRadius: '0 3px 3px 0' }}\n            onClick={this.onInspect}\n            bg='bg-teal'\n            className='ExploreFormButton button-reset pv1 ph2 ba f7 fw4 white overflow-hidden tc' >\n            <StrokeIpld style={{ height: '2em' }} className='dib fill-current-color v-mid' />\n            <span className='ml2'>{t('app:actions.inspect')}</span>\n          </Button>\n          <Button\n            minWidth={0}\n            disabled={!this.isValid}\n            style={{ borderRadius: '0' }}\n            title={t('app:actions.browse')}\n            onClick={this.onBrowse}\n            className='ExploreFormButton button-reset pv1 ph2 ba f7 fw4 white bg-gray overflow-hidden tc' >\n            <StrokeFolder style={{ height: '2em' }} className='dib fill-current-color v-mid' />\n            <span className='ml2'>{t('app:actions.browse')}</span>\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nFilesExploreForm.propTypes = {\n  t: PropTypes.func.isRequired,\n  onInspect: PropTypes.func.isRequired,\n  onBrowse: PropTypes.func.isRequired\n}\n\nexport default withTranslation('files')(FilesExploreForm)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'redux-bundler-react'\nimport { getNavHelper } from 'internal-nav-helper'\nimport ReactJoyride from 'react-joyride'\nimport { withTranslation } from 'react-i18next'\nimport { normalizeFiles } from './lib/files'\n// React DnD\nimport { DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\n// Lib\nimport { appTour } from './lib/tours'\nimport { getJoyrideLocales } from './helpers/i8n'\n// Components\nimport NavBar from './navigation/NavBar'\nimport ComponentLoader from './loader/ComponentLoader'\nimport Notify from './components/notify/Notify'\nimport Connected from './components/connected/Connected'\nimport TourHelper from './components/tour/TourHelper'\nimport FilesExploreForm from './files/explore-form/FilesExploreForm'\n\nexport class App extends Component {\n  static propTypes = {\n    doTryInitIpfs: PropTypes.func.isRequired,\n    doUpdateUrl: PropTypes.func.isRequired,\n    doUpdateHash: PropTypes.func.isRequired,\n    doFilesWrite: PropTypes.func.isRequired,\n    routeInfo: PropTypes.object.isRequired,\n    filesPathInfo: PropTypes.object,\n    // Injected by DropTarget\n    isOver: PropTypes.bool.isRequired\n  }\n\n  componentDidMount () {\n    this.props.doTryInitIpfs()\n  }\n\n  addFiles = async (filesPromise) => {\n    const { doFilesWrite, doUpdateHash, routeInfo, filesPathInfo } = this.props\n    const isFilesPage = routeInfo.pattern === '/files*'\n    const addAtPath = isFilesPage ? (filesPathInfo?.realPath || routeInfo.params.path) : '/'\n    const files = await filesPromise\n\n    doFilesWrite(normalizeFiles(files), addAtPath)\n    // Change to the files pages if the user is not there\n    if (!isFilesPage) {\n      doUpdateHash('/files')\n    }\n  }\n\n  handleJoyrideCb = (data) => {\n    if (data.action === 'close') {\n      this.props.doDisableTooltip()\n    }\n  }\n\n  render () {\n    const { t, route: Page, ipfsReady, doFilesNavigateTo, doExploreUserProvidedPath, routeInfo: { url }, connectDropTarget, canDrop, isOver, showTooltip } = this.props\n    return connectDropTarget(\n      // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n      <div className='sans-serif h-100 relative' onClick={getNavHelper(this.props.doUpdateUrl)}>\n        {/* Tinted overlay that appears when dragging and dropping an item */}\n        { canDrop && isOver && <div className='h-100 top-0 right-0 fixed appOverlay' style={{ background: 'rgba(99, 202, 210, 0.2)' }} /> }\n        <div className='flex flex-row-reverse-l flex-column-reverse justify-end justify-start-l' style={{ minHeight: '100vh' }}>\n          <div className='flex-auto-l'>\n            <div className='flex items-center ph3 ph4-l' style={{ WebkitAppRegion: 'drag', height: 75, background: '#F0F6FA', paddingTop: '20px', paddingBottom: '15px' }}>\n              <div className='joyride-app-explore' style={{ width: 560 }}>\n                <FilesExploreForm onBrowse={doFilesNavigateTo} onInspect={doExploreUserProvidedPath} />\n              </div>\n              <div className='dn flex-ns flex-auto items-center justify-end'>\n                <TourHelper />\n                <Connected className='joyride-app-status' />\n              </div>\n            </div>\n            <main className='bg-white pv3 pa3 pa4-l'>\n              { (ipfsReady || url === '/welcome' || url.startsWith('/settings'))\n                ? <Page />\n                : <ComponentLoader />\n              }\n            </main>\n          </div>\n          <div className='navbar-container flex-none-l bg-navy'>\n            <NavBar />\n          </div>\n        </div>\n\n        <ReactJoyride\n          run={showTooltip}\n          steps={appTour.getSteps({ t })}\n          styles={appTour.styles}\n          callback={this.handleJoyrideCb}\n          scrollToFirstStep\n          disableOverlay\n          locale={getJoyrideLocales(t)}\n        />\n\n        <Notify />\n      </div>\n    )\n  }\n}\n\nconst dropTarget = {\n  drop: (props, monitor, App) => {\n    if (monitor.didDrop()) {\n      return\n    }\n\n    const { filesPromise } = monitor.getItem()\n    App.addFiles(filesPromise)\n  },\n  canDrop: (props) => props.filesPathInfo ? props.filesPathInfo.isMfs : true\n}\n\nconst dropCollect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop()\n})\n\nexport const AppWithDropTarget = DropTarget(NativeTypes.FILE, dropTarget, dropCollect)(App)\n\nexport default connect(\n  'selectRoute',\n  'selectRouteInfo',\n  'selectIpfsReady',\n  'selectShowTooltip',\n  'doFilesNavigateTo',\n  'doExploreUserProvidedPath',\n  'doUpdateUrl',\n  'doUpdateHash',\n  'doTryInitIpfs',\n  'doFilesWrite',\n  'doDisableTooltip',\n  'selectFilesPathInfo',\n  withTranslation('app')(AppWithDropTarget)\n)\n","// Extracted from https://github.com/HenrikJoreteg/redux-bundler/blob/c1b8ce7629ee6c389f4155b3254e530bd09c868e/src/bundles/create-reactor-bundle.js\nimport { debounce, ric, raf } from 'redux-bundler'\n\nconst defaults = {\n  idleTimeout: 2000,\n  idleAction: 'APP_IDLE',\n  stopWhenTabInactive: false\n}\n\nconst ricOptions = { timeout: 500 }\n\nexport const getIdleDispatcher = (stopWhenInactive, timeout, fn) =>\n  debounce(() => {\n    // the requestAnimationFrame ensures it doesn't run when tab isn't active\n    stopWhenInactive ? raf(() => ric(fn, ricOptions)) : ric(fn, ricOptions)\n  }, timeout)\n\nconst createAppIdle = spec => ({\n  name: 'appIdle',\n\n  init: store => {\n    const opts = Object.assign({}, defaults, spec)\n    const { idleAction, idleTimeout } = opts\n    let idleDispatcher\n    if (idleTimeout) {\n      idleDispatcher = getIdleDispatcher(\n        opts.stopWhenTabInactive,\n        idleTimeout,\n        () => store.dispatch({ type: idleAction })\n      )\n    }\n\n    const callback = () => {\n      if (idleDispatcher) {\n        idleDispatcher()\n      }\n    }\n\n    store.subscribe(callback)\n    callback()\n  }\n})\nexport default createAppIdle\n","import { createSelector } from 'redux-bundler'\n\n// Depends on nodeBandwidthBundle\nfunction createNodeBandwidthChart (opts) {\n  opts = opts || {}\n  // Only store up to 1 day of data\n  opts.windowSize = opts.windowSize || 1000 * 60 * 60 * 24\n\n  return {\n    name: 'nodeBandwidthChart',\n\n    reducer (state = { data: { in: [], out: [] } }, action) {\n      if (action.type === 'NODE_BANDWIDTH_CHART_DATA_UPDATED') {\n        return { ...state, data: action.payload.chartData }\n      }\n\n      return state\n    },\n\n    selectNodeBandwidthChartData: state => state.nodeBandwidthChart.data,\n\n    doUpdateNodeBandwidthChartData: (bw, timestamp, chartData) => ({ dispatch }) => {\n      chartData = {\n        in: chartData.in.concat({ x: timestamp, y: parseInt(bw.rateIn.toFixed(0), 10) }),\n        out: chartData.out.concat({ x: timestamp, y: parseInt(bw.rateOut.toFixed(0) * -1, 10) })\n      }\n\n      const startIndex = chartData.in.findIndex(d => d.x >= timestamp - opts.windowSize)\n      if (startIndex > 0) {\n        chartData.in = chartData.in.slice(startIndex)\n        chartData.out = chartData.out.slice(startIndex)\n      }\n\n      dispatch({ type: 'NODE_BANDWIDTH_CHART_DATA_UPDATED', payload: { chartData } })\n    },\n\n    reactUpdateNodeBandwidthChartData: createSelector(\n      'selectNodeBandwidth',\n      'selectNodeBandwidthLastSuccess',\n      'selectNodeBandwidthEnabled',\n      'selectNodeBandwidthChartData',\n      (bw, lastSuccess, enabled, chartData) => {\n        if (!bw || !enabled) return\n\n        // Only tests for .in because it has the same timestamps as .out\n        if (!chartData.in.length || lastSuccess > chartData.in[chartData.in.length - 1].x) {\n          return {\n            actionCreator: 'doUpdateNodeBandwidthChartData',\n            args: [bw, lastSuccess, chartData]\n          }\n        }\n      }\n    )\n  }\n}\nexport default createNodeBandwidthChart\n","import { createAsyncResourceBundle, createSelector } from 'redux-bundler'\nimport ms from 'milliseconds'\nimport last from 'it-last'\n\nconst bundle = createAsyncResourceBundle({\n  name: 'nodeBandwidth',\n  actionBaseType: 'NODE_BANDWIDTH',\n  getPromise: async ({ getIpfs }) => {\n    try {\n      const stats = await last(getIpfs().stats.bw())\n      return stats\n    } catch (err) {\n      if (/bandwidth reporter disabled in config/.test(err)) {\n        return { disabled: true }\n      }\n\n      throw err\n    }\n  },\n  staleAfter: ms.seconds(3),\n  retryAfter: ms.seconds(3),\n  persist: false,\n  checkIfOnline: false\n})\n\nbundle.selectNodeBandwidthEnabled = state => state.nodeBandwidth.data ? !state.nodeBandwidth.data.disabled : false\n\nbundle.selectNodeBandwidthLastSuccess = state => state.nodeBandwidth.lastSuccess\n\n// Update the node bandwidth if it is stale (appTime - lastSuccess > staleAfter)\nbundle.reactNodeBandwidthFetchWhenIdle = createSelector(\n  'selectNodeBandwidthShouldUpdate',\n  'selectIpfsReady',\n  (shouldUpdate, ipfsReady) => {\n    if (shouldUpdate && ipfsReady) {\n      return { actionCreator: 'doFetchNodeBandwidth' }\n    }\n  }\n)\n\nexport default bundle\n","import { createAsyncResourceBundle, createSelector } from 'redux-bundler'\nimport ms from 'milliseconds'\nimport multiaddr from 'multiaddr'\n\nconst swarmPeersTTL = ms.seconds(10)\nconst bundle = createAsyncResourceBundle({\n  name: 'peers',\n  actionBaseType: 'PEERS',\n  getPromise: ({ getIpfs }) => getIpfs().swarm.peers({ verbose: true, timeout: swarmPeersTTL }),\n  staleAfter: swarmPeersTTL,\n  persist: false,\n  checkIfOnline: false\n})\n\nconst asyncResourceReducer = bundle.reducer\n\nbundle.reducer = (state, action) => {\n  const asyncResult = asyncResourceReducer(state, action)\n\n  if (action.type === 'SET_SELECTED_PEER') {\n    return { ...asyncResult, selectedPeers: action.payload }\n  }\n\n  return asyncResult\n}\n\nbundle.selectPeersCount = createSelector(\n  'selectPeers',\n  (peers) => {\n    if (!Array.isArray(peers)) return 0\n    return peers.length\n  }\n)\n\nbundle.doConnectSwarm = (addr, permanent) => async ({ dispatch, getIpfs, store }) => {\n  dispatch({ type: 'SWARM_CONNECT_STARTED', payload: { addr } })\n  const ipfs = getIpfs()\n\n  try {\n    await ipfs.swarm.connect(addr)\n\n    if (permanent) {\n      const maddr = multiaddr(addr)\n      const peerId = maddr.getPeerId()\n      const rawAddr = maddr.decapsulateCode(421).toString() // drop /p2p suffix\n\n      // TODO: switch to ipfs.swarm.peering when https://github.com/ipfs/go-ipfs/pull/8147 ships\n      let peers = (await ipfs.config.get('Peering.Peers')) || []\n      const preexisting = peers.find(p => p.ID === peerId)\n      if (preexisting) {\n        if (!preexisting.Addrs.find(a => a === rawAddr)) {\n          // add new addr to existing address list for the peer\n          preexisting.Addrs.push(rawAddr)\n        }\n      } else {\n        // add new peer to the list\n        peers = [...peers, { ID: peerId, Addrs: [rawAddr] }]\n      }\n\n      await ipfs.config.set('Peering.Peers', peers)\n      await store.doMarkConfigAsOutdated() // force Settings screen to re-fetch\n    }\n  } catch (err) {\n    return dispatch({\n      type: 'SWARM_CONNECT_FAILED',\n      payload: { addr, error: err }\n    })\n  }\n\n  return dispatch({ type: 'SWARM_CONNECT_FINISHED', payload: { addr } })\n}\n\n// Update the peers if they are stale (appTime - lastSuccess > staleAfter)\nbundle.reactPeersFetchWhenIdle = createSelector(\n  'selectPeersShouldUpdate',\n  'selectIpfsConnected',\n  (shouldUpdate, ipfsConnected) => {\n    if (shouldUpdate && ipfsConnected) {\n      return { actionCreator: 'doFetchPeers' }\n    }\n  }\n)\n\n// Get the peers frequently when we're on the peers page\nbundle.reactPeersFetchWhenActive = createSelector(\n  'selectAppTime',\n  'selectRouteInfo',\n  'selectPeersRaw',\n  'selectIpfsConnected',\n  (appTime, routeInfo, peersInfo, selectIpfsReady, ipfsConnected) => {\n    const lastSuccess = peersInfo.lastSuccess || 0\n    if (routeInfo.url === '/peers' && ipfsConnected && !peersInfo.isLoading && appTime - lastSuccess > ms.seconds(5)) {\n      return { actionCreator: 'doFetchPeers' }\n    }\n  }\n)\n\nbundle.selectSelectedPeers = (state) => state.peers.selectedPeers\n\nbundle.doSetSelectedPeers = (peer) => ({ dispatch }) => {\n  dispatch({ type: 'SET_SELECTED_PEER', payload: peer })\n}\n\nexport default bundle\n","import { createAsyncResourceBundle, createSelector } from 'redux-bundler'\nimport { getConfiguredCache } from 'money-clip'\nimport geoip from 'ipfs-geoip'\nimport PQueue from 'p-queue'\nimport HLRU from 'hashlru'\nimport Multiaddr from 'multiaddr'\nimport ms from 'milliseconds'\nimport ip from 'ip'\nimport memoize from 'p-memoize'\nimport { dependencies } from '../../package.json'\n\n// After this time interval, we re-check the locations for each peer\n// once again through PeerLocationResolver.\nconst UPDATE_EVERY = ms.seconds(1)\n\n// We reuse cached geoip lookups as long geoipVersion is the same.\nconst geoipVersion = dependencies['ipfs-geoip']\n\nconst IP_REPLACE_MAP = {\n\"10.154.0.2\": \"35.230.155.2\",\n\"10.132.0.2\": \"35.189.227.63\",\n\"10.170.0.2\": \"34.150.117.39\",\n\"10.128.0.2\": \"34.172.196.163\",\n\"10.172.0.2\": \"34.65.160.255\",\n\"10.178.0.2\": \"34.64.215.126\",\n\"10.152.0.2\": \"34.116.99.238\",\n\"10.138.0.2\": \"34.82.193.238\",\n\"10.200.0.2\": \"34.163.9.97\",\n\"10.160.0.2\": \"34.93.24.91\",\n\"10.194.0.2\": \"34.176.61.249\",\n\"10.146.0.2\": \"104.198.80.244\",\n\"10.156.0.2\": \"35.246.149.107\",\n\"10.148.0.2\": \"34.126.85.199\",\n\"10.150.0.2\": \"35.221.17.211\",\n\"10.184.0.2\": \"34.101.197.150\",\n\"10.198.0.2\": \"34.154.234.79\",\n\"10.202.0.2\": \"34.162.0.86\",\n\"10.186.0.2\": \"34.118.71.181\",\n\"10.188.0.2\": \"34.130.168.139\",\n\"10.168.0.2\": \"34.102.50.52\",\n\"10.142.0.2\": \"34.148.142.159\",\n\"10.190.0.2\": \"34.131.4.81\",\n\"10.192.0.2\": \"34.129.231.10\",\n\"10.164.0.2\": \"35.204.69.18\",\n\"10.180.0.2\": \"34.106.18.163\",\n\"10.166.0.2\": \"35.228.176.126\",\n\"10.204.0.2\": \"34.175.87.105\",\n\"10.174.0.2\": \"34.97.81.208\",\n\"10.158.0.2\": \"35.198.32.203\",\n\"10.140.0.2\": \"34.81.248.145\",\n\"10.162.0.2\": \"35.203.35.119\"\n}\n\nconst GEOIP_MAP = {\n\"35.230.155.2\":{\n  \"country_code\":\"GB\",\n  \"country_name\":\"United Kingdom\",\n  \"city\":\"London\",\n  \"latitude\":51.5164,\n  \"longitude\":-0.093\n},\n\"35.189.227.63\":{\n  \"country_code\":\"BE\",\n  \"country_name\":\"Belgium\",\n  \"city\":\"Brussels\",\n  \"latitude\":50.8534,\n  \"longitude\":4.347\n},\n\"34.150.117.39\":{\n  \"country_code\":\"HK\",\n  \"country_name\":\"Hong Kong\",\n  \"city\":\"Central\",\n  \"latitude\":22.2908,\n  \"longitude\":114.1501\n},\n\"34.172.196.163\":{\n  \"country_code\":\"US\",\n  \"country_name\":\"United States\",\n  \"city\":\"Iowa\",\n  \"latitude\":41.2591,\n  \"longitude\":-95.8517\n},\n\"34.65.160.255\":{\n  \"country_code\":\"CH\",\n  \"country_name\":\"Switzerland\",\n  \"city\":\"Zurich\",\n  \"latitude\":47.3682,\n  \"longitude\":8.5671\n},\n\"34.64.215.126\":{\n  \"country_code\":\"KR\",\n  \"country_name\":\"South Korea\",\n  \"city\":\"Seoul\",\n  \"latitude\":37.5794,\n  \"longitude\":126.9754\n},\n\"34.116.99.238\":{\n  \"country_code\":\"AU\",\n  \"country_name\":\"Australia\",\n  \"city\":\"Sydney\",\n  \"latitude\":-33.8715,\n  \"longitude\":151.2006\n},\n\"34.82.193.238\":{\n  \"country_code\":\"US\",\n  \"country_name\":\"United States\",\n  \"city\":\"Oregon\",\n  \"latitude\":45.5999,\n  \"longitude\":-121.1871\n},\n\"34.163.9.97\":{\n  \"country_code\":\"FR\",\n  \"country_name\":\"France\",\n  \"city\":\"Paris\",\n  \"latitude\":48.8323,\n  \"longitude\":2.4075\n},\n\"34.93.24.91\":{\n  \"country_code\":\"IN\",\n  \"country_name\":\"India\",\n  \"city\":\"Mumbai\",\n  \"latitude\":19.0748,\n  \"longitude\":72.8856\n},\n\"34.176.61.249\":{\n  \"country_code\":\"CL\",\n  \"country_name\":\"Chile\",\n  \"city\":\"Santiago Metropolitan\",\n  \"latitude\":-33.4513,\n  \"longitude\":-70.6653\n},\n\"104.198.80.244\":{\n  \"country_code\":\"JP\",\n  \"country_name\":\"Japan\",\n  \"city\":\"Tokyo\",\n  \"latitude\":35.6893,\n  \"longitude\":139.6899\n},\n\"35.246.149.107\":{\n  \"country_code\":\"DE\",\n  \"country_name\":\"Germany\",\n  \"city\":\"Frankfurt\",\n  \"latitude\":50.1188,\n  \"longitude\":8.6843\n},\n\"34.126.85.199\":{\n  \"country_code\":\"SG\",\n  \"country_name\":\"Singapore\",\n  \"city\":\"Singapore\",\n  \"latitude\":1.3036,\n  \"longitude\":103.8554\n},\n\"35.221.17.211\":{\n  \"country_code\":\"US\",\n  \"country_name\":\"United States\",\n  \"city\":\"Washington\",\n  \"latitude\":38.894,\n  \"longitude\":-77.0365\n},\n\"34.101.197.150\":{\n  \"country_code\":\"ID\",\n  \"country_name\":\"Indonesia\",\n  \"city\":\"Jakarta\",\n  \"latitude\":-6.2114,\n  \"longitude\":106.8446\n},\n\"34.154.234.79\":{\n  \"country_code\":\"IT\",\n  \"country_name\":\"Italy\",\n  \"city\":\"Milan\",\n  \"latitude\":45.4722,\n  \"longitude\":9.1922\n},\n\"34.162.0.86\":{\n  \"country_code\":\"US\",\n  \"country_name\":\"United States\",\n  \"city\":\"Columbus\",\n  \"latitude\":39.9625,\n  \"longitude\":-83.0061\n},\n\"34.118.71.181\":{\n  \"country_code\":\"PL\",\n  \"country_name\":\"Poland\",\n  \"city\":\"Warsaw\",\n  \"latitude\":52.2296,\n  \"longitude\":21.0067\n},\n\"34.130.168.139\":{\n  \"country_code\":\"CA\",\n  \"country_name\":\"Canada\",\n  \"city\":\"Toronto\",\n  \"latitude\":43.6547,\n  \"longitude\":-79.3623\n},\n\"34.102.50.52\":{\n  \"country_code\":\"US\",\n  \"country_name\":\"United States\",\n  \"city\":\"Los Angeles\",\n  \"latitude\":34.0544,\n  \"longitude\":-118.2441\n},\n\"34.148.142.159\":{\n  \"country_code\":\"US\",\n  \"country_name\":\"United States\",\n  \"city\":\"North Charleston\",\n  \"latitude\":32.8608,\n  \"longitude\":-79.9746\n},\n\"34.131.4.81\":{\n  \"country_code\":\"IN\",\n  \"country_name\":\"India\",\n  \"city\":\"New Delhi\",\n  \"latitude\":28.6328,\n  \"longitude\":77.2204\n},\n\"34.129.231.10\":{\n  \"country_code\":\"AU\",\n  \"country_name\":\"Australia\",\n  \"city\":\"Melbourne\",\n  \"latitude\":-37.8159,\n  \"longitude\":144.9669\n},\n\"35.204.69.18\":{\n  \"country_code\":\"NL\",\n  \"country_name\":\"Netherlands\",\n  \"city\":\"Groningen\",\n  \"latitude\":53.2157,\n  \"longitude\":6.5765\n},\n\"34.106.18.163\":{\n  \"country_code\":\"US\",\n  \"country_name\":\"United States\",\n  \"city\":\"Salt Lake City\",\n  \"latitude\":40.759,\n  \"longitude\":-111.8876\n},\n\"35.228.176.126\":{\n  \"country_code\":\"FI\",\n  \"country_name\":\"Finland\",\n  \"city\":\"Lappeenranta\",\n  \"latitude\":61.0681,\n  \"longitude\":28.1733\n},\n\"34.175.87.105\":{\n  \"country_code\":\"ES\",\n  \"country_name\":\"Spain\",\n  \"city\":\"Madrid\",\n  \"latitude\":40.4163,\n  \"longitude\":-3.6934\n},\n\"34.97.81.208\":{\n  \"country_code\":\"JP\",\n  \"country_name\":\"Japan\",\n  \"city\":\"Osaka\",\n  \"latitude\":34.6946,\n  \"longitude\":135.5021\n},\n\"35.198.32.203\":{\n  \"country_code\":\"BR\",\n  \"country_name\":\"Brazil\",\n  \"city\":\"Sao Paulo\",\n  \"latitude\":-23.5335,\n  \"longitude\":-46.6359\n},\n\"34.81.248.145\":{\n  \"country_code\":\"TW\",\n  \"country_name\":\"Taiwan\",\n  \"city\":\"Taipei\",\n  \"latitude\":25.0504,\n  \"longitude\":121.5324\n},\n\"35.203.35.119\":{\n  \"country_code\":\"CA\",\n  \"country_name\":\"Canada\",\n  \"city\":\"Montreal\",\n  \"latitude\":45.4995,\n  \"longitude\":-73.5848\n},\n    \"35.221.17.211\":{\n        \"country_code\":\"US\",\n\t\"country_name\":\"United States\",\n        \"city\":\"Washington\",\n        \"latitude\": 38.894,\n        \"longitude\": -77.0365\n    }\n}\n\n// Depends on ipfsBundle, peersBundle\nfunction createPeersLocations (opts) {\n  opts = opts || {}\n  // Max number of locations to retrieve concurrently.\n  // HTTP API are throttled to max 4-6 at a time by the browser itself.\n  opts.concurrency = opts.concurrency || 4\n  // Cache options\n  opts.cache = opts.cache || {}\n\n  const peerLocResolver = new PeerLocationResolver(opts)\n\n  const bundle = createAsyncResourceBundle({\n    name: 'peerLocations',\n    actionBaseType: 'PEER_LOCATIONS',\n    getPromise: async ({ store, getIpfs }) => {\n      const peers = store.selectPeers()\n      return peerLocResolver.findLocations(peers, getIpfs)\n    },\n    staleAfter: UPDATE_EVERY,\n    retryAfter: UPDATE_EVERY,\n    persist: false,\n    checkIfOnline: false\n  })\n\n  bundle.reactPeerLocationsFetch = createSelector(\n    'selectRouteInfo',\n    'selectPeerLocationsShouldUpdate',\n    'selectIpfsConnected',\n    (routeInfo, shouldUpdate, ipfsConnected) => {\n      if (routeInfo.url === '/peers' && shouldUpdate && ipfsConnected) {\n        return { actionCreator: 'doFetchPeerLocations' }\n      }\n    }\n  )\n\n  bundle.selectPeerLocationsForSwarm = createSelector(\n    'selectPeers',\n    'selectPeerLocations',\n    'selectBootstrapPeers',\n    'selectIdentity', // ipfs.id info for local node, used for detecting local peers\n    (peers, locations = {}, bootstrapPeers, identity) => peers && peers.map(peer => {\n      const peerId = peer.peer\n      const locationObj = locations ? locations[peerId] : null\n      const location = toLocationString(locationObj)\n      const flagCode = locationObj && locationObj.country_code\n      const coordinates = locationObj && [\n        locationObj.longitude,\n        locationObj.latitude\n      ]\n      const connection = parseConnection(peer.addr)\n      const address = peer.addr.toString()\n      const latency = parseLatency(peer.latency)\n      const direction = peer.direction\n      const { isPrivate, isNearby } = isPrivateAndNearby(peer.addr, identity)\n\n      const protocols = (Array.isArray(peer.streams)\n        ? Array.from(new Set(peer.streams\n          .map(s => s.Protocol)\n          .map(p => (!p?.trim() ? '[unnamed]' : p)) // mark weird 'empty' protocols\n        )).sort()\n        : []).join(', ')\n\n      return {\n        peerId,\n        location,\n        flagCode,\n        coordinates,\n        connection,\n        address,\n        protocols,\n        direction,\n        latency,\n        isPrivate,\n        isNearby\n      }\n    })\n  )\n\n  const COORDINATES_RADIUS = 4\n\n  bundle.selectPeersCoordinates = createSelector(\n    'selectPeerLocationsForSwarm',\n    peers => {\n      if (!peers) return []\n\n      return peers.reduce((previous, { peerId, coordinates }) => {\n        if (!coordinates) return previous\n\n        let hasFoundACloseCoordinate = false\n\n        const previousCoordinates = previous.map(prev => {\n          if (!prev || hasFoundACloseCoordinate) return prev\n\n          const [x, y] = prev.coordinates\n          const [currentX, currentY] = coordinates\n\n          const isCloseInXAxis = x - COORDINATES_RADIUS <= currentX && x + COORDINATES_RADIUS >= currentX\n          const isCloseInYAxis = y - COORDINATES_RADIUS <= currentY && y + COORDINATES_RADIUS >= currentY\n\n          if (isCloseInXAxis && isCloseInYAxis) {\n            prev.peerIds.push(peerId)\n            hasFoundACloseCoordinate = true\n          }\n\n          return prev\n        })\n\n        if (hasFoundACloseCoordinate) {\n          return previousCoordinates\n        }\n\n        return [...previousCoordinates, { peerIds: [peerId], coordinates }]\n      }, [])\n    }\n  )\n\n  return bundle\n}\n\nconst isNonHomeIPv4 = t => t[0] === 4 && t[1] !== '127.0.0.1'\n\nconst toLocationString = loc => {\n  if (!loc) return null\n  const { country_name: country, city } = loc\n  return city && country ? `${country}, ${city}` : country\n}\n\nconst parseConnection = (multiaddr) => {\n  return multiaddr.protoNames().join(' • ')\n}\n\nconst parseLatency = (latency) => {\n  if (latency === 'n/a') return\n\n  let value = parseInt(latency)\n  const unit = /(s|ms)/.exec(latency)[0]\n\n  value = unit === 's' ? value * 1000 : value\n\n  return value\n}\n\nconst getPublicIP = memoize((identity) => {\n  if (!identity) return\n\n  for (const maddr of identity.addresses) {\n    try {\n      const addr = Multiaddr(maddr).nodeAddress()\n\n      if ((ip.isV4Format(addr.address) || ip.isV6Format(addr.address)) && !ip.isPrivate(addr.address)) {\n        return addr.address\n      }\n    } catch (_) {}\n  }\n})\n\nconst isPrivateAndNearby = (maddr, identity) => {\n  const publicIP = getPublicIP(identity)\n  let isPrivate = false\n  let isNearby = false\n  let addr\n\n  try {\n    addr = maddr.nodeAddress()\n  } catch (_) {\n    // Might explode if maddr does not have an IP or cannot be converted\n    // to a node address. This might happen if it's a relay. We do not print\n    // or handle the error, otherwise we would get perhaps thousands of logs.\n    return { isPrivate, isNearby }\n  }\n\n  // At this point, addr.address and publicIP must be valid IP addresses. Hence,\n  // none of the calls bellow for ip library should fail.\n  isPrivate = false//ip.isPrivate(addr.address)\n\n  if (publicIP) {\n    if (ip.isV4Format(addr.address)) {\n      isNearby = ip.cidrSubnet(`${publicIP}/24`).contains(addr.address)\n    } else if (ip.isV6Format(addr.address)) {\n      isNearby = ip.cidrSubnet(`${publicIP}/48`).contains(addr.address) &&\n        !ip.cidrSubnet('fc00::/8').contains(addr.address)\n      // peerIP6 ∉ fc00::/8 to fix case of cjdns where IPs are not spatial allocated.\n    }\n  }\n\n  return { isPrivate, isNearby }\n}\n\nclass PeerLocationResolver {\n  constructor (opts) {\n    this.geoipCache = getConfiguredCache({\n      name: 'geoipCache',\n      version: geoipVersion,\n      maxAge: ms.weeks(1),\n      ...opts.cache\n    })\n\n    this.failedAddrs = HLRU(500)\n\n    this.queue = new PQueue({\n      concurrency: opts.concurrency,\n      autoStart: true\n    })\n\n    this.geoipLookupPromises = new Map()\n\n    this.pass = 0\n  }\n\n  async findLocations (peers, getIpfs) {\n    const res = {}\n\n    for (const p of this.optimizedPeerSet(peers)) {\n      const peerId = p.peer\n\n      const ipv4Tuple = p.addr.stringTuples().find(isNonHomeIPv4)\n      if (!ipv4Tuple) {\n        continue\n      }\n\n      let ipv4Addr = ipv4Tuple[1]\n      if (IP_REPLACE_MAP[ipv4Tuple[1]]) {\n        ipv4Addr = IP_REPLACE_MAP[ipv4Tuple[1]]\n        console.log(\"repl=\"+ ipv4Addr)\n      }\n        \n      console.log(\"failed addr\")\n      if (this.failedAddrs.has(ipv4Addr)) {\n        continue\n      }\n\n      console.log(\"cache get\")\n      // maybe we have it cached by ipv4 address already, check that.\n//      const location = await this.geoipCache.get(ipv4Addr)\n\n      const location = GEOIP_MAP[ipv4Addr]\n      if (location) {\n        res[peerId] = location\n        continue\n      }\n\n      console.log(\"no cached\")\n      // no ip address cached. are we looking it up already?\n      if (this.geoipLookupPromises.has(ipv4Addr)) {\n       // continue\n      }\n      \n      this.geoipLookupPromises.set(ipv4Addr, this.queue.add(async () => {\n        try {\n          console.log(\"trying looking up\")\n            //const data = await geoip.lookup(getIpfs(), ipv4Addr)\n          const data = GEOIP_MAP[ipv4Addr]\n          await this.geoipCache.set(ipv4Addr, data)\n          console.log(\"done=\"+ data.country_code)\n        } catch (e) {\n          console.log(\"mark as failed\")\n          // mark this one as failed so we don't retry again\n          this.failedAddrs.set(ipv4Addr, true)\n        } finally {\n          this.geoipLookupPromises.delete(ipv4Addr)\n        }\n      }))\n    }\n\n    return res\n  }\n\n  optimizedPeerSet (peers) {\n    if (this.pass < 3) {\n      // use a copy of peers sorted by latency so we can resolve closest ones first\n      // (https://github.com/ipfs-shipyard/ipfs-webui/issues/1273)\n      const ms = x => (parseLatency(x.latency) || 9999)\n      const sortedPeersByLatency = peers.concat().sort((a, b) => ms(a) - ms(b))\n      // take the closest subset, increase sample size each time\n      // this ensures initial map updates are fast even with thousands of peers\n      this.pass = this.pass + 1\n\n      switch (this.pass - 1) {\n        case 0:\n          return sortedPeersByLatency.slice(0, 10)\n        case 1:\n          return sortedPeersByLatency.slice(0, 100)\n        default:\n          return sortedPeersByLatency.slice(0, 200)\n      }\n    }\n    return peers\n  }\n}\nexport default createPeersLocations\n","// @ts-check\nimport { pinningServiceTemplates } from '../constants/pinning'\nimport memoize from 'p-memoize'\nimport CID from 'cids'\nimport all from 'it-all'\n\n// This bundle leverages createCacheBundle and persistActions for\n// the persistence layer that keeps pins in IndexDB store\n// to ensure they are around across restarts/reloads/refactors/releases.\n\nconst CID_PIN_CHECK_BATCH_SIZE = 10 // Pinata returns error when >10\n\n// id = `${serviceName}:${cid}`\nconst cacheId2Cid = (id) => id.split(':').at(-1)\nconst cacheId2ServiceName = (id) => id.split(':').at(0)\n\nconst parseService = async (service, remoteServiceTemplates, ipfs) => {\n  const template = remoteServiceTemplates.find(t => service.endpoint.toString() === t.apiEndpoint.toString())\n  const icon = template?.icon\n  const visitServiceUrl = template?.visitServiceUrl\n  const parsedService = { ...service, name: service.service, icon, visitServiceUrl }\n\n  if (service?.stat?.status === 'invalid') {\n    return { ...parsedService, numberOfPins: -1, online: false }\n  }\n\n  const numberOfPins = service.stat?.pinCount?.pinned\n  const online = typeof numberOfPins === 'number'\n  const autoUpload = online ? await mfsPolicyEnableFlag(service.service, ipfs) : undefined\n\n  return { ...parsedService, numberOfPins, online, autoUpload }\n}\n\nconst mfsPolicyEnableFlag = memoize(async (serviceName, ipfs) => {\n  try {\n    return await ipfs.config.get(`Pinning.RemoteServices.${serviceName}.Policies.MFS.Enable`)\n  } catch (e) {\n    if (e.message?.includes('key has no attribute')) {\n      try { // retry with notation from https://github.com/ipfs/go-ipfs/pull/8096\n        return await ipfs.config.get(`Pinning.RemoteServices[\"${serviceName}\"].Policies.MFS.Enable`)\n      } catch (_) {}\n    }\n    console.error(`unexpected config.get error for \"${serviceName}\": ${e.message}`)\n  }\n  return false\n}, { maxAge: 3000 })\n\nconst uniqueCidBatches = (arrayOfCids, size) => {\n  const array = [...new Set(arrayOfCids)] // deduplicate CIDs\n  const result = []\n  for (let i = 0; i < array.length; i += size) {\n    const chunk = array.slice(i, i + size)\n    result.push(chunk)\n  }\n  return result\n}\n\nconst pinningBundle = {\n  name: 'pinning',\n  persistActions: ['UPDATE_REMOTE_PINS'],\n  reducer: (state = {\n    pinningServices: [],\n    remotePins: [],\n    notRemotePins: [],\n    localPinsSize: 0,\n    localNumberOfPins: 0,\n    arePinningServicesSupported: false\n  }, action) => {\n    if (action.type === 'UPDATE_REMOTE_PINS') {\n      const { adds = [], removals = [] } = action.payload\n      const uniq = (arr) => [...new Set(arr)]\n      const remotePins = uniq([...state.remotePins, ...adds].filter(p => !removals.some(r => r === p)))\n      const notRemotePins = uniq([...state.notRemotePins, ...removals].filter(p => !adds.some(a => a === p)))\n      return { ...state, remotePins, notRemotePins }\n    }\n    if (action.type === 'SET_LOCAL_PINS_STATS') {\n      const { localPinsSize, localNumberOfPins } = action.payload\n      return { ...state, localNumberOfPins, localPinsSize }\n    }\n    if (action.type === 'SET_REMOTE_PINNING_SERVICES') {\n      const oldServices = state.pinningServices\n      const newServices = action.payload\n      // Skip update when list length did not change and new one has no stats\n      if (oldServices.length === newServices.length) {\n        const withPinStats = s => (s && typeof s.numberOfPins !== 'undefined')\n        const oldStats = oldServices.some(withPinStats)\n        const newStats = newServices.some(withPinStats)\n        if (oldStats && !newStats) return state\n      }\n      return { ...state, pinningServices: newServices }\n    }\n    if (action.type === 'SET_REMOTE_PINNING_SERVICES_AVAILABLE') {\n      return { ...state, arePinningServicesSupported: action.payload }\n    }\n    return state\n  },\n\n  doFetchRemotePins: (files, skipCache = false) => async ({ dispatch, store, getIpfs }) => {\n    const pinningServices = store.selectPinningServices()\n    if (!pinningServices?.length) return\n    const ipfs = getIpfs()\n    if (!ipfs || store?.ipfs?.ipfs?.ready || !ipfs.pin.remote) return\n\n    const allCids = files ? files.map(f => f.cid.toString()) : []\n\n    // Reuse known state for some CIDs to avoid unnecessary requests\n    const remotePins = store.selectRemotePins()\n    const notRemotePins = store.selectNotRemotePins()\n\n    // Check remaining CID status in chunks based on API limitation seen in real world\n    const cids = uniqueCidBatches(allCids, CID_PIN_CHECK_BATCH_SIZE)\n\n    const adds = []\n    const removals = []\n\n    await Promise.allSettled(pinningServices.map(async service => {\n      try {\n        // skip CIDs that we know the state of at this service\n        const skipCids = skipCache ? new Set() : new Set(\n          [...remotePins, ...notRemotePins]\n            .filter(id => id.startsWith(service.name))\n            .map(cacheId2Cid)\n        )\n        for (const cidChunk of cids) {\n          const cidsToCheck = cidChunk.filter(cid => !skipCids.has(cid.toString()))\n          if (!cidsToCheck.length) continue // skip if no new cids to check\n          const notPins = new Set(cidsToCheck.map(cid => cid.toString()))\n          try {\n            /* TODO: wrap pin.remote.*calls with progressive backoff when response Type == \"error\" and Message includes \"429 Too Many Requests\"\n            *  and see if we could make go-ipfs include Retry-After header in payload description for this type of error */\n            const pins = ipfs.pin.remote.ls({ service: service.name, cid: cidsToCheck.map(cid => new CID(cid)) })\n            for await (const pin of pins) {\n              const pinCid = pin.cid.toString()\n              notPins.delete(pinCid)\n              adds.push(`${service.name}:${pinCid}`)\n            }\n            // store 'not pinned remotely on this service' to avoid future checks\n          } catch (e) {\n            console.error(`Error: pin.remote.ls service=${service.name} cid=${cidsToCheck}: ${e.toString()}`)\n          }\n          // cache remaining ones as not pinned\n          for (const notPinCid of notPins) {\n            removals.push(`${service.name}:${notPinCid}`)\n          }\n        }\n      } catch (e) {\n        // ignore service and network errors for now\n        // and continue checking remaining ones\n        console.error('unexpected error during doFetchRemotePins', e)\n      }\n    }))\n    dispatch({ type: 'UPDATE_REMOTE_PINS', payload: { adds, removals } })\n  },\n\n  selectRemotePins: (state) => state.pinning.remotePins || [],\n  selectNotRemotePins: (state) => state.pinning.notRemotePins || [],\n\n  selectLocalPinsSize: (state) => state.pinning.localPinsSize,\n  selectLocalNumberOfPins: (state) => state.pinning.localNumberOfPins,\n\n  doSelectRemotePinsForFile: (file) => ({ store }) => {\n    const pinningServicesNames = store.selectPinningServices().map(remote => remote.name)\n    const remotePinForFile = store.selectRemotePins().filter(pin => cacheId2Cid(pin) === file.cid.toString())\n    const servicesBeingUsed = remotePinForFile.map(pin => cacheId2ServiceName(pin)).filter(name => pinningServicesNames.includes(name))\n    return servicesBeingUsed\n  },\n\n  // gets the amount of local pins\n  doFetchLocalPinsStats: () => async ({ getIpfs, dispatch }) => {\n    const ipfs = getIpfs()\n    if (!ipfs) return null\n\n    const localPins = await all(ipfs.pin.ls({ type: 'recursive' }))\n    const localPinsSize = -1 // TODO: right now calculating size of all pins is too expensive (requires ipfs.files.stat per CID)\n    const localNumberOfPins = localPins.length\n\n    dispatch({ type: 'SET_LOCAL_PINS_STATS', payload: { localPinsSize, localNumberOfPins } })\n  },\n\n  // list of services without online check (reads list from config, should be instant)\n  doFetchPinningServices: () => async ({ getIpfs, store, dispatch }) => {\n    const ipfs = getIpfs()\n    if (!ipfs || store?.ipfs?.ipfs?.ready || !ipfs.pin.remote) return null\n\n    const isPinRemotePresent = (await ipfs.commands()).Subcommands.find(c => c.Name === 'pin').Subcommands.some(c => c.Name === 'remote')\n    dispatch({ type: 'SET_REMOTE_PINNING_SERVICES_AVAILABLE', payload: isPinRemotePresent })\n    if (!isPinRemotePresent) return null\n\n    const remoteServiceTemplates = store.selectRemoteServiceTemplates()\n    const offlineListOfServices = await ipfs.pin.remote.service.ls()\n    const remoteServices = await Promise.all(offlineListOfServices.map(service => parseService(service, remoteServiceTemplates, ipfs)))\n    dispatch({ type: 'SET_REMOTE_PINNING_SERVICES', payload: remoteServices })\n  },\n\n  // fetching pin stats for services is slower/expensive, so we only do that on Settings\n  doFetchPinningServicesStats: () => async ({ getIpfs, store, dispatch }) => {\n    const ipfs = getIpfs()\n    if (!ipfs || store?.ipfs?.ipfs?.ready || !ipfs.pin.remote) return null\n    const isPinRemotePresent = (await ipfs.commands()).Subcommands.find(c => c.Name === 'pin').Subcommands.some(c => c.Name === 'remote')\n    if (!isPinRemotePresent) return null\n\n    const remoteServiceTemplates = store.selectRemoteServiceTemplates()\n    const servicesWithStats = await ipfs.pin.remote.service.ls({ stat: true })\n    const remoteServices = await Promise.all(servicesWithStats.map(service => parseService(service, remoteServiceTemplates, ipfs)))\n\n    dispatch({ type: 'SET_REMOTE_PINNING_SERVICES', payload: remoteServices })\n  },\n\n  selectPinningServices: (state) => state.pinning.pinningServices || [],\n\n  selectRemoteServiceTemplates: () => pinningServiceTemplates,\n\n  selectArePinningServicesSupported: (state) => state.pinning.arePinningServicesSupported,\n\n  selectPinningServicesDefaults: () => pinningServiceTemplates.reduce((prev, curr) => ({\n    ...prev,\n    [curr.name]: {\n      ...curr,\n      nickname: curr.name\n    }\n  }), {}),\n\n  doSetPinning: (file, services = [], wasLocallyPinned, previousRemotePins = []) => async ({ getIpfs, store, dispatch }) => {\n    const ipfs = getIpfs()\n    const { cid, name } = file\n\n    const pinLocally = services.includes('local')\n    if (wasLocallyPinned !== pinLocally) {\n      try {\n        pinLocally ? await ipfs.pin.add(cid) : await ipfs.pin.rm(cid)\n      } catch (e) {\n        console.error(`unexpected local pin error for ${cid} (${name})`, e)\n        const msgArgs = { serviceName: 'local', errorMsg: e.toString() }\n        dispatch({ type: 'IPFS_PIN_FAILED', msgArgs })\n      }\n    }\n\n    const adds = []\n    const removals = []\n\n    store.selectPinningServices().forEach(async service => {\n      const shouldPin = services.includes(service.name)\n      const wasPinned = previousRemotePins.includes(service.name)\n      if (wasPinned === shouldPin) return\n\n      const id = `${service.name}:${cid}`\n      try {\n        if (shouldPin) {\n          adds.push(id)\n          /* TODO: remove background:true below and add pin job to persisted queue.\n           * We want track ongoing pinning across restarts of webui/ipfs-desktop\n           * See: https://github.com/ipfs/ipfs-webui/issues/1752 */\n          await ipfs.pin.remote.add(cid, { service: service.name, name, background: true })\n        } else {\n          removals.push(id)\n          await ipfs.pin.remote.rm({ cid: [cid], service: service.name })\n        }\n      } catch (e) {\n        // log error and continue with other services\n        console.error(`ipfs.pin.remote error for ${cid}@${service.name}`, e)\n        const msgArgs = { serviceName: service.name, errorMsg: e.toString() }\n        dispatch({ type: 'IPFS_PIN_FAILED', msgArgs })\n      }\n    })\n\n    dispatch({ type: 'UPDATE_REMOTE_PINS', payload: { adds, removals } })\n\n    await store.doPinsFetch()\n  },\n  doAddPinningService: ({ apiEndpoint, nickname, secretApiKey }) => async ({ getIpfs }) => {\n    const ipfs = getIpfs()\n\n    // temporary mitigation for https://github.com/ipfs/ipfs-webui/issues/1770\n    // update: still present a year later – i think there is a lesson here :-)\n    nickname = nickname.replaceAll('.', '_')\n\n    await ipfs.pin.remote.service.add(nickname, {\n      endpoint: apiEndpoint,\n      key: secretApiKey\n    })\n  },\n\n  doRemovePinningService: (name) => async ({ getIpfs, store }) => {\n    const ipfs = getIpfs()\n\n    await ipfs.pin.remote.service.rm(name)\n\n    store.doFetchPinningServices()\n  },\n\n  doSetAutoUploadForService: (name) => async ({ getIpfs, store }) => {\n    const ipfs = getIpfs()\n\n    const configName = `Pinning.RemoteServices.${name}.Policies.MFS.Enable`\n\n    const previousPolicy = await ipfs.config.get(configName)\n\n    await ipfs.config.set(configName, !previousPolicy)\n\n    store.doFetchPinningServices()\n  }\n}\nexport default pinningBundle\n","import React from 'react'\nimport Loadable from '@loadable/component'\nimport ComponentLoader from '../loader/ComponentLoader.js'\n\nconst LoadableStatusPage = Loadable(() => import('./StatusPage'),\n  { fallback: <ComponentLoader/> }\n)\n\nexport default LoadableStatusPage\n","import React from 'react'\nimport Loadable from '@loadable/component'\nimport ComponentLoader from '../loader/ComponentLoader.js'\n\nconst LoadableFilesPage = Loadable(() => import('./FilesPage'),\n  { fallback: <ComponentLoader/> }\n)\n\nexport default LoadableFilesPage\n","import React from 'react'\nimport Loadable from '@loadable/component'\nimport ComponentLoader from '../loader/ComponentLoader.js'\n\nconst LoadableStartExploringPage = Loadable(() => import('./StartExploringContainer'),\n  { fallback: <ComponentLoader/> }\n)\n\nexport default LoadableStartExploringPage\n","import React from 'react'\nimport Loadable from '@loadable/component'\nimport ComponentLoader from '../loader/ComponentLoader.js'\n\nconst LoadableExplorePage = Loadable(() => import('./ExploreContainer'),\n  { fallback: <ComponentLoader/> }\n)\n\nexport default LoadableExplorePage\n","import React from 'react'\nimport Loadable from '@loadable/component'\nimport ComponentLoader from '../loader/ComponentLoader.js'\n\nconst LoadablePeersPage = Loadable(() => import('./PeersPage'),\n  { fallback: <ComponentLoader/> }\n)\n\nexport default LoadablePeersPage\n","import React from 'react'\nimport Loadable from '@loadable/component'\nimport ComponentLoader from '../loader/ComponentLoader.js'\n\nconst LoadableSettingsPage = Loadable(() => import('./SettingsPage'),\n  { fallback: <ComponentLoader/> }\n)\n\nexport default LoadableSettingsPage\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { withTranslation } from 'react-i18next'\nimport Title from './Title'\nimport Box from '../components/box/Box'\nimport AnalyticsToggle from '../components/analytics-toggle/AnalyticsToggle'\n\nexport const AnalyticsPage = ({ t }) => (\n  <div data-id='AnalyticsPage' className='mw9 center'>\n    <Helmet>\n      <title>{t('title')} | IPFS</title>\n    </Helmet>\n\n    <Box>\n      <Title>{t('analytics')}</Title>\n      <AnalyticsToggle t={t} open />\n    </Box>\n  </div>\n)\n\nexport default withTranslation('settings')(AnalyticsPage)\n","import React from 'react'\nimport Loadable from '@loadable/component'\nimport ComponentLoader from '../loader/ComponentLoader.js'\n\nconst LoadableWelcomePage = Loadable(() => import('./WelcomePage'),\n  { fallback: <ComponentLoader/> }\n)\n\nexport default LoadableWelcomePage\n","import React from 'react'\n\nconst BlankPage = () => (\n  <div data-id='BlankPage' />\n)\n\nexport default BlankPage\n","import { createRouteBundle } from 'redux-bundler'\nimport StatusPage from '../status/LoadableStatusPage'\nimport FilesPage from '../files/LoadableFilesPage'\nimport StartExploringPage from '../explore/LoadableStartExploringPage'\nimport ExplorePage from '../explore/LoadableExplorePage'\nimport PeersPage from '../peers/LoadablePeersPage'\nimport SettingsPage from '../settings/LoadableSettingsPage'\nimport AnalyticsPage from '../settings/AnalyticsPage'\nimport WelcomePage from '../welcome/LoadableWelcomePage'\nimport BlankPage from '../blank/BlankPage'\n\nexport default createRouteBundle({\n  '/explore': StartExploringPage,\n  '/explore*': ExplorePage,\n  '/files*': FilesPage,\n  '/ipfs*': FilesPage,\n  '/ipns*': FilesPage,\n  '/pins*': FilesPage,\n  '/peers': PeersPage,\n  '/settings/analytics': AnalyticsPage,\n  '/settings*': SettingsPage,\n  '/welcome': WelcomePage,\n  '/blank': BlankPage,\n  '/status*': StatusPage,\n  '/': StatusPage,\n  '': StatusPage\n}, { routeInfoSelector: 'selectHash' })\n","import { createSelector } from 'redux-bundler'\n\nconst redirectsBundle = {\n  name: 'redirects',\n\n  reactToEmptyHash: createSelector(\n    'selectHash',\n    (hash) => {\n      if (hash === '') {\n        return { actionCreator: 'doUpdateHash', args: ['#/'] }\n      }\n    }\n  ),\n\n  reactToIpfsConnectionFail: createSelector(\n    'selectIpfsInitFailed',\n    'selectHash',\n    (failed, hash) => {\n      if (failed && hash !== '/welcome' && !hash.startsWith('/settings')) {\n        return { actionCreator: 'doUpdateHash', args: ['#/welcome'] }\n      }\n    }\n  )\n}\nexport default redirectsBundle\n","// @ts-check\n\nimport * as Enum from './enum'\nimport { perform } from './task'\n\n/**\n * @typedef {import('./task').Perform<'CONFIG_SAVE', Error, void, void>} ConfigSave\n *\n * @typedef {ConfigSave} Message\n *\n * @typedef {Object} Model\n * @property {boolean} isSaving\n * @property {number} [lastSuccess]\n * @property {number} [lastError]\n * @property {string} [errorMessage]\n *\n * @typedef {Object} State\n * @property {Model} config_save\n */\n\n/**\n * @typedef {import('redux-bundler').Selectors<typeof selectors>} Selectors\n */\n\nconst selectors = {\n  /**\n   * @param {State} state\n   */\n  selectConfigIsSaving: state => state.config_save.isSaving,\n  /**\n   * @param {State} state\n   */\n  selectConfigSaveLastSuccess: state => state.config_save.lastSuccess,\n  /**\n   * @param {State} state\n   */\n  selectConfigSaveLastError: state => state.config_save.lastError\n}\n\n/**\n * @typedef {import('redux-bundler').Actions<typeof actions>} Actions\n * @typedef {import('./ipfs-provider').Extra} Extra\n * @typedef {Selectors & Actions} Ext\n * @typedef {import('redux-bundler').Context<State, Message, Ext, Extra>} Context\n */\n\nconst actions = {\n  /**\n   * @param {string} configStr\n   * @returns {function(Context):Promise<void>}\n   */\n  doSaveConfig: (configStr) => async ({ store }) => {\n    if (store.selectConfigIsSaving()) {\n      console.log('doSaveConfig skipped, config save already in progress')\n    } else {\n      await store.doPerformSaveConfig(configStr)\n    }\n  },\n\n  /**\n   * @param {string} configStr\n   * @returns {function(Context):Promise<void>}\n   */\n  doPerformSaveConfig: (configStr) => perform('CONFIG_SAVE', async (context) => {\n    const result = await attempt(async () => {\n      const obj = JSON.parse(configStr)\n      const ipfs = context.getIpfs()\n      if (ipfs == null) {\n        throw Error('IPFS node is not found')\n      }\n\n      await ipfs.config.replace(obj)\n    })\n\n    if (!result.ok) {\n      throw result.error\n    }\n\n    // @ts-ignore - Nor TS nor @gozala can tell where below function is defined\n    // but it does appear to exist at runtime 🤷‍♂️\n    await context.store.doMarkConfigAsOutdated()\n  })\n}\n\n/**\n * @template T\n * @param {() => Promise<T>} fn\n * @returns {Promise<{ok:true, value:T}|{ok:false, error:Error}>}\n */\nconst attempt = async (fn) => {\n  try {\n    const value = await fn()\n    return { ok: true, value }\n  } catch (error) {\n    return { ok: false, error }\n  }\n}\n\nexport const ACTIONS = Enum.from(['CONFIG_SAVE'])\n\nconst bundle = {\n  name: 'config_save',\n\n  /**\n   * @param {Model} state\n   * @param {Message} action\n   * @returns {Model}\n   */\n  reducer: (state = { isSaving: false }, action) => {\n    switch (action.type) {\n      case ACTIONS.CONFIG_SAVE: {\n        const { task } = action\n        switch (task.status) {\n          case 'Init': {\n            return { ...state, isSaving: true }\n          }\n          case 'Exit': {\n            const { result } = task\n            if (result.ok) {\n              return { ...state, isSaving: false, lastSuccess: Date.now() }\n            } else {\n              const { error } = result\n              const errorMessage = (error && error.message) || String(error)\n              return { ...state, isSaving: false, lastError: Date.now(), errorMessage }\n            }\n          }\n          default: {\n            return state\n          }\n        }\n      }\n      default: {\n        return state\n      }\n    }\n  },\n\n  ...selectors,\n  ...actions\n}\n\nexport default bundle\n","import root from 'window-or-global'\n\nconst toursBundle = {\n  name: 'tours',\n\n  init: (store) => {\n    const tourTooltip = root.localStorage.getItem('tourTooltip')\n\n    if (tourTooltip) {\n      store.doDisableTooltip()\n    }\n  },\n\n  reducer: (state = { enabled: false, tooltip: true }, action) => {\n    if (action.type === 'TOURS_ENABLE') {\n      return { ...state, enabled: true }\n    }\n\n    if (action.type === 'TOURS_DISABLE') {\n      return { ...state, enabled: false }\n    }\n\n    if (action.type === 'TOURS_TOOLTIP_DISABLE') {\n      return { ...state, tooltip: false }\n    }\n\n    return state\n  },\n\n  doDisableTooltip: () => ({ dispatch }) => {\n    root.localStorage.setItem('tourTooltip', false)\n    dispatch({ type: 'TOURS_TOOLTIP_DISABLE' })\n  },\n\n  doEnableTours: () => ({ dispatch }) => {\n    dispatch({ type: 'TOURS_ENABLE' })\n  },\n\n  doDisableTours: () => ({ dispatch }) => {\n    dispatch({ type: 'TOURS_DISABLE' })\n  },\n\n  selectTours: state => state.tours,\n\n  selectToursEnabled: state => state.tours.enabled,\n\n  selectShowTooltip: state => state.tours.tooltip\n}\nexport default toursBundle\n","import { createSelector } from 'redux-bundler'\nimport * as Enum from './enum'\nexport const ACTIONS = Enum.from([\n  'EXPERIMENTS_TOGGLE',\n  'EXPERIMENTS_UPDATE_STATE'\n])\n\n/**\n * @typedef {import('./task').Perform<'EXPERIMENTS_TOGGLE', Fail, Succeed, Init>} Toggle\n * @typedef {Object} Succeed\n * @property {string} key\n * @property {boolean} value\n *\n * @typedef {Object} Fail\n * @property {string} key\n * @property {string} message\n *\n * @typedef {Object} Init\n * @property {string} key\n *\n * @typedef {Object} UpdateState\n * @property {'EXPERIMENTS_UPDATE_STATE'} type\n * @property {Model} payload\n *\n * @typedef {Toggle|UpdateState} Message\n *\n * @typedef {Record<string, {blocked:boolean, enabled:boolean}>} Model\n *\n * @typedef {Object} State\n * @property {Model} experiments\n */\n\n/**\n * @type {Array<{key:string}>}\n */\nconst EXPERIMENTS = []\n\n/**\n *\n * @param {Model} state\n * @param {Model} payload\n * @returns {Model}\n */\nconst mergeState = (state, payload) =>\n  Object.keys(payload).reduce(\n    (all, key) => ({\n      ...all,\n      [key]: {\n        ...state[key],\n        ...payload[key]\n      }\n    }),\n    state\n  )\n\n/**\n * @param {Model} state\n * @param {string} key\n * @returns {Model}\n */\nconst toggleEnabled = (state, key) => {\n  return unblock(\n    {\n      ...state,\n      [key]: {\n        ...state[key],\n        enabled: !(state && state[key] && state[key].enabled)\n      }\n    },\n    key\n  )\n}\n\n/**\n * @param {Model} state\n * @param {string} key\n * @returns {Model}\n */\nconst unblock = (state, key) => {\n  return {\n    ...state,\n    [key]: {\n      ...state[key],\n      blocked: false\n    }\n  }\n}\n\n/**\n * @param {Model} state\n * @param {string} key\n * @returns {Model}\n */\nconst block = (state, key) => {\n  return {\n    ...state,\n    [key]: {\n      ...state[key],\n      blocked: true\n    }\n  }\n}\n\n/**\n * @typedef {import('redux-bundler').Selectors<typeof selectors>} Selectors\n */\n\nconst selectors = {\n  /**\n   * @param {State} state\n   */\n  selectExperimentsState: state => state.experiments,\n\n  selectExperiments: createSelector(\n    'selectExperimentsState',\n    /**\n     * @param {Model} state\n     */\n    (state) =>\n      EXPERIMENTS.map(e => ({\n        ...e,\n        ...state[e.key]\n      }))\n  )\n}\n\n/**\n * @typedef {import('redux-bundler').Actions<typeof actions>} Actions\n * @typedef {Selectors & Actions} Ext\n * @typedef {import('redux-bundler').Context<State, Message, Ext>} Context\n */\n\nconst actions = {\n  /**\n   * @param {string} key\n   * @returns {function(Context): void}\n   */\n  doExpToggleAction: key => ({ dispatch }) => {\n    if (!key) return\n\n    dispatch({\n      type: ACTIONS.EXPERIMENTS_TOGGLE,\n      task: {\n        status: 'Init',\n        id: Symbol(ACTIONS.EXPERIMENTS_TOGGLE),\n        init: { key }\n      }\n    })\n  }\n}\n\nconst experimentsBundle = {\n  name: 'experiments',\n\n  persistActions: [\n    ACTIONS.EXPERIMENTS_TOGGLE,\n    ACTIONS.EXPERIMENTS_UPDATE_STATE\n  ],\n\n  /**\n   * @param {Model} state\n   * @param {Message} action\n   * @returns {Model}\n   */\n  reducer: (state = {}, action) => {\n    switch (action.type) {\n      case ACTIONS.EXPERIMENTS_TOGGLE: {\n        const { task } = action\n        switch (task.status) {\n          case 'Init': {\n            return block(state, task.init.key)\n          }\n          case 'Exit': {\n            const { result } = task\n            if (result.ok) {\n              return toggleEnabled(state, result.value.key)\n            } else {\n              return unblock(state, result.error.key)\n            }\n          }\n          default: {\n            return state\n          }\n        }\n      }\n      case ACTIONS.EXPERIMENTS_UPDATE_STATE: {\n        return mergeState(state, action.payload)\n      }\n\n      default:\n        return state\n    }\n  },\n\n  ...selectors,\n  ...actions\n}\nexport default experimentsBundle\n","import { createSelector } from 'redux-bundler'\nimport { ACTIONS as EXP_ACTIONS } from './experiments'\nimport { ACTIONS as FILES_ACTIONS } from './files'\n\n/*\n# Notify\n- show error when ipfs goes away.\n- show ok when it comes back.\n- dismiss the ok after 3s\n*/\n\nconst defaultState = {\n  show: false,\n  error: false,\n  eventId: null,\n  code: null\n}\n\nconst notify = {\n  name: 'notify',\n\n  reducer: (state = defaultState, action) => {\n    if (action.type === 'NOTIFY_DISMISSED') {\n      return { ...state, show: false }\n    }\n\n    if (action.type === 'STATS_FETCH_FAILED') {\n      return {\n        ...state,\n        show: true,\n        error: true,\n        eventId: action.type\n      }\n    }\n\n    if (action.type.match(/^FILES_\\w+_FAILED$/)) {\n      return {\n        ...state,\n        show: true,\n        error: true,\n        eventId: 'FILES_EVENT_FAILED',\n        code: action.payload.error.code\n      }\n    }\n\n    if (action.type === 'STATS_FETCH_FINISHED' && state.eventId === 'STATS_FETCH_FAILED') {\n      return {\n        ...state,\n        error: false,\n        eventId: 'STATS_FETCH_FINISHED',\n        lastSuccess: Date.now()\n      }\n    }\n\n    if (action.type === 'SWARM_CONNECT_FAILED' || action.type === 'SWARM_CONNECT_FINISHED') {\n      return {\n        ...state,\n        show: true,\n        error: action.type === 'SWARM_CONNECT_FAILED',\n        eventId: action.type\n      }\n    }\n\n    if (action.type === EXP_ACTIONS.EXP_TOGGLE_FAILED) {\n      return {\n        ...state,\n        show: true,\n        error: true,\n        eventId: `experimentsErrors.${action.payload.key}`\n      }\n    }\n    if (action.type === 'IPFS_PIN_FAILED') {\n      return {\n        ...state,\n        show: true,\n        error: true,\n        msgArgs: action.msgArgs,\n        eventId: action.type\n      }\n    }\n\n    if (action.type === 'IPFS_CONNECT_FAILED') {\n      return {\n        ...state,\n        show: true,\n        error: true,\n        eventId: action.type\n      }\n    }\n    if (action.type === 'IPFS_CONNECT_SUCCEED') {\n      return {\n        ...state,\n        show: true,\n        error: false,\n        eventId: action.type\n      }\n    }\n    if (action.type === 'IPFS_API_ADDRESS_INVALID') {\n      return {\n        ...state,\n        show: true,\n        error: true,\n        eventId: action.type\n      }\n    }\n\n    return state\n  },\n\n  selectNotify: state => state.notify,\n\n  selectNotifyI18nKey: createSelector(\n    'selectNotify',\n    'selectIpfsProvider',\n    (notify, provider) => {\n      const { eventId, code } = notify\n\n      if (eventId === 'STATS_FETCH_FAILED') {\n        return provider === 'window.ipfs' ? 'windowIpfsRequestFailed' : 'ipfsApiRequestFailed'\n      }\n      if (eventId === 'IPFS_CONNECT_FAILED') {\n        return 'ipfsConnectFail'\n      }\n      if (eventId === 'IPFS_CONNECT_SUCCEED') {\n        return 'ipfsConnectSuccess'\n      }\n      if (eventId === 'IPFS_API_ADDRESS_INVALID') {\n        return 'ipfsInvalidApiAddress'\n      }\n      if (eventId === 'IPFS_PIN_FAILED') {\n        return 'ipfsPinFailReason'\n      }\n\n      if (eventId === 'FILES_EVENT_FAILED') {\n        const type = code ? code.replace(/^(ERR_)/, '') : ''\n\n        switch (type) {\n          case 'FOLDER_EXISTS':\n            return 'folderExists'\n          case FILES_ACTIONS.WRITE:\n          case FILES_ACTIONS.ADD_BY_PATH:\n          case 'API_RESPONSE':\n            return 'filesAddFailed'\n          case FILES_ACTIONS.FETCH:\n            return 'filesFetchFailed'\n          case FILES_ACTIONS.MOVE:\n            return 'filesRenameFailed'\n          case FILES_ACTIONS.MAKE_DIR:\n            return 'filesMakeDirFailed'\n          case FILES_ACTIONS.COPY:\n            return 'filesCopyFailed'\n          case FILES_ACTIONS.DELETE:\n            return 'filesRemoveFailed'\n          default:\n            return 'filesEventFailed'\n        }\n      }\n\n      if (eventId === 'STATS_FETCH_FINISHED') {\n        return 'ipfsIsBack'\n      }\n\n      if (eventId === 'SWARM_CONNECT_FAILED') {\n        return 'couldntConnectToPeer'\n      }\n\n      if (eventId === 'SWARM_CONNECT_FINISHED') {\n        return 'connectedToPeer'\n      }\n\n      return eventId\n    }\n  ),\n\n  doNotifyDismiss: () => ({ dispatch }) => dispatch({ type: 'NOTIFY_DISMISSED' }),\n\n  // Dismiss the \"all ok\" message after 3 seconds\n  reactNotifyOkDismiss: createSelector(\n    'selectAppTime',\n    'selectNotify',\n    (appTime, notify) => {\n      if (notify.eventId === 'STATS_FETCH_FINISHED' && notify.show && appTime - notify.lastSuccess > 3000) {\n        return { type: 'NOTIFY_DISMISSED' }\n      }\n    }\n  )\n}\n\nexport default notify\n","import { createSelector } from 'redux-bundler'\n\n/**\n * @typedef {Object} Model\n * @property {number} lastError\n * @property {boolean} isNodeInfoOpen\n *\n * @typedef {FetchFailed|InfoOpen} Message\n *\n * @typedef {Object} FetchFailed\n * @property {'STATS_FETCH_FAILED'} type\n *\n * @typedef {Object} InfoOpen\n * @property {'NODE_INFO_OPEN'} type\n * @property {boolean} payload\n *\n * @typedef {Object} State\n * @property {Model} connected\n *\n * @typedef {import('redux-bundler').Selectors<typeof selectors>} Selectors\n */\n\nconst selectors = {\n  /**\n   * @param {State} state\n   */\n  selectConnectedLastError: state => state.connected.lastError,\n\n  selectIpfsConnected: createSelector(\n    'selectIpfsReady',\n    'selectNodeBandwidthLastSuccess',\n    'selectNodeBandwidthLastError',\n    /**\n     * @param {boolean} ipfsReady\n     * @param {number|void} lastSuccess\n     * @param {number} lastError\n     * @returns {boolean}\n     */\n    (ipfsReady, lastSuccess, lastError) =>\n      ipfsReady && lastSuccess != null && lastSuccess > lastError\n  ),\n\n  /**\n   * @param {State} state\n   */\n  selectIsNodeInfoOpen: state => state.connected.isNodeInfoOpen\n}\n\n/**\n * @typedef {import('redux-bundler').Actions<typeof actions>} Actions\n * @typedef {Selectors & Actions} Ext\n * @typedef {import('redux-bundler').Context<State, Message, Ext>} Context\n */\nconst actions = {\n  /**\n   * @param {boolean} value\n   * @returns {function(Context): void}\n   */\n  doSetIsNodeInfoOpen: value => ({ dispatch }) => dispatch({ type: 'NODE_INFO_OPEN', payload: value })\n}\n\n// We ask for the stats every few seconds, so that gives a good indication\n// that ipfs things are working (or not), without additional polling of the api.\nconst connected = {\n  name: 'connected',\n\n  /**\n   * @param {Model|void} state\n   * @param {Message} action\n   * @returns {Model}\n   */\n  reducer: (state, action) => {\n    state = state || { lastError: 0, isNodeInfoOpen: false }\n    switch (action.type) {\n      case 'STATS_FETCH_FAILED':\n        return { ...state, lastError: Date.now() }\n      case 'NODE_INFO_OPEN':\n        return { ...state, isNodeInfoOpen: action.payload }\n      default:\n        return state\n    }\n  },\n  ...actions,\n  ...selectors\n}\n\nexport default connected\n","import { createSelector } from 'redux-bundler'\nimport { ACTIONS } from './ipfs-provider'\n\n/**\n * @typedef {import('./ipfs-provider').Message} Message\n * @typedef {Object} Model\n * @property {number} [startedAt]\n * @property {number} [failedAt]\n *\n * @typedef {Object} State\n * @property {Model} retryInit\n */\n\n// We ask for the stats every few seconds, so that gives a good indication\n// that ipfs things are working (or not), without additional polling of the api.\nconst retryInit = {\n  name: 'retryInit',\n\n  /**\n   * @param {Model} state\n   * @param {Message} action\n   * @returns {Model}\n   */\n  reducer: (state = {}, action) => {\n    switch (action.type) {\n      case ACTIONS.IPFS_INIT: {\n        const { task } = action\n        switch (task.status) {\n          case 'Init': {\n            return { ...state, startedAt: Date.now() }\n          }\n          case 'Exit': {\n            if (task.result.ok) {\n              return state\n            } else {\n              return { ...state, failedAt: Date.now() }\n            }\n          }\n          default: {\n            return state\n          }\n        }\n      }\n      default: {\n        return state\n      }\n    }\n  },\n\n  /**\n   * @param {State} state\n   */\n  selectInitStartedAt: state => state.retryInit.startedAt,\n\n  /**\n   * @param {State} state\n   */\n  selectInitFailedAt: state => state.retryInit.failedAt,\n\n  reactConnectionInitRetry: createSelector(\n    'selectAppTime',\n    'selectInitStartedAt',\n    'selectInitFailedAt',\n    /**\n     * @param {number} appTime\n     * @param {number|void} startedAt\n     * @param {number|void} failedAt\n     */\n    (appTime, startedAt, failedAt) => {\n      if (!failedAt || failedAt < startedAt) return false\n      if (appTime - failedAt < 3000) return false\n      return { actionCreator: 'doTryInitIpfs' }\n    }\n  )\n}\n\nexport default retryInit\n","import { createAsyncResourceBundle, createSelector } from 'redux-bundler'\n\nconst bundle = createAsyncResourceBundle({\n  name: 'identity',\n  actionBaseType: 'IDENTITY',\n  getPromise: ({ getIpfs }) => getIpfs().id(),\n  staleAfter: Infinity,\n  persist: false,\n  checkIfOnline: false\n})\n\nbundle.selectIdentityLastSuccess = state => state.identity.lastSuccess\n\n// Update identity after we (re)connect with ipfs\nbundle.reactIdentityFetch = createSelector(\n  'selectIpfsConnected',\n  'selectIdentityIsLoading',\n  'selectIdentityLastSuccess',\n  'selectConnectedLastError',\n  (connected, isLoading, idLastSuccess, connLastError) => {\n    if (connected && !isLoading) {\n      if (!idLastSuccess || connLastError > idLastSuccess) {\n        return { actionCreator: 'doFetchIdentity' }\n      }\n    }\n  }\n)\n\nexport default bundle\n","import { getConfiguredCache } from 'money-clip'\n\nconst bundleCache = getConfiguredCache({\n  name: 'bundle-cache',\n  version: 1,\n  maxAge: Infinity\n})\n\nexport default bundleCache\n","/**\n * @typedef {Object} IPFSDesktop\n * @property {string} version\n * @property {string} countlyDeviceId\n * @property {string[]} countlyActions\n * @property {() => Promise<void|Array<{path:string, size:number, content:AsyncIterable<Uint8Array>}>>} selectDirectory\n * @property {(consent:string[]) => void} removeConsent\n * @property {(consent:string[]) => void} addConsent\n * @property {(language:string) => void} updateLanguage\n */\n// @ts-ignore\n/** @type {{ ipfsDesktop: IPFSDesktop }} */\nconst root = (window)\n\n/**\n * @typedef {import('redux-bundler').Selectors<typeof baseSelectors>} BaseSelectors\n */\n\nconst baseSelectors = {\n  /**\n   * @returns {boolean}\n   */\n  selectIsIpfsDesktop: () => !!root.ipfsDesktop,\n  /**\n   * @returns {string[]}\n   */\n  selectDesktopCountlyActions: () => ([])\n}\n\nconst desktopSelectors = {\n  ...baseSelectors,\n  selectDesktopVersion: () => root.ipfsDesktop.version,\n\n  selectDesktopCountlyDeviceId: () => root.ipfsDesktop.countlyDeviceId,\n\n  selectDesktopCountlyActions: () => root.ipfsDesktop.countlyActions\n}\n\n/**\n * @typedef {import('redux-bundler').Selectors<typeof desktopSelectors>} Selectors\n */\nconst selectors = root.ipfsDesktop\n  ? desktopSelectors\n  : baseSelectors\n\nconst desktopActions = {\n  /**\n   * @param {string[]} consent\n   * @returns {() => void}\n   */\n  doDesktopAddConsent: consent => () => {\n    return root.ipfsDesktop.addConsent(consent)\n  },\n\n  /**\n   * @param {string[]} consent\n   * @returns {() => void}\n   */\n  doDesktopRemoveConsent: consent => () => {\n    return root.ipfsDesktop.removeConsent(consent)\n  },\n\n  /**\n   * @param {string} language\n   * @returns {() => void}\n   */\n  doDesktopUpdateLanguage: language => () => {\n    return root.ipfsDesktop.updateLanguage(language)\n  }\n}\n\n/**\n * @typedef {never} Message\n * @typedef {Object} Model\n * @typedef {Object} State\n * @property {Model} ipfsDesktop\n * @typedef {import('redux-bundler').Actions<typeof desktopActions>} Actions\n * @typedef {Selectors & Actions} Ext\n * @typedef {import('redux-bundler').Context<State, Message, Ext>} Context\n */\n\nconst actions = root.ipfsDesktop\n  ? desktopActions\n  : {}\n\nconst bundle = {\n  name: 'ipfsDesktop',\n  /**\n   * @param {Model} [state]\n   * @returns {Model}\n   */\n  reducer: (state = {}) => state,\n  ...selectors,\n  ...actions\n}\n\nexport default bundle\n","import { createAsyncResourceBundle, createSelector } from 'redux-bundler'\n\nconst bundle = createAsyncResourceBundle({\n  name: 'repoStats',\n  getPromise: async ({ getIpfs }) => {\n    return getIpfs().repo.stat()\n  },\n  staleAfter: 60000,\n  persist: false,\n  checkIfOnline: false\n})\n\nbundle.selectRepoSize = createSelector(\n  'selectRepoStats',\n  (repoStats) => {\n    if (repoStats && repoStats.repoSize) {\n      return repoStats.repoSize.toString()\n    }\n  }\n)\n\nbundle.selectRepoNumObjects = createSelector(\n  'selectRepoStats',\n  (repoStats) => {\n    if (repoStats && repoStats.numObjects) {\n      return repoStats.numObjects.toString()\n    }\n  }\n)\n\n// Fetch the config if we don't have it or it's more than `staleAfter` ms old\nbundle.reactRepoStatsFetch = createSelector(\n  'selectRepoStatsShouldUpdate',\n  'selectIpfsReady',\n  (shouldUpdate, ipfsReady) => {\n    if (shouldUpdate && ipfsReady) {\n      return { actionCreator: 'doFetchRepoStats' }\n    }\n  }\n)\n\nexport default bundle\n","// @ts-check\n\n// @ts-ignore\nimport root from 'window-or-global'\nimport changeCase from 'change-case'\nimport * as Enum from './enum'\nimport { createSelector } from 'redux-bundler'\nimport { ACTIONS as FILES } from './files/consts'\nimport { ACTIONS as CONIFG } from './config-save'\nimport { ACTIONS as INIT } from './ipfs-provider'\nimport { ACTIONS as EXP } from './experiments'\n\n/**\n * @typedef {import('./ipfs-provider').Init} Init\n * @typedef {import('./files/protocol').MakeDir} MakeDir\n * @typedef {import('./files/protocol').Write} Write\n * @typedef {import('./files/protocol').AddByPath} AddByPath\n * @typedef {import('./files/protocol').Move} Move\n * @typedef {import('./files/protocol').Delete} Delete\n * @typedef {import('./files/protocol').DownloadLink} DownloadLink\n * @typedef {import('./config-save').Message} ConfigSave\n * @typedef {import('./experiments').Toggle} ExperimentsToggle\n *\n * @typedef {Object} DesktopSettingToggleStarted\n * @property {'DESKTOP_SETTING_TOGGLE_STARTED'} type\n * @typedef {Object} DesktopSettingToggleFinished\n * @property {'DESKTOP_SETTING_TOGGLE_FINISHED'} type\n * @typedef {Object} DesktopSettingToggleFailed\n * @property {'DESKTOP_SETTING_TOGGLE_FAILED'} type\n *\n * @typedef {import('./experiments').Fail} FailToggle\n * @typedef {import('./experiments').Succeed} SucceedToggle\n * @typedef {import('./experiments').Init} InitToggle\n * @typedef {import('./task').Perform<'DESKTOP_SETTING_TOGGLE', FailToggle, SucceedToggle, InitToggle>} DesktopSettingToggle\n *\n * @typedef {Object} AnalyticsEnabled\n * @property {'ANALYTICS_ENABLED'} type\n * @property {{consent:string[]}} payload\n *\n * @typedef {Object} AnalyticsDisabled\n * @property {'ANALYTICS_DISABLED'} type\n * @property {{consent:string[]}} payload\n *\n * @typedef {Object} RemoveConsent\n * @property {'ANALYTICS_REMOVE_CONSENT'} type\n * @property {{name:string}} payload\n *\n * @typedef {Object} AddConsent\n * @property {'ANALYTICS_ADD_CONSENT'} type\n * @property {{name:string}} payload\n *\n * @typedef {ExperimentsToggle|DesktopSettingToggle} Toggle\n * @typedef {MakeDir|Write|AddByPath|Move|Delete|DownloadLink} FilesMessage\n * @typedef {AnalyticsEnabled|AnalyticsDisabled|RemoveConsent|AddConsent} AnalyticsMessage\n * @typedef {Init|ConfigSave|Toggle|FilesMessage|AnalyticsMessage} Message\n *\n * @typedef {Object} Model\n * @property {number} lastEnabledAt\n * @property {number} lastDisabledAt\n * @property {string[]} consent\n *\n * @typedef {Object} State\n * @property {Model} analytics\n */\n\n// Unknown actions (can't seem to see anything\n// dispatching those).\nconst DESKTOP = Enum.from(['DESKTOP_SETTING_TOGGLE'])\n\n// Local action types\nconst ACTIONS = Enum.from([\n  'ANALYTICS_ENABLED',\n  'ANALYTICS_DISABLED',\n  'ANALYTICS_ADD_CONSENT',\n  'ANALYTICS_REMOVE_CONSENT'\n])\n\n// Only record specific actions listed here.\nconst ASYNC_ACTIONS_TO_RECORD = [\n  INIT.IPFS_INIT,\n  CONIFG.CONFIG_SAVE,\n  FILES.MAKE_DIR,\n  FILES.WRITE,\n  FILES.ADD_BY_PATH,\n  FILES.MOVE,\n  FILES.DELETE,\n  FILES.DOWNLOAD_LINK,\n  EXP.EXPERIMENTS_TOGGLE,\n  DESKTOP.DESKTOP_SETTING_TOGGLE\n]\n\nconst COUNTLY_KEY_WEBUI = '8fa213e6049bff23b08e5f5fbac89e7c27397612'\nconst COUNTLY_KEY_WEBUI_TEST = '700fd825c3b257e021bd9dbc6cbf044d33477531'\n\nfunction pickAppKey () {\n  const isProd = process.env.NODE_ENV === 'production'\n\n  if (root.ipfsDesktop && root.ipfsDesktop.countlyAppKey) {\n    return root.ipfsDesktop.countlyAppKey\n  } else {\n    return isProd ? COUNTLY_KEY_WEBUI : COUNTLY_KEY_WEBUI_TEST\n  }\n}\n\nconst consentGroups = {\n  all: ['sessions', 'events', 'views', 'location', 'crashes'],\n  safe: ['sessions', 'events', 'views', 'location']\n}\n\n/**\n * @param {string|string[]} consent\n * @param {Store} store\n */\nfunction addConsent (consent, store) {\n  root.Countly.q.push(['add_consent', consent])\n\n  if (store.selectIsIpfsDesktop()) {\n    store.doDesktopAddConsent(consent)\n  }\n}\n\n/**\n * @param {string|string[]} consent\n * @param {Store} store\n */\nfunction removeConsent (consent, store) {\n  root.Countly.q.push(['remove_consent', consent])\n\n  if (store.selectIsIpfsDesktop()) {\n    store.doDesktopRemoveConsent(consent)\n  }\n}\n\n/**\n * @typedef {import('redux-bundler').Selectors<typeof selectors>} Selectors\n */\n\nconst selectors = {\n  /**\n   * @param {State} state\n   */\n  selectAnalytics: (state) => state.analytics,\n  /**\n   * @param {State} state\n   */\n  selectAnalyticsConsent: (state) => state.analytics.consent,\n  /**\n   * @param {State} state\n   */\n  selectAnalyticsEnabled: (state) => state.analytics.consent.length > 0,\n  /**\n   * Ask the user if we may enable analytics.\n   * @param {State} state\n   */\n  selectAnalyticsAskToEnable: (state) => {\n    const { lastEnabledAt, lastDisabledAt, consent } = state.analytics\n    // user has not explicitly chosen\n    if (!lastEnabledAt && !lastDisabledAt && consent.length === 0) {\n      // ask to enable.\n      return true\n    }\n    // user has already made an explicit choice; dont ask again.\n    return false\n  },\n\n  selectAnalyticsActionsToRecord: createSelector(\n    'selectIsIpfsDesktop',\n    'selectDesktopCountlyActions',\n    /**\n     * @param {boolean} isDesktop\n     * @param {string[]} desktopActions\n     * @returns {string[]}\n     */\n    (isDesktop, desktopActions) => {\n      return isDesktop\n        ? desktopActions.concat(ASYNC_ACTIONS_TO_RECORD).sort()\n        : Array.from(ASYNC_ACTIONS_TO_RECORD).sort()\n    }\n  )\n}\n\n/**\n * @typedef {import('./ipfs-desktop').Ext} DesktopExt\n * @typedef {import('redux-bundler').Actions<typeof actions>} Actions\n * @typedef {Selectors & Actions & DesktopExt} Ext\n * @typedef {import('redux-bundler').Store<State, Message, Ext>} Store\n * @typedef {import('redux-bundler').Context<State, Message, Ext>} Context\n */\n\nconst actions = {\n  /**\n   * @returns {function(Context):void}\n   */\n  doToggleAnalytics: () => ({ store }) => {\n    const enable = !store.selectAnalyticsEnabled()\n    if (enable) {\n      store.doEnableAnalytics()\n    } else {\n      store.doDisableAnalytics()\n    }\n  },\n  /**\n   * @returns {function(Context):void}\n   */\n  doDisableAnalytics: () => ({ dispatch, store }) => {\n    root.Countly.opt_out()\n    removeConsent(consentGroups.all, store)\n    dispatch({ type: 'ANALYTICS_DISABLED', payload: { consent: [] } })\n  },\n  /**\n   * @returns {function(Context):void}\n   */\n  doEnableAnalytics: () => ({ dispatch, store }) => {\n    removeConsent(consentGroups.all, store)\n    root.Countly.opt_in()\n    addConsent(consentGroups.safe, store)\n    dispatch({ type: 'ANALYTICS_ENABLED', payload: { consent: consentGroups.safe } })\n  },\n  /**\n   * @param {string} name\n   * @returns {function(Context):void}\n   */\n  doToggleConsent: (name) => ({ store }) => {\n    const isEnabled = store.selectAnalyticsConsent().includes(name)\n    if (isEnabled) {\n      store.doRemoveConsent(name)\n    } else {\n      store.doAddConsent(name)\n    }\n  },\n  /**\n   * @param {string} name\n   * @returns {function(Context):void}\n   */\n  doRemoveConsent: (name) => ({ dispatch, store }) => {\n    const existingConsents = store.selectAnalyticsConsent()\n    const remainingConsents = existingConsents.filter(item => item !== name)\n    // Ensure the users is fully opted out of analytics if they remove all consents.\n    // This means the consent removal event is not sent to countly, which is good.\n    // If a user tells us to send nothing, we send nothing.\n    // see: https://github.com/ipfs/ipfs-webui/issues/1041\n    if (remainingConsents.length === 0) {\n      root.Countly.opt_out()\n    }\n    removeConsent(name, store)\n    dispatch({ type: 'ANALYTICS_REMOVE_CONSENT', payload: { name } })\n  },\n  /**\n   * @param {string} name\n   * @returns {function(Context):void}\n   */\n  doAddConsent: (name) => ({ dispatch, store }) => {\n    const existingConsents = store.selectAnalyticsConsent()\n    if (existingConsents.length === 0) {\n      // Going from 0 to 1 consents opts you in to analytics\n      root.Countly.opt_in()\n    }\n    addConsent(name, store)\n    dispatch({ type: 'ANALYTICS_ADD_CONSENT', payload: { name } })\n  }\n}\n\nconst createAnalyticsBundle = ({\n  countlyUrl = 'https://countly.ipfs.io',\n  countlyAppKey = pickAppKey(),\n  appVersion = process.env.REACT_APP_VERSION,\n  // @ts-ignore - declared but never used\n  appGitRevision = process.env.REACT_APP_GIT_REV,\n  debug = false\n}) => {\n  return {\n    name: 'analytics',\n\n    persistActions: [\n      ACTIONS.ANALYTICS_ENABLED,\n      ACTIONS.ANALYTICS_DISABLED,\n      ACTIONS.ANALYTICS_DISABLED,\n      ACTIONS.ANALYTICS_ADD_CONSENT,\n      ACTIONS.ANALYTICS_REMOVE_CONSENT\n    ],\n\n    /**\n     * @param {Store} store\n     */\n    init: async (store) => {\n      // test code sets a mock Counly instance on the global.\n      if (!root.Countly) {\n        root.Countly = {}\n        root.Countly.q = []\n        // @ts-ignore\n        await import('countly-sdk-web')\n      }\n      const Countly = root.Countly\n\n      Countly.require_consent = true\n      Countly.url = countlyUrl\n      Countly.app_key = countlyAppKey\n      Countly.app_version = appVersion\n      Countly.debug = debug\n\n      if (store.selectIsIpfsDesktop()) {\n        Countly.app_version = store.selectDesktopVersion()\n        Countly.q.push(['change_id', store.selectDesktopCountlyDeviceId(), true])\n      }\n\n      // Configure what to track. Nothing is sent without user consent.\n      Countly.q.push(['track_sessions'])\n      Countly.q.push(['track_errors'])\n\n      // Don't track clicks or links as it can include full url.\n      // Countly.q.push(['track_clicks'])\n      // Countly.q.push(['track_links'])\n\n      if (store.selectAnalyticsEnabled()) {\n        const consent = store.selectAnalyticsConsent()\n        addConsent(consent, store)\n      }\n\n      store.subscribeToSelectors(['selectRouteInfo'], ({ routeInfo }) => {\n        // skip routes with no hash, as we'll be immediately redirected to `/#`\n        if (!root.location || !root.location.hash) return\n        /*\n        By tracking the pattern rather than the window.location, we limit the info\n        we collect to just the app sections that are viewed, and avoid recording\n        specific CIDs or local repo paths that would contain personal information.\n        */\n        root.Countly.q.push(['track_pageview', routeInfo.pattern])\n      })\n\n      Countly.init()\n    },\n\n    // Listen to redux actions\n    getMiddleware: () => () => {\n      /**\n       * @param {function(Message):void} next\n       * @returns {function(Message):void}\n       */\n      const middleware = next => action => {\n        const payload = parseTask(action)\n        if (payload) {\n          const { id, duration, error } = payload\n          root.Countly.q.push(['add_event', {\n            key: id,\n            count: 1,\n            dur: duration\n          }])\n\n          // Record errors. Only from explicitly selected actions.\n          if (error) {\n            root.Countly.q.push(['add_log', action.type])\n            root.Countly.q.push(['log_error', error])\n          }\n        }\n\n        return next(action)\n      }\n\n      return middleware\n    },\n\n    /**\n     * @param {Model|void} state\n     * @param {Message} action\n     * @returns {Model}\n     */\n    reducer: (state, action) => {\n      state = state || {\n        lastEnabledAt: 0,\n        lastDisabledAt: 0,\n        consent: []\n      }\n\n      switch (action.type) {\n        case ACTIONS.ANALYTICS_ENABLED:\n          return { ...state, lastEnabledAt: Date.now(), consent: action.payload.consent }\n        case ACTIONS.ANALYTICS_DISABLED:\n          return { ...state, lastDisabledAt: Date.now(), consent: action.payload.consent }\n        case ACTIONS.ANALYTICS_ADD_CONSENT: {\n          const consent = state.consent.filter(item => item !== action.payload.name).concat(action.payload.name)\n          return { ...state, lastEnabledAt: Date.now(), consent }\n        }\n        case ACTIONS.ANALYTICS_REMOVE_CONSENT: {\n          const consent = state.consent.filter(item => item !== action.payload.name)\n          const lastDisabledAt = (consent.length === 0) ? Date.now() : state.lastDisabledAt\n          return { ...state, lastDisabledAt, consent }\n        }\n        default: {\n          // deal with missing consent state from 2.4.0 release.\n          if (!state.consent) {\n            if (state.lastEnabledAt > state.lastDisabledAt) {\n              return { ...state, consent: consentGroups.safe }\n            } else {\n              return { ...state, consent: [] }\n            }\n          }\n\n          return state\n        }\n      }\n    },\n\n    ...selectors,\n\n    ...actions\n  }\n}\n\n/**\n * @param {Message} action\n */\nconst parseTask = (action) => {\n  switch (action.type) {\n    case FILES.MAKE_DIR:\n    case FILES.WRITE:\n    case FILES.ADD_BY_PATH:\n    case FILES.MOVE:\n    case FILES.DELETE:\n    case FILES.DOWNLOAD_LINK:\n    case INIT.IPFS_INIT:\n    case CONIFG.CONFIG_SAVE:\n      return parseTaskResult(action.task, action.type)\n    case EXP.EXPERIMENTS_TOGGLE:\n      return parseToggleResult(action.task, 'EXPERIMENTS')\n    case DESKTOP.DESKTOP_SETTING_TOGGLE:\n      return parseToggleResult(action.task, 'DESKTOP_SETTING')\n    default:\n      return null\n  }\n}\n\n/**\n * @param {Init['task']|ConfigSave['task']|FilesMessage['task']} task\n * @param {string} name\n */\nconst parseTaskResult = (task, name) => {\n  if (task.status === 'Exit') {\n    const { duration, result } = task\n    const id = result.ok ? name : `${name}_FAILED`\n    const error = result.ok ? null : result.error\n    return { id, duration, error }\n  } else {\n    return null\n  }\n}\n\n/**\n * @param {Toggle['task']} task\n * @param {string} name\n */\nconst parseToggleResult = (task, name) => {\n  if (task.status === 'Exit') {\n    const { result, duration } = task\n    const { key } = result.ok ? result.value : result.error\n    const error = result.ok ? null : result.error\n    const status = !result.ok\n      ? 'FAILED'\n      : result.value.value\n        ? 'ENABLED'\n        : 'DISABLED'\n\n    const id = `${name}_${changeCase.constantCase(key)}_${status}`\n\n    return { id, duration, error }\n  }\n  return null\n}\n\nexport default createAnalyticsBundle\n","import { createAsyncResourceBundle, createSelector } from 'redux-bundler'\n\nconst bundle = createAsyncResourceBundle({\n  name: 'cliTutorMode',\n  actionBaseType: 'CLI_TUTOR_MODE_TOGGLE',\n  persist: true,\n  checkIfOnline: false,\n  getPromise: () => {}\n})\n\nbundle.reactIsCliTutorModeEnabled = createSelector(\n  'selectIsCliTutorModeEnabled',\n  (isCliTutorModeEnabled) => {\n    const isEnabled = Boolean(JSON.parse(localStorage.getItem('isCliTutorModeEnabled')))\n\n    if (isCliTutorModeEnabled !== undefined && isCliTutorModeEnabled !== isEnabled) {\n      localStorage.setItem('isCliTutorModeEnabled', isCliTutorModeEnabled)\n    }\n  }\n)\n\nbundle.selectIsCliTutorModeEnabled = state => state.cliTutorMode.isCliTutorModeEnabled\n\nbundle.selectIsCliTutorModalOpen = state => !!state.cliTutorMode.showCliTutorModal\n\nbundle.selectCliOptions = state => state.cliTutorMode.cliOptions\n\nbundle.reducer = (state = {}, action) => {\n  if (action.type === 'CLI_TUTOR_MODE_TOGGLE') {\n    return { ...state, isCliTutorModeEnabled: action.payload }\n  }\n  if (action.type === 'CLI_TUTOR_MODAL_ENABLE') {\n    return { ...state, showCliTutorModal: action.payload }\n  }\n  if (action.type === 'CLI_OPTIONS') {\n    return { ...state, cliOptions: action.payload }\n  }\n\n  return state\n}\n\nbundle.doToggleCliTutorMode = key => ({ dispatch }) => {\n  dispatch({\n    type: 'CLI_TUTOR_MODE_TOGGLE',\n    payload: key\n  })\n}\n\nbundle.doSetCliOptions = cliOptions => ({ dispatch }) => {\n  dispatch({\n    type: 'CLI_OPTIONS',\n    payload: cliOptions\n  })\n}\n\nbundle.doOpenCliTutorModal = openModal => ({ dispatch }) => {\n  dispatch({\n    type: 'CLI_TUTOR_MODAL_ENABLE',\n    payload: openModal\n  })\n}\n\nbundle.doOpenCliTutorModal = openModal => ({ dispatch }) => {\n  dispatch({\n    type: 'CLI_TUTOR_MODAL_ENABLE',\n    payload: openModal\n  })\n}\n\nbundle.init = store => {\n  const isEnabled = Boolean(JSON.parse(localStorage.getItem('isCliTutorModeEnabled')))\n  return store.doToggleCliTutorMode(isEnabled)\n}\nexport default bundle\n","import { composeBundles, createCacheBundle } from 'redux-bundler'\nimport ipfsProvider from './ipfs-provider'\nimport { exploreBundle } from 'ipld-explorer-components'\nimport appIdle from './app-idle'\nimport nodeBandwidthChartBundle from './node-bandwidth-chart'\nimport nodeBandwidthBundle from './node-bandwidth'\nimport peersBundle from './peers'\nimport peerLocationsBundle from './peer-locations'\nimport pinningBundle from './pinning'\nimport routesBundle from './routes'\nimport redirectsBundle from './redirects'\nimport filesBundle from './files'\nimport configBundle from './config'\nimport configSaveBundle from './config-save'\nimport toursBundle from './tours'\nimport notifyBundle from './notify'\nimport connectedBundle from './connected'\nimport retryInitBundle from './retry-init'\nimport identityBundle from './identity'\nimport bundleCache from '../lib/bundle-cache'\nimport ipfsDesktop from './ipfs-desktop'\nimport repoStats from './repo-stats'\nimport createAnalyticsBundle from './analytics'\nimport experimentsBundle from './experiments'\nimport cliTutorModeBundle from './cli-tutor-mode'\nimport gatewayBundle from './gateway'\n\nexport default composeBundles(\n  createCacheBundle({\n    cacheFn: bundleCache.set\n  }),\n  appIdle({ idleTimeout: 5000 }),\n  ipfsProvider,\n  identityBundle,\n  routesBundle,\n  redirectsBundle,\n  toursBundle,\n  filesBundle(),\n  exploreBundle(),\n  configBundle,\n  configSaveBundle,\n  gatewayBundle,\n  nodeBandwidthBundle,\n  nodeBandwidthChartBundle(),\n  peersBundle,\n  peerLocationsBundle(),\n  pinningBundle,\n  notifyBundle,\n  connectedBundle,\n  retryInitBundle,\n  experimentsBundle,\n  ipfsDesktop,\n  repoStats,\n  cliTutorModeBundle,\n  createAnalyticsBundle({})\n)\n","import { getFilesFromDataTransferItems } from 'datatransfer-files-promise'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\n// If you drop a dir \"foo\" which contains \"cat.jpg\" & \"dog.png\" we receive a\n// single item in the `event.dataTransfer.items` for the directory.\n//\n// We use 'datatransfer-files-promise' to map the dir tree to a flat list of\n// FileSystemEntry objects, each with a filepath propety, that captures the\n// files relative path within the dir that was dropped.\n//\n// so the \"foo\" becomes:\n// [\n//  { filepath: 'foo/cat.jpg' name: 'cat.jpg', size: Number },\n//  { filepath: 'foo/dog.png' name: 'dog.png', size: Number }\n// ]\n//\n// Which is a useful shape for passing to ipfs.add, with the caveat that each\n// FileSystemEntry object must be passed to pull-file-reader or similar to\n// convert to a stream style that ipfs.add accepts.\n//\n// ReactDnD doesn't give the calling code access to the `event.dataTransfer.items`\n// so we have to work around it here by plugin a custom drop handler that does\n// the work to map from a dir entry to a flat list of files and then stash it on\n//  a custom `filesPromise` prop on the return object, which we check for in our\n//  dropTarget drop handler functions.\n//\n// See: https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry\n// See: https://github.com/grabantot/datatransfer-files-promise/blob/72b6cc763f9b400c59197bcc787268965310c260/index.js\nconst createBackend = (manager) => {\n  const backend = HTML5Backend(manager)\n  const handler = backend.handleTopDropCapture\n  backend.handleTopDropCapture = (event) => {\n    handler.call(backend, event)\n    if (backend.currentNativeSource && event.dataTransfer.items) {\n      // Prevent handling drag & drop of text inside webui\n      if ([...event.dataTransfer.items].every(({ kind }) => kind === 'string')) return\n\n      const filesPromise = getFilesFromDataTransferItems(event.dataTransfer.items)\n      backend.currentNativeSource.item.filesPromise = filesPromise\n    }\n  }\n  return backend\n}\nexport default createBackend\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'redux-bundler-react'\nimport './index.css'\nimport 'react-virtualized/styles.css'\nimport App from './App'\nimport getStore from './bundles'\nimport bundleCache from './lib/bundle-cache'\nimport { I18nextProvider } from 'react-i18next'\nimport i18n from './i18n'\nimport { DndProvider } from 'react-dnd'\nimport DndBackend from './lib/dnd-backend'\n\nconst appVersion = process.env.REACT_APP_VERSION\nconst gitRevision = process.env.REACT_APP_GIT_REV\n\nconsole.log(`IPFS Web UI - v${appVersion} - https://github.com/ipfs-shipyard/ipfs-webui/commit/${gitRevision}`)\n\nasync function render () {\n  const initialData = await bundleCache.getAll()\n  if (initialData && process.env.NODE_ENV !== 'production') {\n    console.log('intialising store with data from cache', initialData)\n  }\n  const store = getStore(initialData)\n  ReactDOM.render(\n    <Provider store={store}>\n      <I18nextProvider i18n={i18n} >\n        <DndProvider backend={DndBackend}>\n          <App />\n        </DndProvider>\n      </I18nextProvider>\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrender()\n"],"sourceRoot":""}